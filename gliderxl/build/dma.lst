ARM GAS  /tmp/ccWGgnz2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"dma.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_DMA_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_DMA_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_DMA_Init:
  26              	.LFB329:
  27              		.file 1 "Core/Src/dma.c"
   1:Core/Src/dma.c **** /**
   2:Core/Src/dma.c ****   ******************************************************************************
   3:Core/Src/dma.c ****   * @file    dma.c
   4:Core/Src/dma.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/dma.c ****   *          of all the requested memory to memory DMA transfers.
   6:Core/Src/dma.c ****   ******************************************************************************
   7:Core/Src/dma.c ****   * @attention
   8:Core/Src/dma.c ****   *
   9:Core/Src/dma.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/dma.c ****   * All rights reserved.</center></h2>
  11:Core/Src/dma.c ****   *
  12:Core/Src/dma.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/dma.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/dma.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/dma.c ****   *                             www.st.com/SLA0044
  16:Core/Src/dma.c ****   *
  17:Core/Src/dma.c ****   ******************************************************************************
  18:Core/Src/dma.c ****   */
  19:Core/Src/dma.c **** 
  20:Core/Src/dma.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/dma.c **** #include "dma.h"
  22:Core/Src/dma.c **** 
  23:Core/Src/dma.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/dma.c **** 
  25:Core/Src/dma.c **** /* USER CODE END 0 */
  26:Core/Src/dma.c **** 
  27:Core/Src/dma.c **** /*----------------------------------------------------------------------------*/
  28:Core/Src/dma.c **** /* Configure DMA                                                              */
  29:Core/Src/dma.c **** /*----------------------------------------------------------------------------*/
  30:Core/Src/dma.c **** 
  31:Core/Src/dma.c **** /* USER CODE BEGIN 1 */
ARM GAS  /tmp/ccWGgnz2.s 			page 2


  32:Core/Src/dma.c **** 
  33:Core/Src/dma.c **** /* USER CODE END 1 */
  34:Core/Src/dma.c **** 
  35:Core/Src/dma.c **** /**
  36:Core/Src/dma.c ****   * Enable DMA controller clock
  37:Core/Src/dma.c ****   */
  38:Core/Src/dma.c **** void MX_DMA_Init(void)
  39:Core/Src/dma.c **** {
  28              		.loc 1 39 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39              	.LBB2:
  40:Core/Src/dma.c **** 
  41:Core/Src/dma.c ****   /* DMA controller clock enable */
  42:Core/Src/dma.c ****   __HAL_RCC_DMAMUX1_CLK_ENABLE();
  40              		.loc 1 42 0
  41 0004 124B     		ldr	r3, .L3
  42 0006 9A6C     		ldr	r2, [r3, #72]
  43 0008 42F00402 		orr	r2, r2, #4
  44 000c 9A64     		str	r2, [r3, #72]
  45 000e 9A6C     		ldr	r2, [r3, #72]
  46 0010 02F00402 		and	r2, r2, #4
  47 0014 0092     		str	r2, [sp]
  48 0016 009A     		ldr	r2, [sp]
  49              	.LBE2:
  50              	.LBB3:
  43:Core/Src/dma.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
  51              		.loc 1 43 0
  52 0018 9A6C     		ldr	r2, [r3, #72]
  53 001a 42F00102 		orr	r2, r2, #1
  54 001e 9A64     		str	r2, [r3, #72]
  55 0020 9B6C     		ldr	r3, [r3, #72]
  56 0022 03F00103 		and	r3, r3, #1
  57 0026 0193     		str	r3, [sp, #4]
  58 0028 019B     		ldr	r3, [sp, #4]
  59              	.LBE3:
  44:Core/Src/dma.c **** 
  45:Core/Src/dma.c ****   /* DMA interrupt init */
  46:Core/Src/dma.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
  47:Core/Src/dma.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
  60              		.loc 1 47 0
  61 002a 0022     		movs	r2, #0
  62 002c 1146     		mov	r1, r2
  63 002e 0C20     		movs	r0, #12
  64 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  65              	.LVL0:
  48:Core/Src/dma.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
  66              		.loc 1 48 0
  67 0034 0C20     		movs	r0, #12
ARM GAS  /tmp/ccWGgnz2.s 			page 3


  68 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  69              	.LVL1:
  49:Core/Src/dma.c ****   /* DMA1_Channel3_IRQn interrupt configuration */
  50:Core/Src/dma.c ****   HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
  70              		.loc 1 50 0
  71 003a 0022     		movs	r2, #0
  72 003c 1146     		mov	r1, r2
  73 003e 0D20     		movs	r0, #13
  74 0040 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  75              	.LVL2:
  51:Core/Src/dma.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
  76              		.loc 1 51 0
  77 0044 0D20     		movs	r0, #13
  78 0046 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  79              	.LVL3:
  52:Core/Src/dma.c **** 
  53:Core/Src/dma.c **** }
  80              		.loc 1 53 0
  81 004a 03B0     		add	sp, sp, #12
  82              	.LCFI2:
  83              		.cfi_def_cfa_offset 4
  84              		@ sp needed
  85 004c 5DF804FB 		ldr	pc, [sp], #4
  86              	.L4:
  87              		.align	2
  88              	.L3:
  89 0050 00100240 		.word	1073876992
  90              		.cfi_endproc
  91              	.LFE329:
  93              		.text
  94              	.Letext0:
  95              		.file 2 "/usr/include/newlib/machine/_default_types.h"
  96              		.file 3 "/usr/include/newlib/sys/_stdint.h"
  97              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
  98              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
  99              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h"
 100              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 101              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 102              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 103              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 104              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
ARM GAS  /tmp/ccWGgnz2.s 			page 4


DEFINED SYMBOLS
                            *ABS*:0000000000000000 dma.c
     /tmp/ccWGgnz2.s:18     .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccWGgnz2.s:25     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccWGgnz2.s:89     .text.MX_DMA_Init:0000000000000050 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
