ARM GAS  /tmp/ccikzOye.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB329:
  27              		.file 1 "Core/Src/stm32g4xx_it.c"
   1:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32g4xx_it.c **** /**
   3:Core/Src/stm32g4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32g4xx_it.c ****   * @file    stm32g4xx_it.c
   5:Core/Src/stm32g4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32g4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32g4xx_it.c ****   * @attention
   8:Core/Src/stm32g4xx_it.c ****   *
   9:Core/Src/stm32g4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32g4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32g4xx_it.c ****   *
  12:Core/Src/stm32g4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32g4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32g4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32g4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32g4xx_it.c ****   *
  17:Core/Src/stm32g4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32g4xx_it.c ****   */
  19:Core/Src/stm32g4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32g4xx_it.c **** 
  21:Core/Src/stm32g4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32g4xx_it.c **** #include "main.h"
  23:Core/Src/stm32g4xx_it.c **** #include "stm32g4xx_it.h"
  24:Core/Src/stm32g4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32g4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32g4xx_it.c **** 
  28:Core/Src/stm32g4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32g4xx_it.c **** 
  31:Core/Src/stm32g4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccikzOye.s 			page 2


  32:Core/Src/stm32g4xx_it.c **** 
  33:Core/Src/stm32g4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32g4xx_it.c **** #define LINEMAX 200 // Maximal allowed/expected line length
  36:Core/Src/stm32g4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32g4xx_it.c **** 
  38:Core/Src/stm32g4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32g4xx_it.c **** 
  41:Core/Src/stm32g4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32g4xx_it.c **** 
  43:Core/Src/stm32g4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32g4xx_it.c **** 
  46:Core/Src/stm32g4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32g4xx_it.c **** 
  48:Core/Src/stm32g4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32g4xx_it.c **** 
  51:Core/Src/stm32g4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32g4xx_it.c **** 
  53:Core/Src/stm32g4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32g4xx_it.c **** 
  56:Core/Src/stm32g4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32g4xx_it.c **** 
  58:Core/Src/stm32g4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32g4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  60:Core/Src/stm32g4xx_it.c **** extern DAC_HandleTypeDef hdac3;
  61:Core/Src/stm32g4xx_it.c **** extern DMA_HandleTypeDef hdma_spi3_rx;
  62:Core/Src/stm32g4xx_it.c **** extern DMA_HandleTypeDef hdma_spi3_tx;
  63:Core/Src/stm32g4xx_it.c **** extern UART_HandleTypeDef huart1;
  64:Core/Src/stm32g4xx_it.c **** extern TIM_HandleTypeDef htim6;
  65:Core/Src/stm32g4xx_it.c **** 
  66:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN EV */
  67:Core/Src/stm32g4xx_it.c **** //extern char strbuf[200];
  68:Core/Src/stm32g4xx_it.c **** //extern int buflen = 0;
  69:Core/Src/stm32g4xx_it.c **** /* USER CODE END EV */
  70:Core/Src/stm32g4xx_it.c **** 
  71:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32g4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  73:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32g4xx_it.c **** /**
  75:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  76:Core/Src/stm32g4xx_it.c ****   */
  77:Core/Src/stm32g4xx_it.c **** void NMI_Handler(void)
  78:Core/Src/stm32g4xx_it.c **** {
  28              		.loc 1 78 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE329:
ARM GAS  /tmp/ccikzOye.s 			page 3


  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB330:
  79:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32g4xx_it.c **** 
  81:Core/Src/stm32g4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  82:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32g4xx_it.c ****   while (1)
  84:Core/Src/stm32g4xx_it.c ****   {
  85:Core/Src/stm32g4xx_it.c ****   }
  86:Core/Src/stm32g4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  87:Core/Src/stm32g4xx_it.c **** }
  88:Core/Src/stm32g4xx_it.c **** 
  89:Core/Src/stm32g4xx_it.c **** /**
  90:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  91:Core/Src/stm32g4xx_it.c ****   */
  92:Core/Src/stm32g4xx_it.c **** void HardFault_Handler(void)
  93:Core/Src/stm32g4xx_it.c **** {
  49              		.loc 1 93 0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L4:
  56 0000 FEE7     		b	.L4
  57              		.cfi_endproc
  58              	.LFE330:
  60              		.section	.text.MemManage_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	MemManage_Handler:
  69              	.LFB331:
  94:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  95:Core/Src/stm32g4xx_it.c **** 
  96:Core/Src/stm32g4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  97:Core/Src/stm32g4xx_it.c ****   while (1)
  98:Core/Src/stm32g4xx_it.c ****   {
  99:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 100:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 101:Core/Src/stm32g4xx_it.c ****   }
 102:Core/Src/stm32g4xx_it.c **** }
 103:Core/Src/stm32g4xx_it.c **** 
 104:Core/Src/stm32g4xx_it.c **** /**
 105:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Memory management fault.
 106:Core/Src/stm32g4xx_it.c ****   */
 107:Core/Src/stm32g4xx_it.c **** void MemManage_Handler(void)
ARM GAS  /tmp/ccikzOye.s 			page 4


 108:Core/Src/stm32g4xx_it.c **** {
  70              		.loc 1 108 0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.L6:
  77 0000 FEE7     		b	.L6
  78              		.cfi_endproc
  79              	.LFE331:
  81              		.section	.text.BusFault_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	BusFault_Handler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	BusFault_Handler:
  90              	.LFB332:
 109:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 110:Core/Src/stm32g4xx_it.c **** 
 111:Core/Src/stm32g4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 112:Core/Src/stm32g4xx_it.c ****   while (1)
 113:Core/Src/stm32g4xx_it.c ****   {
 114:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 116:Core/Src/stm32g4xx_it.c ****   }
 117:Core/Src/stm32g4xx_it.c **** }
 118:Core/Src/stm32g4xx_it.c **** 
 119:Core/Src/stm32g4xx_it.c **** /**
 120:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 121:Core/Src/stm32g4xx_it.c ****   */
 122:Core/Src/stm32g4xx_it.c **** void BusFault_Handler(void)
 123:Core/Src/stm32g4xx_it.c **** {
  91              		.loc 1 123 0
  92              		.cfi_startproc
  93              		@ Volatile: function does not return.
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.L8:
  98 0000 FEE7     		b	.L8
  99              		.cfi_endproc
 100              	.LFE332:
 102              		.section	.text.UsageFault_Handler,"ax",%progbits
 103              		.align	1
 104              		.global	UsageFault_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	UsageFault_Handler:
 111              	.LFB333:
 124:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 125:Core/Src/stm32g4xx_it.c **** 
 126:Core/Src/stm32g4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
ARM GAS  /tmp/ccikzOye.s 			page 5


 127:Core/Src/stm32g4xx_it.c ****   while (1)
 128:Core/Src/stm32g4xx_it.c ****   {
 129:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 130:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 131:Core/Src/stm32g4xx_it.c ****   }
 132:Core/Src/stm32g4xx_it.c **** }
 133:Core/Src/stm32g4xx_it.c **** 
 134:Core/Src/stm32g4xx_it.c **** /**
 135:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 136:Core/Src/stm32g4xx_it.c ****   */
 137:Core/Src/stm32g4xx_it.c **** void UsageFault_Handler(void)
 138:Core/Src/stm32g4xx_it.c **** {
 112              		.loc 1 138 0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.L10:
 119 0000 FEE7     		b	.L10
 120              		.cfi_endproc
 121              	.LFE333:
 123              		.section	.text.SVC_Handler,"ax",%progbits
 124              		.align	1
 125              		.global	SVC_Handler
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	SVC_Handler:
 132              	.LFB334:
 139:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 140:Core/Src/stm32g4xx_it.c **** 
 141:Core/Src/stm32g4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 142:Core/Src/stm32g4xx_it.c ****   while (1)
 143:Core/Src/stm32g4xx_it.c ****   {
 144:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 146:Core/Src/stm32g4xx_it.c ****   }
 147:Core/Src/stm32g4xx_it.c **** }
 148:Core/Src/stm32g4xx_it.c **** 
 149:Core/Src/stm32g4xx_it.c **** /**
 150:Core/Src/stm32g4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 151:Core/Src/stm32g4xx_it.c ****   */
 152:Core/Src/stm32g4xx_it.c **** void SVC_Handler(void)
 153:Core/Src/stm32g4xx_it.c **** {
 133              		.loc 1 153 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 154:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 155:Core/Src/stm32g4xx_it.c **** 
 156:Core/Src/stm32g4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 157:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 158:Core/Src/stm32g4xx_it.c **** 
 159:Core/Src/stm32g4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
ARM GAS  /tmp/ccikzOye.s 			page 6


 160:Core/Src/stm32g4xx_it.c **** }
 138              		.loc 1 160 0
 139 0000 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE334:
 143              		.section	.text.DebugMon_Handler,"ax",%progbits
 144              		.align	1
 145              		.global	DebugMon_Handler
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	DebugMon_Handler:
 152              	.LFB335:
 161:Core/Src/stm32g4xx_it.c **** 
 162:Core/Src/stm32g4xx_it.c **** /**
 163:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Debug monitor.
 164:Core/Src/stm32g4xx_it.c ****   */
 165:Core/Src/stm32g4xx_it.c **** void DebugMon_Handler(void)
 166:Core/Src/stm32g4xx_it.c **** {
 153              		.loc 1 166 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 167:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 168:Core/Src/stm32g4xx_it.c **** 
 169:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 170:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 171:Core/Src/stm32g4xx_it.c **** 
 172:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 173:Core/Src/stm32g4xx_it.c **** }
 158              		.loc 1 173 0
 159 0000 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE335:
 163              		.section	.text.PendSV_Handler,"ax",%progbits
 164              		.align	1
 165              		.global	PendSV_Handler
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	PendSV_Handler:
 172              	.LFB336:
 174:Core/Src/stm32g4xx_it.c **** 
 175:Core/Src/stm32g4xx_it.c **** /**
 176:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Pendable request for system service.
 177:Core/Src/stm32g4xx_it.c ****   */
 178:Core/Src/stm32g4xx_it.c **** void PendSV_Handler(void)
 179:Core/Src/stm32g4xx_it.c **** {
 173              		.loc 1 179 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 180:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
ARM GAS  /tmp/ccikzOye.s 			page 7


 181:Core/Src/stm32g4xx_it.c **** 
 182:Core/Src/stm32g4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 183:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 184:Core/Src/stm32g4xx_it.c **** 
 185:Core/Src/stm32g4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 186:Core/Src/stm32g4xx_it.c **** }
 178              		.loc 1 186 0
 179 0000 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE336:
 183              		.section	.text.SysTick_Handler,"ax",%progbits
 184              		.align	1
 185              		.global	SysTick_Handler
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	SysTick_Handler:
 192              	.LFB337:
 187:Core/Src/stm32g4xx_it.c **** 
 188:Core/Src/stm32g4xx_it.c **** /**
 189:Core/Src/stm32g4xx_it.c ****   * @brief This function handles System tick timer.
 190:Core/Src/stm32g4xx_it.c ****   */
 191:Core/Src/stm32g4xx_it.c **** void SysTick_Handler(void)
 192:Core/Src/stm32g4xx_it.c **** {
 193              		.loc 1 192 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 193:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 194:Core/Src/stm32g4xx_it.c **** 
 195:Core/Src/stm32g4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 196:Core/Src/stm32g4xx_it.c **** 
 197:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 198:Core/Src/stm32g4xx_it.c **** 
 199:Core/Src/stm32g4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 200:Core/Src/stm32g4xx_it.c **** }
 198              		.loc 1 200 0
 199 0000 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE337:
 203              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 204              		.align	1
 205              		.global	DMA1_Channel2_IRQHandler
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	DMA1_Channel2_IRQHandler:
 212              	.LFB338:
 201:Core/Src/stm32g4xx_it.c **** 
 202:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
 203:Core/Src/stm32g4xx_it.c **** /* STM32G4xx Peripheral Interrupt Handlers                                    */
 204:Core/Src/stm32g4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 205:Core/Src/stm32g4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 206:Core/Src/stm32g4xx_it.c **** /* please refer to the startup file (startup_stm32g4xx.s).                    */
ARM GAS  /tmp/ccikzOye.s 			page 8


 207:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
 208:Core/Src/stm32g4xx_it.c **** 
 209:Core/Src/stm32g4xx_it.c **** /**
 210:Core/Src/stm32g4xx_it.c ****   * @brief This function handles DMA1 channel2 global interrupt.
 211:Core/Src/stm32g4xx_it.c ****   */
 212:Core/Src/stm32g4xx_it.c **** void DMA1_Channel2_IRQHandler(void)
 213:Core/Src/stm32g4xx_it.c **** {
 213              		.loc 1 213 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 08B5     		push	{r3, lr}
 218              	.LCFI0:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 3, -8
 221              		.cfi_offset 14, -4
 214:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
 215:Core/Src/stm32g4xx_it.c **** 
 216:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 0 */
 217:Core/Src/stm32g4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi3_rx);
 222              		.loc 1 217 0
 223 0002 0248     		ldr	r0, .L17
 224 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 225              	.LVL0:
 218:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
 219:Core/Src/stm32g4xx_it.c **** 
 220:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 1 */
 221:Core/Src/stm32g4xx_it.c **** }
 226              		.loc 1 221 0
 227 0008 08BD     		pop	{r3, pc}
 228              	.L18:
 229 000a 00BF     		.align	2
 230              	.L17:
 231 000c 00000000 		.word	hdma_spi3_rx
 232              		.cfi_endproc
 233              	.LFE338:
 235              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 236              		.align	1
 237              		.global	DMA1_Channel3_IRQHandler
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	DMA1_Channel3_IRQHandler:
 244              	.LFB339:
 222:Core/Src/stm32g4xx_it.c **** 
 223:Core/Src/stm32g4xx_it.c **** /**
 224:Core/Src/stm32g4xx_it.c ****   * @brief This function handles DMA1 channel3 global interrupt.
 225:Core/Src/stm32g4xx_it.c ****   */
 226:Core/Src/stm32g4xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 227:Core/Src/stm32g4xx_it.c **** {
 245              		.loc 1 227 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 08B5     		push	{r3, lr}
 250              	.LCFI1:
ARM GAS  /tmp/ccikzOye.s 			page 9


 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 3, -8
 253              		.cfi_offset 14, -4
 228:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 229:Core/Src/stm32g4xx_it.c **** 
 230:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 231:Core/Src/stm32g4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi3_tx);
 254              		.loc 1 231 0
 255 0002 0248     		ldr	r0, .L21
 256 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 257              	.LVL1:
 232:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
 233:Core/Src/stm32g4xx_it.c **** 
 234:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 235:Core/Src/stm32g4xx_it.c **** }
 258              		.loc 1 235 0
 259 0008 08BD     		pop	{r3, pc}
 260              	.L22:
 261 000a 00BF     		.align	2
 262              	.L21:
 263 000c 00000000 		.word	hdma_spi3_tx
 264              		.cfi_endproc
 265              	.LFE339:
 267              		.section	.text.USB_LP_IRQHandler,"ax",%progbits
 268              		.align	1
 269              		.global	USB_LP_IRQHandler
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	USB_LP_IRQHandler:
 276              	.LFB340:
 236:Core/Src/stm32g4xx_it.c **** 
 237:Core/Src/stm32g4xx_it.c **** /**
 238:Core/Src/stm32g4xx_it.c ****   * @brief This function handles USB low priority interrupt remap.
 239:Core/Src/stm32g4xx_it.c ****   */
 240:Core/Src/stm32g4xx_it.c **** void USB_LP_IRQHandler(void)
 241:Core/Src/stm32g4xx_it.c **** {
 277              		.loc 1 241 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 08B5     		push	{r3, lr}
 282              	.LCFI2:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 242:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN USB_LP_IRQn 0 */
 243:Core/Src/stm32g4xx_it.c **** 
 244:Core/Src/stm32g4xx_it.c ****   /* USER CODE END USB_LP_IRQn 0 */
 245:Core/Src/stm32g4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 286              		.loc 1 245 0
 287 0002 0248     		ldr	r0, .L25
 288 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 289              	.LVL2:
 246:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN USB_LP_IRQn 1 */
 247:Core/Src/stm32g4xx_it.c **** 
ARM GAS  /tmp/ccikzOye.s 			page 10


 248:Core/Src/stm32g4xx_it.c ****   /* USER CODE END USB_LP_IRQn 1 */
 249:Core/Src/stm32g4xx_it.c **** }
 290              		.loc 1 249 0
 291 0008 08BD     		pop	{r3, pc}
 292              	.L26:
 293 000a 00BF     		.align	2
 294              	.L25:
 295 000c 00000000 		.word	hpcd_USB_FS
 296              		.cfi_endproc
 297              	.LFE340:
 299              		.section	.text.USART1_IRQHandler,"ax",%progbits
 300              		.align	1
 301              		.global	USART1_IRQHandler
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv4-sp-d16
 307              	USART1_IRQHandler:
 308              	.LFB341:
 250:Core/Src/stm32g4xx_it.c **** 
 251:Core/Src/stm32g4xx_it.c **** /**
 252:Core/Src/stm32g4xx_it.c ****   * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI li
 253:Core/Src/stm32g4xx_it.c ****   */
 254:Core/Src/stm32g4xx_it.c **** void USART1_IRQHandler(void)
 255:Core/Src/stm32g4xx_it.c **** {
 309              		.loc 1 255 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 08B5     		push	{r3, lr}
 314              	.LCFI3:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 3, -8
 317              		.cfi_offset 14, -4
 256:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 257:Core/Src/stm32g4xx_it.c ****   UART_GPS_Callback();
 318              		.loc 1 257 0
 319 0002 FFF7FEFF 		bl	UART_GPS_Callback
 320              	.LVL3:
 258:Core/Src/stm32g4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 259:Core/Src/stm32g4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 321              		.loc 1 259 0
 322 0006 0248     		ldr	r0, .L29
 323 0008 FFF7FEFF 		bl	HAL_UART_IRQHandler
 324              	.LVL4:
 260:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 261:Core/Src/stm32g4xx_it.c **** 
 262:Core/Src/stm32g4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 263:Core/Src/stm32g4xx_it.c **** }
 325              		.loc 1 263 0
 326 000c 08BD     		pop	{r3, pc}
 327              	.L30:
 328 000e 00BF     		.align	2
 329              	.L29:
 330 0010 00000000 		.word	huart1
 331              		.cfi_endproc
 332              	.LFE341:
ARM GAS  /tmp/ccikzOye.s 			page 11


 334              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 335              		.align	1
 336              		.global	TIM6_DAC_IRQHandler
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	TIM6_DAC_IRQHandler:
 343              	.LFB342:
 264:Core/Src/stm32g4xx_it.c **** 
 265:Core/Src/stm32g4xx_it.c **** /**
 266:Core/Src/stm32g4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC3 channel underrun error interr
 267:Core/Src/stm32g4xx_it.c ****   */
 268:Core/Src/stm32g4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 269:Core/Src/stm32g4xx_it.c **** {
 344              		.loc 1 269 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 08B5     		push	{r3, lr}
 349              	.LCFI4:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 3, -8
 352              		.cfi_offset 14, -4
 270:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 271:Core/Src/stm32g4xx_it.c **** 
 272:Core/Src/stm32g4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 273:Core/Src/stm32g4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 353              		.loc 1 273 0
 354 0002 0348     		ldr	r0, .L33
 355 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 356              	.LVL5:
 274:Core/Src/stm32g4xx_it.c ****   HAL_DAC_IRQHandler(&hdac3);
 357              		.loc 1 274 0
 358 0008 0248     		ldr	r0, .L33+4
 359 000a FFF7FEFF 		bl	HAL_DAC_IRQHandler
 360              	.LVL6:
 275:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 276:Core/Src/stm32g4xx_it.c **** 
 277:Core/Src/stm32g4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 278:Core/Src/stm32g4xx_it.c **** }
 361              		.loc 1 278 0
 362 000e 08BD     		pop	{r3, pc}
 363              	.L34:
 364              		.align	2
 365              	.L33:
 366 0010 00000000 		.word	htim6
 367 0014 00000000 		.word	hdac3
 368              		.cfi_endproc
 369              	.LFE342:
 371              		.text
 372              	.Letext0:
 373              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 374              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 375              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 376              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 377              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h"
ARM GAS  /tmp/ccikzOye.s 			page 12


 378              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 379              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 380              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dac.h"
 381              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 382              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usb.h"
 383              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pcd.h"
 384              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 385              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 386              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 387              		.file 16 "Core/Inc/main.h"
ARM GAS  /tmp/ccikzOye.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_it.c
     /tmp/ccikzOye.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccikzOye.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccikzOye.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccikzOye.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccikzOye.s:61     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccikzOye.s:68     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccikzOye.s:82     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccikzOye.s:89     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccikzOye.s:103    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccikzOye.s:110    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccikzOye.s:124    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccikzOye.s:131    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccikzOye.s:144    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccikzOye.s:151    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccikzOye.s:164    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccikzOye.s:171    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccikzOye.s:184    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccikzOye.s:191    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccikzOye.s:204    .text.DMA1_Channel2_IRQHandler:0000000000000000 $t
     /tmp/ccikzOye.s:211    .text.DMA1_Channel2_IRQHandler:0000000000000000 DMA1_Channel2_IRQHandler
     /tmp/ccikzOye.s:231    .text.DMA1_Channel2_IRQHandler:000000000000000c $d
     /tmp/ccikzOye.s:236    .text.DMA1_Channel3_IRQHandler:0000000000000000 $t
     /tmp/ccikzOye.s:243    .text.DMA1_Channel3_IRQHandler:0000000000000000 DMA1_Channel3_IRQHandler
     /tmp/ccikzOye.s:263    .text.DMA1_Channel3_IRQHandler:000000000000000c $d
     /tmp/ccikzOye.s:268    .text.USB_LP_IRQHandler:0000000000000000 $t
     /tmp/ccikzOye.s:275    .text.USB_LP_IRQHandler:0000000000000000 USB_LP_IRQHandler
     /tmp/ccikzOye.s:295    .text.USB_LP_IRQHandler:000000000000000c $d
     /tmp/ccikzOye.s:300    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccikzOye.s:307    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccikzOye.s:330    .text.USART1_IRQHandler:0000000000000010 $d
     /tmp/ccikzOye.s:335    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/ccikzOye.s:342    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/ccikzOye.s:366    .text.TIM6_DAC_IRQHandler:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_spi3_rx
hdma_spi3_tx
HAL_PCD_IRQHandler
hpcd_USB_FS
UART_GPS_Callback
HAL_UART_IRQHandler
huart1
HAL_TIM_IRQHandler
HAL_DAC_IRQHandler
htim6
hdac3
