ARM GAS  /tmp/ccmGdjRo.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_timebase_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_InitTick,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_InitTick
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_InitTick:
  26              	.LFB329:
  27              		.file 1 "Core/Src/stm32g4xx_hal_timebase_tim.c"
   1:Core/Src/stm32g4xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32g4xx_hal_timebase_tim.c **** /**
   3:Core/Src/stm32g4xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @file    stm32g4xx_hal_timebase_TIM.c
   5:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Core/Src/stm32g4xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @attention
   8:Core/Src/stm32g4xx_hal_timebase_tim.c ****   *
   9:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32g4xx_hal_timebase_tim.c ****   *
  12:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32g4xx_hal_timebase_tim.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32g4xx_hal_timebase_tim.c ****   *
  17:Core/Src/stm32g4xx_hal_timebase_tim.c ****   ******************************************************************************
  18:Core/Src/stm32g4xx_hal_timebase_tim.c ****   */
  19:Core/Src/stm32g4xx_hal_timebase_tim.c **** /* USER CODE END Header */
  20:Core/Src/stm32g4xx_hal_timebase_tim.c **** 
  21:Core/Src/stm32g4xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32g4xx_hal_timebase_tim.c **** #include "stm32g4xx_hal.h"
  23:Core/Src/stm32g4xx_hal_timebase_tim.c **** #include "stm32g4xx_hal_tim.h"
  24:Core/Src/stm32g4xx_hal_timebase_tim.c **** 
  25:Core/Src/stm32g4xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  26:Core/Src/stm32g4xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  27:Core/Src/stm32g4xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  28:Core/Src/stm32g4xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  29:Core/Src/stm32g4xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim6;
  30:Core/Src/stm32g4xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  31:Core/Src/stm32g4xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
ARM GAS  /tmp/ccmGdjRo.s 			page 2


  32:Core/Src/stm32g4xx_hal_timebase_tim.c **** 
  33:Core/Src/stm32g4xx_hal_timebase_tim.c **** /**
  34:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM6 as a time base source.
  35:Core/Src/stm32g4xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  36:Core/Src/stm32g4xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  37:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  38:Core/Src/stm32g4xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  39:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  40:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @retval HAL status
  41:Core/Src/stm32g4xx_hal_timebase_tim.c ****   */
  42:Core/Src/stm32g4xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  43:Core/Src/stm32g4xx_hal_timebase_tim.c **** {
  28              		.loc 1 43 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
  42 0004 0446     		mov	r4, r0
  43              	.LVL1:
  44              	.LBB2:
  44:Core/Src/stm32g4xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  45:Core/Src/stm32g4xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0;
  46:Core/Src/stm32g4xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0;
  47:Core/Src/stm32g4xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  48:Core/Src/stm32g4xx_hal_timebase_tim.c ****   HAL_StatusTypeDef     status = HAL_OK;
  49:Core/Src/stm32g4xx_hal_timebase_tim.c ****   /* Enable TIM6 clock */
  50:Core/Src/stm32g4xx_hal_timebase_tim.c ****   __HAL_RCC_TIM6_CLK_ENABLE();
  45              		.loc 1 50 0
  46 0006 1D4B     		ldr	r3, .L7
  47 0008 9A6D     		ldr	r2, [r3, #88]
  48 000a 42F01002 		orr	r2, r2, #16
  49 000e 9A65     		str	r2, [r3, #88]
  50 0010 9B6D     		ldr	r3, [r3, #88]
  51 0012 03F01003 		and	r3, r3, #16
  52 0016 0193     		str	r3, [sp, #4]
  53 0018 019B     		ldr	r3, [sp, #4]
  54              	.LBE2:
  51:Core/Src/stm32g4xx_hal_timebase_tim.c **** 
  52:Core/Src/stm32g4xx_hal_timebase_tim.c ****   /* Get clock configuration */
  53:Core/Src/stm32g4xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  55              		.loc 1 53 0
  56 001a 02A9     		add	r1, sp, #8
  57 001c 03A8     		add	r0, sp, #12
  58              	.LVL2:
  59 001e FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  60              	.LVL3:
  54:Core/Src/stm32g4xx_hal_timebase_tim.c **** 
  55:Core/Src/stm32g4xx_hal_timebase_tim.c ****   /* Compute TIM6 clock */
ARM GAS  /tmp/ccmGdjRo.s 			page 3


  56:Core/Src/stm32g4xx_hal_timebase_tim.c ****   uwTimclock = HAL_RCC_GetPCLK1Freq();
  61              		.loc 1 56 0
  62 0022 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  63              	.LVL4:
  57:Core/Src/stm32g4xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  58:Core/Src/stm32g4xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  64              		.loc 1 58 0
  65 0026 164B     		ldr	r3, .L7+4
  66 0028 A3FB0023 		umull	r2, r3, r3, r0
  67 002c 9B0C     		lsrs	r3, r3, #18
  68 002e 013B     		subs	r3, r3, #1
  69              	.LVL5:
  59:Core/Src/stm32g4xx_hal_timebase_tim.c **** 
  60:Core/Src/stm32g4xx_hal_timebase_tim.c ****   /* Initialize TIM6 */
  61:Core/Src/stm32g4xx_hal_timebase_tim.c ****   htim6.Instance = TIM6;
  70              		.loc 1 61 0
  71 0030 1448     		ldr	r0, .L7+8
  72              	.LVL6:
  73 0032 154A     		ldr	r2, .L7+12
  74 0034 0260     		str	r2, [r0]
  62:Core/Src/stm32g4xx_hal_timebase_tim.c **** 
  63:Core/Src/stm32g4xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  64:Core/Src/stm32g4xx_hal_timebase_tim.c ****   + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  65:Core/Src/stm32g4xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  66:Core/Src/stm32g4xx_hal_timebase_tim.c ****   + ClockDivision = 0
  67:Core/Src/stm32g4xx_hal_timebase_tim.c ****   + Counter direction = Up
  68:Core/Src/stm32g4xx_hal_timebase_tim.c ****   */
  69:Core/Src/stm32g4xx_hal_timebase_tim.c ****   htim6.Init.Period = (1000000U / 1000U) - 1U;
  75              		.loc 1 69 0
  76 0036 40F2E732 		movw	r2, #999
  77 003a C260     		str	r2, [r0, #12]
  70:Core/Src/stm32g4xx_hal_timebase_tim.c ****   htim6.Init.Prescaler = uwPrescalerValue;
  78              		.loc 1 70 0
  79 003c 4360     		str	r3, [r0, #4]
  71:Core/Src/stm32g4xx_hal_timebase_tim.c ****   htim6.Init.ClockDivision = 0;
  80              		.loc 1 71 0
  81 003e 0023     		movs	r3, #0
  82              	.LVL7:
  83 0040 0361     		str	r3, [r0, #16]
  72:Core/Src/stm32g4xx_hal_timebase_tim.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  84              		.loc 1 72 0
  85 0042 8360     		str	r3, [r0, #8]
  73:Core/Src/stm32g4xx_hal_timebase_tim.c **** 
  74:Core/Src/stm32g4xx_hal_timebase_tim.c ****   status = HAL_TIM_Base_Init(&htim6);
  86              		.loc 1 74 0
  87 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
  88              	.LVL8:
  75:Core/Src/stm32g4xx_hal_timebase_tim.c ****   if (status == HAL_OK)
  89              		.loc 1 75 0
  90 0048 0546     		mov	r5, r0
  91 004a 10B1     		cbz	r0, .L5
  92              	.LVL9:
  93              	.L2:
  76:Core/Src/stm32g4xx_hal_timebase_tim.c ****   {
  77:Core/Src/stm32g4xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  78:Core/Src/stm32g4xx_hal_timebase_tim.c ****     status = HAL_TIM_Base_Start_IT(&htim6);
  79:Core/Src/stm32g4xx_hal_timebase_tim.c ****     if (status == HAL_OK)
ARM GAS  /tmp/ccmGdjRo.s 			page 4


  80:Core/Src/stm32g4xx_hal_timebase_tim.c ****     {
  81:Core/Src/stm32g4xx_hal_timebase_tim.c ****     /* Enable the TIM6 global Interrupt */
  82:Core/Src/stm32g4xx_hal_timebase_tim.c ****         HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
  83:Core/Src/stm32g4xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
  84:Core/Src/stm32g4xx_hal_timebase_tim.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
  85:Core/Src/stm32g4xx_hal_timebase_tim.c ****       {
  86:Core/Src/stm32g4xx_hal_timebase_tim.c ****         /* Configure the TIM IRQ priority */
  87:Core/Src/stm32g4xx_hal_timebase_tim.c ****         HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
  88:Core/Src/stm32g4xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
  89:Core/Src/stm32g4xx_hal_timebase_tim.c ****       }
  90:Core/Src/stm32g4xx_hal_timebase_tim.c ****       else
  91:Core/Src/stm32g4xx_hal_timebase_tim.c ****       {
  92:Core/Src/stm32g4xx_hal_timebase_tim.c ****         status = HAL_ERROR;
  93:Core/Src/stm32g4xx_hal_timebase_tim.c ****       }
  94:Core/Src/stm32g4xx_hal_timebase_tim.c ****     }
  95:Core/Src/stm32g4xx_hal_timebase_tim.c ****   }
  96:Core/Src/stm32g4xx_hal_timebase_tim.c ****  /* Return function status */
  97:Core/Src/stm32g4xx_hal_timebase_tim.c ****   return status;
  98:Core/Src/stm32g4xx_hal_timebase_tim.c **** }
  94              		.loc 1 98 0
  95 004c 2846     		mov	r0, r5
  96 004e 09B0     		add	sp, sp, #36
  97              	.LCFI2:
  98              		.cfi_remember_state
  99              		.cfi_def_cfa_offset 12
 100              		@ sp needed
 101 0050 30BD     		pop	{r4, r5, pc}
 102              	.LVL10:
 103              	.L5:
 104              	.LCFI3:
 105              		.cfi_restore_state
  78:Core/Src/stm32g4xx_hal_timebase_tim.c ****     if (status == HAL_OK)
 106              		.loc 1 78 0
 107 0052 0C48     		ldr	r0, .L7+8
 108              	.LVL11:
 109 0054 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 110              	.LVL12:
  79:Core/Src/stm32g4xx_hal_timebase_tim.c ****     {
 111              		.loc 1 79 0
 112 0058 0546     		mov	r5, r0
 113 005a 0028     		cmp	r0, #0
 114 005c F6D1     		bne	.L2
  82:Core/Src/stm32g4xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
 115              		.loc 1 82 0
 116 005e 3620     		movs	r0, #54
 117              	.LVL13:
 118 0060 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 119              	.LVL14:
  84:Core/Src/stm32g4xx_hal_timebase_tim.c ****       {
 120              		.loc 1 84 0
 121 0064 0F2C     		cmp	r4, #15
 122 0066 01D9     		bls	.L6
  92:Core/Src/stm32g4xx_hal_timebase_tim.c ****       }
 123              		.loc 1 92 0
 124 0068 0125     		movs	r5, #1
 125 006a EFE7     		b	.L2
 126              	.L6:
ARM GAS  /tmp/ccmGdjRo.s 			page 5


  87:Core/Src/stm32g4xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
 127              		.loc 1 87 0
 128 006c 0022     		movs	r2, #0
 129 006e 2146     		mov	r1, r4
 130 0070 3620     		movs	r0, #54
 131 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 132              	.LVL15:
  88:Core/Src/stm32g4xx_hal_timebase_tim.c ****       }
 133              		.loc 1 88 0
 134 0076 054B     		ldr	r3, .L7+16
 135 0078 1C60     		str	r4, [r3]
 136 007a E7E7     		b	.L2
 137              	.L8:
 138              		.align	2
 139              	.L7:
 140 007c 00100240 		.word	1073876992
 141 0080 83DE1B43 		.word	1125899907
 142 0084 00000000 		.word	htim6
 143 0088 00100040 		.word	1073745920
 144 008c 00000000 		.word	uwTickPrio
 145              		.cfi_endproc
 146              	.LFE329:
 148              		.section	.text.HAL_SuspendTick,"ax",%progbits
 149              		.align	1
 150              		.global	HAL_SuspendTick
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv4-sp-d16
 156              	HAL_SuspendTick:
 157              	.LFB330:
  99:Core/Src/stm32g4xx_hal_timebase_tim.c **** 
 100:Core/Src/stm32g4xx_hal_timebase_tim.c **** /**
 101:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
 102:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM6 update interrupt.
 103:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @param  None
 104:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @retval None
 105:Core/Src/stm32g4xx_hal_timebase_tim.c ****   */
 106:Core/Src/stm32g4xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 107:Core/Src/stm32g4xx_hal_timebase_tim.c **** {
 158              		.loc 1 107 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 108:Core/Src/stm32g4xx_hal_timebase_tim.c ****   /* Disable TIM6 update Interrupt */
 109:Core/Src/stm32g4xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim6, TIM_IT_UPDATE);
 163              		.loc 1 109 0
 164 0000 034B     		ldr	r3, .L10
 165 0002 1A68     		ldr	r2, [r3]
 166 0004 D368     		ldr	r3, [r2, #12]
 167 0006 23F00103 		bic	r3, r3, #1
 168 000a D360     		str	r3, [r2, #12]
 110:Core/Src/stm32g4xx_hal_timebase_tim.c **** }
 169              		.loc 1 110 0
 170 000c 7047     		bx	lr
 171              	.L11:
ARM GAS  /tmp/ccmGdjRo.s 			page 6


 172 000e 00BF     		.align	2
 173              	.L10:
 174 0010 00000000 		.word	htim6
 175              		.cfi_endproc
 176              	.LFE330:
 178              		.section	.text.HAL_ResumeTick,"ax",%progbits
 179              		.align	1
 180              		.global	HAL_ResumeTick
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	HAL_ResumeTick:
 187              	.LFB331:
 111:Core/Src/stm32g4xx_hal_timebase_tim.c **** 
 112:Core/Src/stm32g4xx_hal_timebase_tim.c **** /**
 113:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 114:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM6 update interrupt.
 115:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @param  None
 116:Core/Src/stm32g4xx_hal_timebase_tim.c ****   * @retval None
 117:Core/Src/stm32g4xx_hal_timebase_tim.c ****   */
 118:Core/Src/stm32g4xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 119:Core/Src/stm32g4xx_hal_timebase_tim.c **** {
 188              		.loc 1 119 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 120:Core/Src/stm32g4xx_hal_timebase_tim.c ****   /* Enable TIM6 Update interrupt */
 121:Core/Src/stm32g4xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim6, TIM_IT_UPDATE);
 193              		.loc 1 121 0
 194 0000 034B     		ldr	r3, .L13
 195 0002 1A68     		ldr	r2, [r3]
 196 0004 D368     		ldr	r3, [r2, #12]
 197 0006 43F00103 		orr	r3, r3, #1
 198 000a D360     		str	r3, [r2, #12]
 122:Core/Src/stm32g4xx_hal_timebase_tim.c **** }
 199              		.loc 1 122 0
 200 000c 7047     		bx	lr
 201              	.L14:
 202 000e 00BF     		.align	2
 203              	.L13:
 204 0010 00000000 		.word	htim6
 205              		.cfi_endproc
 206              	.LFE331:
 208              		.comm	htim6,76,4
 209              		.text
 210              	.Letext0:
 211              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 212              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 213              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 214              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 215              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h"
 216              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 217              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 218              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 219              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
ARM GAS  /tmp/ccmGdjRo.s 			page 7


 220              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 221              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 222              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 223              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
ARM GAS  /tmp/ccmGdjRo.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_timebase_tim.c
     /tmp/ccmGdjRo.s:18     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccmGdjRo.s:25     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccmGdjRo.s:140    .text.HAL_InitTick:000000000000007c $d
                            *COM*:000000000000004c htim6
     /tmp/ccmGdjRo.s:149    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccmGdjRo.s:156    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccmGdjRo.s:174    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/ccmGdjRo.s:179    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccmGdjRo.s:186    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccmGdjRo.s:204    .text.HAL_ResumeTick:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
uwTickPrio
