ARM GAS  /tmp/cc3RdyM6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_UART5_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_UART5_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_UART5_Init:
  26              	.LFB329:
  27              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /**
   2:Core/Src/usart.c ****   ******************************************************************************
   3:Core/Src/usart.c ****   * @file    usart.c
   4:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/usart.c ****   *          of the USART instances.
   6:Core/Src/usart.c ****   ******************************************************************************
   7:Core/Src/usart.c ****   * @attention
   8:Core/Src/usart.c ****   *
   9:Core/Src/usart.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/usart.c ****   * All rights reserved.</center></h2>
  11:Core/Src/usart.c ****   *
  12:Core/Src/usart.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/usart.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/usart.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/usart.c ****   *                             www.st.com/SLA0044
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** 
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart5;
  28:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  29:Core/Src/usart.c **** 
  30:Core/Src/usart.c **** /* UART5 init function */
  31:Core/Src/usart.c **** void MX_UART5_Init(void)
ARM GAS  /tmp/cc3RdyM6.s 			page 2


  32:Core/Src/usart.c **** {
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  33:Core/Src/usart.c **** 
  34:Core/Src/usart.c ****   /* USER CODE BEGIN UART5_Init 0 */
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE END UART5_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE BEGIN UART5_Init 1 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE END UART5_Init 1 */
  41:Core/Src/usart.c ****   huart5.Instance = UART5;
  37              		.loc 1 41 0
  38 0002 1748     		ldr	r0, .L11
  39 0004 174B     		ldr	r3, .L11+4
  40 0006 0360     		str	r3, [r0]
  42:Core/Src/usart.c ****   huart5.Init.BaudRate = 115200;
  41              		.loc 1 42 0
  42 0008 4FF4E133 		mov	r3, #115200
  43 000c 4360     		str	r3, [r0, #4]
  43:Core/Src/usart.c ****   huart5.Init.WordLength = UART_WORDLENGTH_8B;
  44              		.loc 1 43 0
  45 000e 0023     		movs	r3, #0
  46 0010 8360     		str	r3, [r0, #8]
  44:Core/Src/usart.c ****   huart5.Init.StopBits = UART_STOPBITS_1;
  47              		.loc 1 44 0
  48 0012 C360     		str	r3, [r0, #12]
  45:Core/Src/usart.c ****   huart5.Init.Parity = UART_PARITY_NONE;
  49              		.loc 1 45 0
  50 0014 0361     		str	r3, [r0, #16]
  46:Core/Src/usart.c ****   huart5.Init.Mode = UART_MODE_TX_RX;
  51              		.loc 1 46 0
  52 0016 0C22     		movs	r2, #12
  53 0018 4261     		str	r2, [r0, #20]
  47:Core/Src/usart.c ****   huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  54              		.loc 1 47 0
  55 001a 8361     		str	r3, [r0, #24]
  48:Core/Src/usart.c ****   huart5.Init.OverSampling = UART_OVERSAMPLING_16;
  56              		.loc 1 48 0
  57 001c C361     		str	r3, [r0, #28]
  49:Core/Src/usart.c ****   huart5.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  58              		.loc 1 49 0
  59 001e 0362     		str	r3, [r0, #32]
  50:Core/Src/usart.c ****   huart5.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  60              		.loc 1 50 0
  61 0020 4362     		str	r3, [r0, #36]
  51:Core/Src/usart.c ****   huart5.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  62              		.loc 1 51 0
  63 0022 8362     		str	r3, [r0, #40]
  52:Core/Src/usart.c ****   if (HAL_UART_Init(&huart5) != HAL_OK)
ARM GAS  /tmp/cc3RdyM6.s 			page 3


  64              		.loc 1 52 0
  65 0024 FFF7FEFF 		bl	HAL_UART_Init
  66              	.LVL0:
  67 0028 70B9     		cbnz	r0, .L7
  68              	.L2:
  53:Core/Src/usart.c ****   {
  54:Core/Src/usart.c ****     Error_Handler();
  55:Core/Src/usart.c ****   }
  56:Core/Src/usart.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart5, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
  69              		.loc 1 56 0
  70 002a 0021     		movs	r1, #0
  71 002c 0C48     		ldr	r0, .L11
  72 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
  73              	.LVL1:
  74 0032 60B9     		cbnz	r0, .L8
  75              	.L3:
  57:Core/Src/usart.c ****   {
  58:Core/Src/usart.c ****     Error_Handler();
  59:Core/Src/usart.c ****   }
  60:Core/Src/usart.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart5, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
  76              		.loc 1 60 0
  77 0034 0021     		movs	r1, #0
  78 0036 0A48     		ldr	r0, .L11
  79 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
  80              	.LVL2:
  81 003c 50B9     		cbnz	r0, .L9
  82              	.L4:
  61:Core/Src/usart.c ****   {
  62:Core/Src/usart.c ****     Error_Handler();
  63:Core/Src/usart.c ****   }
  64:Core/Src/usart.c ****   if (HAL_UARTEx_DisableFifoMode(&huart5) != HAL_OK)
  83              		.loc 1 64 0
  84 003e 0848     		ldr	r0, .L11
  85 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
  86              	.LVL3:
  87 0044 48B9     		cbnz	r0, .L10
  88              	.L1:
  65:Core/Src/usart.c ****   {
  66:Core/Src/usart.c ****     Error_Handler();
  67:Core/Src/usart.c ****   }
  68:Core/Src/usart.c ****   /* USER CODE BEGIN UART5_Init 2 */
  69:Core/Src/usart.c **** 
  70:Core/Src/usart.c ****   /* USER CODE END UART5_Init 2 */
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c **** }
  89              		.loc 1 72 0
  90 0046 08BD     		pop	{r3, pc}
  91              	.L7:
  54:Core/Src/usart.c ****   }
  92              		.loc 1 54 0
  93 0048 FFF7FEFF 		bl	Error_Handler
  94              	.LVL4:
  95 004c EDE7     		b	.L2
  96              	.L8:
  58:Core/Src/usart.c ****   }
  97              		.loc 1 58 0
  98 004e FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/cc3RdyM6.s 			page 4


  99              	.LVL5:
 100 0052 EFE7     		b	.L3
 101              	.L9:
  62:Core/Src/usart.c ****   }
 102              		.loc 1 62 0
 103 0054 FFF7FEFF 		bl	Error_Handler
 104              	.LVL6:
 105 0058 F1E7     		b	.L4
 106              	.L10:
  66:Core/Src/usart.c ****   }
 107              		.loc 1 66 0
 108 005a FFF7FEFF 		bl	Error_Handler
 109              	.LVL7:
 110              		.loc 1 72 0
 111 005e F2E7     		b	.L1
 112              	.L12:
 113              		.align	2
 114              	.L11:
 115 0060 00000000 		.word	huart5
 116 0064 00500040 		.word	1073762304
 117              		.cfi_endproc
 118              	.LFE329:
 120              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 121              		.align	1
 122              		.global	MX_USART1_UART_Init
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu fpv4-sp-d16
 128              	MX_USART1_UART_Init:
 129              	.LFB330:
  73:Core/Src/usart.c **** /* USART1 init function */
  74:Core/Src/usart.c **** 
  75:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  76:Core/Src/usart.c **** {
 130              		.loc 1 76 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134 0000 08B5     		push	{r3, lr}
 135              	.LCFI1:
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 3, -8
 138              		.cfi_offset 14, -4
  77:Core/Src/usart.c **** 
  78:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  79:Core/Src/usart.c **** 
  80:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  81:Core/Src/usart.c **** 
  82:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  83:Core/Src/usart.c **** 
  84:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  85:Core/Src/usart.c ****   huart1.Instance = USART1;
 139              		.loc 1 85 0
 140 0002 1A48     		ldr	r0, .L23
 141 0004 1A4B     		ldr	r3, .L23+4
 142 0006 0360     		str	r3, [r0]
ARM GAS  /tmp/cc3RdyM6.s 			page 5


  86:Core/Src/usart.c ****   huart1.Init.BaudRate = 9600;
 143              		.loc 1 86 0
 144 0008 4FF41653 		mov	r3, #9600
 145 000c 4360     		str	r3, [r0, #4]
  87:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 146              		.loc 1 87 0
 147 000e 0023     		movs	r3, #0
 148 0010 8360     		str	r3, [r0, #8]
  88:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 149              		.loc 1 88 0
 150 0012 C360     		str	r3, [r0, #12]
  89:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 151              		.loc 1 89 0
 152 0014 0361     		str	r3, [r0, #16]
  90:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 153              		.loc 1 90 0
 154 0016 0C22     		movs	r2, #12
 155 0018 4261     		str	r2, [r0, #20]
  91:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 156              		.loc 1 91 0
 157 001a 8361     		str	r3, [r0, #24]
  92:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 158              		.loc 1 92 0
 159 001c C361     		str	r3, [r0, #28]
  93:Core/Src/usart.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 160              		.loc 1 93 0
 161 001e 0362     		str	r3, [r0, #32]
  94:Core/Src/usart.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 162              		.loc 1 94 0
 163 0020 4362     		str	r3, [r0, #36]
  95:Core/Src/usart.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 164              		.loc 1 95 0
 165 0022 8362     		str	r3, [r0, #40]
  96:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 166              		.loc 1 96 0
 167 0024 FFF7FEFF 		bl	HAL_UART_Init
 168              	.LVL8:
 169 0028 A0B9     		cbnz	r0, .L19
 170              	.L14:
  97:Core/Src/usart.c ****   {
  98:Core/Src/usart.c ****     Error_Handler();
  99:Core/Src/usart.c ****   }
 100:Core/Src/usart.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 171              		.loc 1 100 0
 172 002a 0021     		movs	r1, #0
 173 002c 0F48     		ldr	r0, .L23
 174 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 175              	.LVL9:
 176 0032 90B9     		cbnz	r0, .L20
 177              	.L15:
 101:Core/Src/usart.c ****   {
 102:Core/Src/usart.c ****     Error_Handler();
 103:Core/Src/usart.c ****   }
 104:Core/Src/usart.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 178              		.loc 1 104 0
 179 0034 0021     		movs	r1, #0
 180 0036 0D48     		ldr	r0, .L23
ARM GAS  /tmp/cc3RdyM6.s 			page 6


 181 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 182              	.LVL10:
 183 003c 80B9     		cbnz	r0, .L21
 184              	.L16:
 105:Core/Src/usart.c ****   {
 106:Core/Src/usart.c ****     Error_Handler();
 107:Core/Src/usart.c ****   }
 108:Core/Src/usart.c ****   if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 185              		.loc 1 108 0
 186 003e 0B48     		ldr	r0, .L23
 187 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 188              	.LVL11:
 189 0044 78B9     		cbnz	r0, .L22
 190              	.L17:
 109:Core/Src/usart.c ****   {
 110:Core/Src/usart.c ****     Error_Handler();
 111:Core/Src/usart.c ****   }
 112:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
 113:Core/Src/usart.c ****   __HAL_UART_ENABLE_IT(&huart1, UART_IT_RXNE);
 191              		.loc 1 113 0
 192 0046 094B     		ldr	r3, .L23
 193 0048 1A68     		ldr	r2, [r3]
 194 004a 1368     		ldr	r3, [r2]
 195 004c 43F02003 		orr	r3, r3, #32
 196 0050 1360     		str	r3, [r2]
 114:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
 115:Core/Src/usart.c **** 
 116:Core/Src/usart.c **** }
 197              		.loc 1 116 0
 198 0052 08BD     		pop	{r3, pc}
 199              	.L19:
  98:Core/Src/usart.c ****   }
 200              		.loc 1 98 0
 201 0054 FFF7FEFF 		bl	Error_Handler
 202              	.LVL12:
 203 0058 E7E7     		b	.L14
 204              	.L20:
 102:Core/Src/usart.c ****   }
 205              		.loc 1 102 0
 206 005a FFF7FEFF 		bl	Error_Handler
 207              	.LVL13:
 208 005e E9E7     		b	.L15
 209              	.L21:
 106:Core/Src/usart.c ****   }
 210              		.loc 1 106 0
 211 0060 FFF7FEFF 		bl	Error_Handler
 212              	.LVL14:
 213 0064 EBE7     		b	.L16
 214              	.L22:
 110:Core/Src/usart.c ****   }
 215              		.loc 1 110 0
 216 0066 FFF7FEFF 		bl	Error_Handler
 217              	.LVL15:
 218 006a ECE7     		b	.L17
 219              	.L24:
 220              		.align	2
 221              	.L23:
ARM GAS  /tmp/cc3RdyM6.s 			page 7


 222 006c 00000000 		.word	huart1
 223 0070 00380140 		.word	1073821696
 224              		.cfi_endproc
 225              	.LFE330:
 227              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 228              		.align	1
 229              		.global	HAL_UART_MspInit
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	HAL_UART_MspInit:
 236              	.LFB331:
 117:Core/Src/usart.c **** 
 118:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
 119:Core/Src/usart.c **** {
 237              		.loc 1 119 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 40
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              	.LVL16:
 242 0000 30B5     		push	{r4, r5, lr}
 243              	.LCFI2:
 244              		.cfi_def_cfa_offset 12
 245              		.cfi_offset 4, -12
 246              		.cfi_offset 5, -8
 247              		.cfi_offset 14, -4
 248 0002 8BB0     		sub	sp, sp, #44
 249              	.LCFI3:
 250              		.cfi_def_cfa_offset 56
 120:Core/Src/usart.c **** 
 121:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 251              		.loc 1 121 0
 252 0004 0023     		movs	r3, #0
 253 0006 0593     		str	r3, [sp, #20]
 254 0008 0693     		str	r3, [sp, #24]
 255 000a 0793     		str	r3, [sp, #28]
 256 000c 0893     		str	r3, [sp, #32]
 257 000e 0993     		str	r3, [sp, #36]
 122:Core/Src/usart.c ****   if(uartHandle->Instance==UART5)
 258              		.loc 1 122 0
 259 0010 0368     		ldr	r3, [r0]
 260 0012 304A     		ldr	r2, .L31
 261 0014 9342     		cmp	r3, r2
 262 0016 04D0     		beq	.L29
 123:Core/Src/usart.c ****   {
 124:Core/Src/usart.c ****   /* USER CODE BEGIN UART5_MspInit 0 */
 125:Core/Src/usart.c **** 
 126:Core/Src/usart.c ****   /* USER CODE END UART5_MspInit 0 */
 127:Core/Src/usart.c ****     /* UART5 clock enable */
 128:Core/Src/usart.c ****     __HAL_RCC_UART5_CLK_ENABLE();
 129:Core/Src/usart.c **** 
 130:Core/Src/usart.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 131:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 132:Core/Src/usart.c ****     /**UART5 GPIO Configuration
 133:Core/Src/usart.c ****     PC12     ------> UART5_TX
 134:Core/Src/usart.c ****     PD2     ------> UART5_RX
ARM GAS  /tmp/cc3RdyM6.s 			page 8


 135:Core/Src/usart.c ****     */
 136:Core/Src/usart.c ****     GPIO_InitStruct.Pin = RADIO_UART5_TX_Pin;
 137:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 138:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 139:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 140:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_UART5;
 141:Core/Src/usart.c ****     HAL_GPIO_Init(RADIO_UART5_TX_GPIO_Port, &GPIO_InitStruct);
 142:Core/Src/usart.c **** 
 143:Core/Src/usart.c ****     GPIO_InitStruct.Pin = RADIO_UART5_RX_Pin;
 144:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 145:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 146:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 147:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_UART5;
 148:Core/Src/usart.c ****     HAL_GPIO_Init(RADIO_UART5_RX_GPIO_Port, &GPIO_InitStruct);
 149:Core/Src/usart.c **** 
 150:Core/Src/usart.c ****   /* USER CODE BEGIN UART5_MspInit 1 */
 151:Core/Src/usart.c **** 
 152:Core/Src/usart.c ****   /* USER CODE END UART5_MspInit 1 */
 153:Core/Src/usart.c ****   }
 154:Core/Src/usart.c ****   else if(uartHandle->Instance==USART1)
 263              		.loc 1 154 0
 264 0018 2F4A     		ldr	r2, .L31+4
 265 001a 9342     		cmp	r3, r2
 266 001c 34D0     		beq	.L30
 267              	.LVL17:
 268              	.L25:
 155:Core/Src/usart.c ****   {
 156:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
 157:Core/Src/usart.c **** 
 158:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
 159:Core/Src/usart.c ****     /* USART1 clock enable */
 160:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 161:Core/Src/usart.c **** 
 162:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 163:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 164:Core/Src/usart.c ****     PB6     ------> USART1_TX
 165:Core/Src/usart.c ****     PB7     ------> USART1_RX
 166:Core/Src/usart.c ****     */
 167:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPS_USART1_TX_Pin|GPS_USART1_RX_Pin;
 168:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 169:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 170:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 171:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 172:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 173:Core/Src/usart.c **** 
 174:Core/Src/usart.c ****     /* USART1 interrupt Init */
 175:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 176:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 177:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 178:Core/Src/usart.c **** 
 179:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 180:Core/Src/usart.c ****   }
 181:Core/Src/usart.c **** }
 269              		.loc 1 181 0
 270 001e 0BB0     		add	sp, sp, #44
 271              	.LCFI4:
 272              		.cfi_remember_state
ARM GAS  /tmp/cc3RdyM6.s 			page 9


 273              		.cfi_def_cfa_offset 12
 274              		@ sp needed
 275 0020 30BD     		pop	{r4, r5, pc}
 276              	.LVL18:
 277              	.L29:
 278              	.LCFI5:
 279              		.cfi_restore_state
 280              	.LBB2:
 128:Core/Src/usart.c **** 
 281              		.loc 1 128 0
 282 0022 2E4B     		ldr	r3, .L31+8
 283 0024 9A6D     		ldr	r2, [r3, #88]
 284 0026 42F48012 		orr	r2, r2, #1048576
 285 002a 9A65     		str	r2, [r3, #88]
 286 002c 9A6D     		ldr	r2, [r3, #88]
 287 002e 02F48012 		and	r2, r2, #1048576
 288 0032 0092     		str	r2, [sp]
 289 0034 009A     		ldr	r2, [sp]
 290              	.LBE2:
 291              	.LBB3:
 130:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 292              		.loc 1 130 0
 293 0036 DA6C     		ldr	r2, [r3, #76]
 294 0038 42F00402 		orr	r2, r2, #4
 295 003c DA64     		str	r2, [r3, #76]
 296 003e DA6C     		ldr	r2, [r3, #76]
 297 0040 02F00402 		and	r2, r2, #4
 298 0044 0192     		str	r2, [sp, #4]
 299 0046 019A     		ldr	r2, [sp, #4]
 300              	.LBE3:
 301              	.LBB4:
 131:Core/Src/usart.c ****     /**UART5 GPIO Configuration
 302              		.loc 1 131 0
 303 0048 DA6C     		ldr	r2, [r3, #76]
 304 004a 42F00802 		orr	r2, r2, #8
 305 004e DA64     		str	r2, [r3, #76]
 306 0050 DB6C     		ldr	r3, [r3, #76]
 307 0052 03F00803 		and	r3, r3, #8
 308 0056 0293     		str	r3, [sp, #8]
 309 0058 029B     		ldr	r3, [sp, #8]
 310              	.LBE4:
 136:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 311              		.loc 1 136 0
 312 005a 4FF48053 		mov	r3, #4096
 313 005e 0593     		str	r3, [sp, #20]
 137:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 314              		.loc 1 137 0
 315 0060 0225     		movs	r5, #2
 316 0062 0695     		str	r5, [sp, #24]
 140:Core/Src/usart.c ****     HAL_GPIO_Init(RADIO_UART5_TX_GPIO_Port, &GPIO_InitStruct);
 317              		.loc 1 140 0
 318 0064 0524     		movs	r4, #5
 319 0066 0994     		str	r4, [sp, #36]
 141:Core/Src/usart.c **** 
 320              		.loc 1 141 0
 321 0068 05A9     		add	r1, sp, #20
 322 006a 1D48     		ldr	r0, .L31+12
ARM GAS  /tmp/cc3RdyM6.s 			page 10


 323              	.LVL19:
 324 006c FFF7FEFF 		bl	HAL_GPIO_Init
 325              	.LVL20:
 143:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 326              		.loc 1 143 0
 327 0070 0423     		movs	r3, #4
 328 0072 0593     		str	r3, [sp, #20]
 144:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 329              		.loc 1 144 0
 330 0074 0695     		str	r5, [sp, #24]
 145:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 331              		.loc 1 145 0
 332 0076 0023     		movs	r3, #0
 333 0078 0793     		str	r3, [sp, #28]
 146:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_UART5;
 334              		.loc 1 146 0
 335 007a 0893     		str	r3, [sp, #32]
 147:Core/Src/usart.c ****     HAL_GPIO_Init(RADIO_UART5_RX_GPIO_Port, &GPIO_InitStruct);
 336              		.loc 1 147 0
 337 007c 0994     		str	r4, [sp, #36]
 148:Core/Src/usart.c **** 
 338              		.loc 1 148 0
 339 007e 05A9     		add	r1, sp, #20
 340 0080 1848     		ldr	r0, .L31+16
 341 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 342              	.LVL21:
 343 0086 CAE7     		b	.L25
 344              	.LVL22:
 345              	.L30:
 346              	.LBB5:
 160:Core/Src/usart.c **** 
 347              		.loc 1 160 0
 348 0088 144B     		ldr	r3, .L31+8
 349 008a 1A6E     		ldr	r2, [r3, #96]
 350 008c 42F48042 		orr	r2, r2, #16384
 351 0090 1A66     		str	r2, [r3, #96]
 352 0092 1A6E     		ldr	r2, [r3, #96]
 353 0094 02F48042 		and	r2, r2, #16384
 354 0098 0392     		str	r2, [sp, #12]
 355 009a 039A     		ldr	r2, [sp, #12]
 356              	.LBE5:
 357              	.LBB6:
 162:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 358              		.loc 1 162 0
 359 009c DA6C     		ldr	r2, [r3, #76]
 360 009e 42F00202 		orr	r2, r2, #2
 361 00a2 DA64     		str	r2, [r3, #76]
 362 00a4 DB6C     		ldr	r3, [r3, #76]
 363 00a6 03F00203 		and	r3, r3, #2
 364 00aa 0493     		str	r3, [sp, #16]
 365 00ac 049B     		ldr	r3, [sp, #16]
 366              	.LBE6:
 167:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 367              		.loc 1 167 0
 368 00ae C023     		movs	r3, #192
 369 00b0 0593     		str	r3, [sp, #20]
 168:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/cc3RdyM6.s 			page 11


 370              		.loc 1 168 0
 371 00b2 0223     		movs	r3, #2
 372 00b4 0693     		str	r3, [sp, #24]
 171:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 373              		.loc 1 171 0
 374 00b6 0723     		movs	r3, #7
 375 00b8 0993     		str	r3, [sp, #36]
 172:Core/Src/usart.c **** 
 376              		.loc 1 172 0
 377 00ba 05A9     		add	r1, sp, #20
 378 00bc 0A48     		ldr	r0, .L31+20
 379              	.LVL23:
 380 00be FFF7FEFF 		bl	HAL_GPIO_Init
 381              	.LVL24:
 175:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 382              		.loc 1 175 0
 383 00c2 0022     		movs	r2, #0
 384 00c4 1146     		mov	r1, r2
 385 00c6 2520     		movs	r0, #37
 386 00c8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 387              	.LVL25:
 176:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 388              		.loc 1 176 0
 389 00cc 2520     		movs	r0, #37
 390 00ce FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 391              	.LVL26:
 392              		.loc 1 181 0
 393 00d2 A4E7     		b	.L25
 394              	.L32:
 395              		.align	2
 396              	.L31:
 397 00d4 00500040 		.word	1073762304
 398 00d8 00380140 		.word	1073821696
 399 00dc 00100240 		.word	1073876992
 400 00e0 00080048 		.word	1207961600
 401 00e4 000C0048 		.word	1207962624
 402 00e8 00040048 		.word	1207960576
 403              		.cfi_endproc
 404              	.LFE331:
 406              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 407              		.align	1
 408              		.global	HAL_UART_MspDeInit
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	HAL_UART_MspDeInit:
 415              	.LFB332:
 182:Core/Src/usart.c **** 
 183:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 184:Core/Src/usart.c **** {
 416              		.loc 1 184 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              	.LVL27:
 421 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cc3RdyM6.s 			page 12


 422              	.LCFI6:
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
 185:Core/Src/usart.c **** 
 186:Core/Src/usart.c ****   if(uartHandle->Instance==UART5)
 426              		.loc 1 186 0
 427 0002 0368     		ldr	r3, [r0]
 428 0004 124A     		ldr	r2, .L39
 429 0006 9342     		cmp	r3, r2
 430 0008 03D0     		beq	.L37
 187:Core/Src/usart.c ****   {
 188:Core/Src/usart.c ****   /* USER CODE BEGIN UART5_MspDeInit 0 */
 189:Core/Src/usart.c **** 
 190:Core/Src/usart.c ****   /* USER CODE END UART5_MspDeInit 0 */
 191:Core/Src/usart.c ****     /* Peripheral clock disable */
 192:Core/Src/usart.c ****     __HAL_RCC_UART5_CLK_DISABLE();
 193:Core/Src/usart.c **** 
 194:Core/Src/usart.c ****     /**UART5 GPIO Configuration
 195:Core/Src/usart.c ****     PC12     ------> UART5_TX
 196:Core/Src/usart.c ****     PD2     ------> UART5_RX
 197:Core/Src/usart.c ****     */
 198:Core/Src/usart.c ****     HAL_GPIO_DeInit(RADIO_UART5_TX_GPIO_Port, RADIO_UART5_TX_Pin);
 199:Core/Src/usart.c **** 
 200:Core/Src/usart.c ****     HAL_GPIO_DeInit(RADIO_UART5_RX_GPIO_Port, RADIO_UART5_RX_Pin);
 201:Core/Src/usart.c **** 
 202:Core/Src/usart.c ****   /* USER CODE BEGIN UART5_MspDeInit 1 */
 203:Core/Src/usart.c **** 
 204:Core/Src/usart.c ****   /* USER CODE END UART5_MspDeInit 1 */
 205:Core/Src/usart.c ****   }
 206:Core/Src/usart.c ****   else if(uartHandle->Instance==USART1)
 431              		.loc 1 206 0
 432 000a 124A     		ldr	r2, .L39+4
 433 000c 9342     		cmp	r3, r2
 434 000e 10D0     		beq	.L38
 435              	.LVL28:
 436              	.L33:
 207:Core/Src/usart.c ****   {
 208:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 209:Core/Src/usart.c **** 
 210:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 211:Core/Src/usart.c ****     /* Peripheral clock disable */
 212:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 213:Core/Src/usart.c **** 
 214:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 215:Core/Src/usart.c ****     PB6     ------> USART1_TX
 216:Core/Src/usart.c ****     PB7     ------> USART1_RX
 217:Core/Src/usart.c ****     */
 218:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPS_USART1_TX_Pin|GPS_USART1_RX_Pin);
 219:Core/Src/usart.c **** 
 220:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 221:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 222:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 223:Core/Src/usart.c **** 
 224:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 225:Core/Src/usart.c ****   }
 226:Core/Src/usart.c **** }
ARM GAS  /tmp/cc3RdyM6.s 			page 13


 437              		.loc 1 226 0
 438 0010 08BD     		pop	{r3, pc}
 439              	.LVL29:
 440              	.L37:
 192:Core/Src/usart.c **** 
 441              		.loc 1 192 0
 442 0012 02F5E032 		add	r2, r2, #114688
 443 0016 936D     		ldr	r3, [r2, #88]
 444 0018 23F48013 		bic	r3, r3, #1048576
 445 001c 9365     		str	r3, [r2, #88]
 198:Core/Src/usart.c **** 
 446              		.loc 1 198 0
 447 001e 4FF48051 		mov	r1, #4096
 448 0022 0D48     		ldr	r0, .L39+8
 449              	.LVL30:
 450 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 451              	.LVL31:
 200:Core/Src/usart.c **** 
 452              		.loc 1 200 0
 453 0028 0421     		movs	r1, #4
 454 002a 0C48     		ldr	r0, .L39+12
 455 002c FFF7FEFF 		bl	HAL_GPIO_DeInit
 456              	.LVL32:
 457 0030 EEE7     		b	.L33
 458              	.LVL33:
 459              	.L38:
 212:Core/Src/usart.c **** 
 460              		.loc 1 212 0
 461 0032 02F55842 		add	r2, r2, #55296
 462 0036 136E     		ldr	r3, [r2, #96]
 463 0038 23F48043 		bic	r3, r3, #16384
 464 003c 1366     		str	r3, [r2, #96]
 218:Core/Src/usart.c **** 
 465              		.loc 1 218 0
 466 003e C021     		movs	r1, #192
 467 0040 0748     		ldr	r0, .L39+16
 468              	.LVL34:
 469 0042 FFF7FEFF 		bl	HAL_GPIO_DeInit
 470              	.LVL35:
 221:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 471              		.loc 1 221 0
 472 0046 2520     		movs	r0, #37
 473 0048 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 474              	.LVL36:
 475              		.loc 1 226 0
 476 004c E0E7     		b	.L33
 477              	.L40:
 478 004e 00BF     		.align	2
 479              	.L39:
 480 0050 00500040 		.word	1073762304
 481 0054 00380140 		.word	1073821696
 482 0058 00080048 		.word	1207961600
 483 005c 000C0048 		.word	1207962624
 484 0060 00040048 		.word	1207960576
 485              		.cfi_endproc
 486              	.LFE332:
 488              		.comm	huart1,144,4
ARM GAS  /tmp/cc3RdyM6.s 			page 14


 489              		.comm	huart5,144,4
 490              		.text
 491              	.Letext0:
 492              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 493              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 494              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 495              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 496              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h"
 497              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 498              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 499              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 500              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 501              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 502              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 503              		.file 13 "Core/Inc/usart.h"
 504              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
 505              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart_ex.h"
 506              		.file 16 "Core/Inc/main.h"
ARM GAS  /tmp/cc3RdyM6.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/cc3RdyM6.s:18     .text.MX_UART5_Init:0000000000000000 $t
     /tmp/cc3RdyM6.s:25     .text.MX_UART5_Init:0000000000000000 MX_UART5_Init
     /tmp/cc3RdyM6.s:115    .text.MX_UART5_Init:0000000000000060 $d
                            *COM*:0000000000000090 huart5
     /tmp/cc3RdyM6.s:121    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cc3RdyM6.s:128    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cc3RdyM6.s:222    .text.MX_USART1_UART_Init:000000000000006c $d
                            *COM*:0000000000000090 huart1
     /tmp/cc3RdyM6.s:228    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc3RdyM6.s:235    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc3RdyM6.s:397    .text.HAL_UART_MspInit:00000000000000d4 $d
     /tmp/cc3RdyM6.s:407    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc3RdyM6.s:414    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc3RdyM6.s:480    .text.HAL_UART_MspDeInit:0000000000000050 $d

UNDEFINED SYMBOLS
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
