ARM GAS  /tmp/cceGX4yx.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_ADC_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_ADC_MspInit:
  26              	.LFB331:
  27              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @file    stm32g4xx_hal_adc.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          "stm32g4xx_hal_adc_ex.c".
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   @verbatim
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   [..]
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       analog watchdog or overrun events.
  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/cceGX4yx.s 			page 2


  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC gain compensation
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC calibration
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC conversion of regular group.
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       Vdda or to an external voltage reference).
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                      ##### How to use this driver #####
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ==============================================================================
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ============================================================
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Enable the ADC interface
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from AHB clock
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    or asynchronous clock derived from system clock or PLL (output divider P)
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    running up to 75MHz.
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) Example:
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    other device clock parameters configuration:
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
ARM GAS  /tmp/cceGX4yx.s 			page 3


  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) ADC pins configuration
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_GPIO_Init()
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               ADCx_IRQHandler().
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_DMA_Init().
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ================================================================
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADC_Init().
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         monitored, thresholds, ...)
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Execution of ADC conversions ***
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ====================================
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         conversion accuracy
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         transfer by DMA.
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC conversion by polling:
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Start()
ARM GAS  /tmp/cceGX4yx.s 			page 4


 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Retrieve conversion results
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC conversion by interruption:
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 (this function must be implemented in user program)
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Retrieve conversion results
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 (these functions must be implemented in user program)
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 destination variable address.
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Deinitialization of ADC ***
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ============================================================
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Disable the ADC interface
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC clock disable
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) Example:
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    other device clock parameters configuration:
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) ADC pins configuration
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
ARM GAS  /tmp/cceGX4yx.s 			page 5


 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Deinitialize the DMA
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_DMA_Init().
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     *** Callback registration ***
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     =============================================
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      to register an interrupt callback.
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      and a pointer to the user callback function.
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      weak function.
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      and the Callback ID.
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      This function allows to reset following callbacks:
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
ARM GAS  /tmp/cceGX4yx.s 			page 6


 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      are set to the corresponding weak functions.
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   @endverbatim
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ******************************************************************************
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @attention
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * All rights reserved.</center></h2>
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ******************************************************************************
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #include "stm32g4xx_hal.h"
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @addtogroup STM32G4xx_HAL_Driver
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC ADC
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief ADC HAL module driver
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
ARM GAS  /tmp/cceGX4yx.s 			page 7


 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) De-initialize the ADC.
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
ARM GAS  /tmp/cceGX4yx.s 			page 8


 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         in header of this file).
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         before HAL_ADC_Init().
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         only if all ADCs are disabled.
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         without  disabling the other ADCs.
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpCFGR;
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check ADC handle */
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc == NULL)
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     return HAL_ERROR;
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_GAIN_COMPENSATION(hadc->Init.GainCompensation));
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLINGMODE(hadc->Init.SamplingMode));
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
ARM GAS  /tmp/cceGX4yx.s 			page 9


 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Init the low level hardware */
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Init the low level hardware */
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC error code to none */
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Initialize Lock */
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC deep power down mode */
ARM GAS  /tmp/cceGX4yx.s 			page 10


 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       wait_loop_index--;
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update ADC state machine to error */
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - clock configuration                                                 */
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
ARM GAS  /tmp/cceGX4yx.s 			page 11


 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*                                                                      */
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*                                                                      */
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* parameters):                                                         */
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* start.                                                                 */
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       software start.                                                  */
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  );
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update Configuration Register CFGR */
ARM GAS  /tmp/cceGX4yx.s 			page 12


 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of sampling mode */
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, hadc->Init.SamplingMode);
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Gain Compensation               Init.GainCompensation               */
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.GainCompensation != 0UL)
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR2, ADC_CFGR2_GCOMP);
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, hadc->Init.GainCompensation);
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_GCOMP);
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, 0UL);
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Right bit shift                                                 */
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Triggered mode                                                  */
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
ARM GAS  /tmp/cceGX4yx.s 			page 13


 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   );
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Initialize the ADC state */
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update ADC state machine to error */
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         common group is still running.
ARM GAS  /tmp/cceGX4yx.s 			page 14


 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check ADC handle */
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc == NULL)
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     return HAL_ERROR;
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC state */
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Stop potential conversion on going */
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* injected sequence.                                                       */
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable the ADC peripheral */
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Change ADC state */
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register IER */
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
ARM GAS  /tmp/cceGX4yx.s 			page 15


 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register ISR */
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CR */
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      no direct reset applicable.
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CFGR */
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CFGR2 */
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SMPR1 */
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SMPR2 */
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register TR1 */
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register TR2 */
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register TR3 */
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR1 */
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR2 */
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR3 */
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR4 */
ARM GAS  /tmp/cceGX4yx.s 			page 16


 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register DR */
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR1 */
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR2 */
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR3 */
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR4 */
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register AWD2CR */
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register AWD3CR */
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register DIFSEL */
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CALFACT */
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ADCs are disabled.   */
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     */
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripherals instances        */
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* sharing the same common ADC instance: ADC state is forced to           */
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* a similar state as after device power-on.                              */
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: A possible implementation is to add RCC bus reset of ADC         */
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* (for example, using macro                                              */
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->MspDeInitCallback == NULL)
ARM GAS  /tmp/cceGX4yx.s 			page 17


 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* DeInit the low level hardware */
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->MspDeInitCallback(hadc);
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* DeInit the low level hardware */
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC error code to none */
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC state */
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
  28              		.loc 1 922 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****    */
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
  34              		.loc 1 929 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE331:
  39              		.section	.text.HAL_ADC_Init,"ax",%progbits
  40              		.align	1
  41              		.global	HAL_ADC_Init
  42              		.syntax unified
ARM GAS  /tmp/cceGX4yx.s 			page 18


  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HAL_ADC_Init:
  48              	.LFB329:
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  49              		.loc 1 404 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 8
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              	.LVL1:
  54 0000 30B5     		push	{r4, r5, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 12
  57              		.cfi_offset 4, -12
  58              		.cfi_offset 5, -8
  59              		.cfi_offset 14, -4
  60 0002 83B0     		sub	sp, sp, #12
  61              	.LCFI1:
  62              		.cfi_def_cfa_offset 24
  63              	.LVL2:
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
  64              		.loc 1 408 0
  65 0004 0023     		movs	r3, #0
  66 0006 0193     		str	r3, [sp, #4]
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
  67              		.loc 1 413 0
  68 0008 0028     		cmp	r0, #0
  69 000a 00F04B81 		beq	.L32
  70 000e 0446     		mov	r4, r0
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
  71              		.loc 1 451 0
  72 0010 C36D     		ldr	r3, [r0, #92]
  73 0012 13B3     		cbz	r3, .L45
  74              	.LVL3:
  75              	.L4:
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
  76              		.loc 1 485 0
  77 0014 2368     		ldr	r3, [r4]
  78              	.LVL4:
  79              	.LBB358:
  80              	.LBB359:
  81              		.file 2 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @file    stm32g4xx_ll_adc.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
ARM GAS  /tmp/cceGX4yx.s 			page 19


  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #ifndef STM32G4xx_LL_ADC_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define STM32G4xx_LL_ADC_H
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #ifdef __cplusplus
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** extern "C" {
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #include "stm32g4xx.h"
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @addtogroup STM32G4xx_LL_Driver
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3) || defined (ADC4) || defined (ADC5)
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer register offset                                                */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ1_Pos)
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ2_Pos)
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ3_Pos)
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ4_Pos)
ARM GAS  /tmp/cceGX4yx.s 			page 20


  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ5_Pos)
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ6_Pos)
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ7_Pos)
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ8_Pos)
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ9_Pos)
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS (ADC_SQR3_SQ10_Pos)
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS (ADC_SQR3_SQ11_Pos)
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (ADC_SQR3_SQ12_Pos)
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (ADC_SQR3_SQ13_Pos)
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (ADC_SQR3_SQ14_Pos)
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS (ADC_SQR4_SQ15_Pos)
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS (ADC_SQR4_SQ16_Pos)
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - data register offset                                                     */
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - regular trigger source                                                   */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
ARM GAS  /tmp/cceGX4yx.s 			page 21


 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (ADC_CFGR_EXTSEL_Pos)
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (ADC_CFGR_EXTEN_Pos)
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - injected trigger source                                                  */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  (ADC_JSQR_JEXTSEL_Pos)
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   (ADC_JSQR_JEXTEN_Pos)
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (ADC_CFGR_AWD1CH_Pos)
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
ARM GAS  /tmp/cceGX4yx.s 			page 22


 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
ARM GAS  /tmp/cceGX4yx.s 			page 23


 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   selection on groups.                                                     */
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
ARM GAS  /tmp/cceGX4yx.s 			page 24


 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC registers bits positions */
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (ADC_TR1_HT1_Pos)
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC registers bits groups */
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC internal channels related definitions */
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3000UL)                     /* Analog voltage reference
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Temperature sensor */
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cceGX4yx.s 			page 25


 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is applied.
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Pointer to register address
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and multimode
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         disabled.
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
ARM GAS  /tmp/cceGX4yx.s 			page 26


 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions with prefix "REG").
ARM GAS  /tmp/cceGX4yx.s 			page 27


 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              data preserved or overwritten.
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
ARM GAS  /tmp/cceGX4yx.s 			page 28


 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
ARM GAS  /tmp/cceGX4yx.s 			page 29


 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
ARM GAS  /tmp/cceGX4yx.s 			page 30


 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* DMA transfer.                                                              */
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_VSENSESEL)    /*!< ADC measurement path to inte
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATSEL)      /*!< ADC measurement path to inte
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
ARM GAS  /tmp/cceGX4yx.s 			page 31


 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)       /*!< ADC offset is negative (among 
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC_OFR1_OFFSETPOS) /*!< ADC offset is positive (among 
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 32


 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)          /*!< ADC offset saturation is di
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC_OFR1_SATEN)        /*!< ADC offset saturation is en
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR_ADC1     (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR_ADC5     (LL_ADC_CHANNEL_4  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP1             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP2             (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP3_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP3_ADC3        (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP4             (LL_ADC_CHANNEL_5  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP5             (LL_ADC_CHANNEL_3  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP6             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
ARM GAS  /tmp/cceGX4yx.s 			page 33


 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger internal: SW start.
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH1       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH1       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM7_TRGO      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_CH1       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_TRGO     (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
ARM GAS  /tmp/cceGX4yx.s 			page 34


 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_TRGO2    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH1      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH2      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH3      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG1     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG2     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG3     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG4     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG5     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG6     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EX
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG7     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG8     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG9     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG10    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE2     (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM_OUT      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
ARM GAS  /tmp/cceGX4yx.s 			page 35


 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)       /*!< ADC conversions sam
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC_CFGR2_BULB)     /*!< ADC conversions sam
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                 Note: First convers
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC_CFGR2_SMPTRIG)  /*!< ADC conversions sam
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                  Trigger rising edg
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                  Trigger falling ed
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/cceGX4yx.s 			page 36


 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
ARM GAS  /tmp/cceGX4yx.s 			page 37


1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger internal: SW start
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH3       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM7_TRGO      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH2       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
ARM GAS  /tmp/cceGX4yx.s 			page 38


1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM16_CH1      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2    (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_CH2      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger available only on ADC3/4/5 instances. On this ST
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_CH4      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger available only on ADC1/2 instances. On this STM3
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10    (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE3     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM_OUT      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
ARM GAS  /tmp/cceGX4yx.s 			page 39


1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
ARM GAS  /tmp/cceGX4yx.s 			page 40


1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /tmp/cceGX4yx.s 			page 41


1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
ARM GAS  /tmp/cceGX4yx.s 			page 42


1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_REG          ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK)   
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_INJ          ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) | 
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) | 
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_REG          ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK)   
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_INJ          ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) | 
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) | 
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK)   
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) | 
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) | 
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK)   
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) | 
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) | 
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_REG          ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK)   
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_INJ          ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) | 
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) | 
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_REG          ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK)   
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_INJ          ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) | 
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) | 
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_REG          ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK)   
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_INJ          ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) | 
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) | 
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                                          
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (                                        ADC_TR1_AWDFILT
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (                    ADC_TR1_AWDFILT_1                  
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (                    ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC_TR1_AWDFILT_2                                      
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC_TR1_AWDFILT_2 |                     ADC_TR1_AWDFILT
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1                  
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/cceGX4yx.s 			page 43


1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
ARM GAS  /tmp/cceGX4yx.s 			page 44


1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not timeout values.
1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         above each literal definition.
ARM GAS  /tmp/cceGX4yx.s 			page 45


1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       not timeout values.                                                  */
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       STM32 series:                                                        */
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         cycles                                                             */
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         configuration.                                                     */
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)  /*!< Delay required between ADC end of cali
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 46


1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Read a value in ADC register
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Register value
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Example:
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will return decimal number "4".
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number is returned, either defined with number
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /tmp/cceGX4yx.s 			page 47


1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                       \
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                       \
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                       \
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                       \
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                       \
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from number in decimal format.
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Example:
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /tmp/cceGX4yx.s 			page 48


1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                               
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                               
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                               
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                               
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC internal channel:
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
ARM GAS  /tmp/cceGX4yx.s 			page 49


1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned from ADC registers,
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         parameters definitions of driver.
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
ARM GAS  /tmp/cceGX4yx.s 			page 50


1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a value defined from parameter definition of
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC registers.
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
ARM GAS  /tmp/cceGX4yx.s 			page 51


1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or a value from functions where a channel number is
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned from ADC registers,
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         parameters definitions of driver.
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
ARM GAS  /tmp/cceGX4yx.s 			page 52


1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(STM32G474xx) || defined(STM32G484xx) || defined(STM32G473xx) || defined(STM32G483xx)
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC4)                                               \
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP6)         ||                    \
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC5)                                               \
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP5)         ||                    \
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC5) ||                    \
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP4)         ||                    \
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32G471xx)
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
ARM GAS  /tmp/cceGX4yx.s 			page 53


1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32GBK1CB) || defined(STM32G431xx) || defined(STM32G441xx)
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32G491xx) || defined(STM32G4A1xx)
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP6)         ||                    \
ARM GAS  /tmp/cceGX4yx.s 			page 54


2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example:
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
ARM GAS  /tmp/cceGX4yx.s 			page 55


2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
ARM GAS  /tmp/cceGX4yx.s 			page 56


2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG  (0)(1)
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ  (0)(1)
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ (1)
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG  (0)(5)
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ  (0)(5)
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ (5)
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(6)
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(6)
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (6)
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG          (0)(1)
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_INJ          (0)(1)
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG_INJ         (1)
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG          (0)(2)
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_INJ          (0)(2)
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG_INJ         (2)
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     (0)(2)
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     (0)(2)
2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ    (2)
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     (0)(3)
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     (0)(3)
2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ    (3)
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG          (0)(5)
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_INJ          (0)(5)
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG_INJ         (5)
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG          (0)(5)
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_INJ          (0)(5)
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG_INJ         (5)
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG          (0)(4)
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_INJ          (0)(4)
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG_INJ         (4)
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.\n
2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
ARM GAS  /tmp/cceGX4yx.s 			page 57


2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         different of 12 bits.
2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            (< ADCx param >,
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            );
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         different of 12 bits.
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            );
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
ARM GAS  /tmp/cceGX4yx.s 			page 58


2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
2248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
2254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential ended to 0x2A:
2256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC1,
2258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC common instance).
2289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         any other ADC instance).
2294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
ARM GAS  /tmp/cceGX4yx.s 			page 59


2295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC5)
2298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )?                                                                         \
2301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (ADC1)                                                                     \
2302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     :                                                                          \
2303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ( ( ((__ADCx__) == ADC4)                                                   \
2304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )?                                                                       \
2305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (ADC3)                                                                   \
2306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (__ADCx__)                                                               \
2308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )                                                                          \
2309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )?                                                                         \
2314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (ADC1)                                                                     \
2315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     :                                                                          \
2316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (__ADCx__)                                                                 \
2317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC5 */
2319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC common register instance
2330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC345_COMMON)
2332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
2334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
2336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (                                                                        \
2339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC345_COMMON)                                                         \
2340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)  (ADC12_COMMON)
2344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC345_COMMON */
2345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC common instance are disabled.
2348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
ARM GAS  /tmp/cceGX4yx.s 			page 60


2352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are disabled.
2359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled.
2361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC345_COMMON)
2363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC4) &&  defined(ADC5)
2364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (                                                                        \
2372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC3) |                                               \
2373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC4) |                                               \
2374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC5)  )                                              \
2375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (LL_ADC_IsEnabled(ADC3))                                                 \
2386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC4 && ADC5 */
2388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
2391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (refer to reference manual).
2399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 61


2409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a resolution to another resolution.
2412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((__DATA__)                                                                 \
2431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                       (unit: digital value).
2444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       __ADC_DATA__,\
2453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         reference VrefInt.
2462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         connected to pin Vref+.
ARM GAS  /tmp/cceGX4yx.s 			page 62


2466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calculation formula:
2497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor.
2522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
ARM GAS  /tmp/cceGX4yx.s 			page 63


2523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                            \
2539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   (__ADC_RESOLUTION__),          \
2541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   LL_ADC_RESOLUTION_12B)         \
2542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                  * (__VREFANALOG_VOLTAGE__))                                     \
2543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                 / TEMPSENSOR_CAL_VREFANALOG)                                     \
2544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  ) + TEMPSENSOR_CAL1_TEMP                                                        \
2548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (refer to device datasheet).
2555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calculation formula:
2556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   (unit: digital value)
2560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  datasheet typical values.
2567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
ARM GAS  /tmp/cceGX4yx.s 			page 64


2580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       On STM32G4, refer to device datasheet parameter "Avg_Slop
2581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       On STM32G4, refer to device datasheet parameter "V30" (co
2583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               * 1000UL)                                                     \
2603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     -                                                                       \
2604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               * 1000UL)                                                     \
2606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                        \
2607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
ARM GAS  /tmp/cceGX4yx.s 			page 65


2637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example:
2642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC register address
2661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t data_reg_addr;
2666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
2669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     /* Retrieve address of register DR */
2670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
2672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
2674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
2677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return data_reg_addr;
2679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(Register);
2685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Retrieve address of register DR */
2687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/cceGX4yx.s 			page 66


2694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must be respected.
2704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
2705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
ARM GAS  /tmp/cceGX4yx.s 			page 67


2751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalCh\n
2787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalCh
2788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSEL, PathInternal)
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Add paths to the current configuration.
2806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
ARM GAS  /tmp/cceGX4yx.s 			page 68


2808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalChAdd\n
2822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalChAdd
2823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Remove paths to the current configuration.
2841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalChRem\n
2846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalChRem
2847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
ARM GAS  /tmp/cceGX4yx.s 			page 69


2865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_GetCommonPathInternalCh\n
2869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_GetCommonPathInternalCh
2870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSE
2881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without having to perform a new calibration using
2896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
2900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         requires their calibration).
2903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on group regular.
2912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/cceGX4yx.s 			page 70


2922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
2937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
2952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
2953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
2954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC resolution.
2958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
2964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/cceGX4yx.s 			page 71


2979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
3004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
3006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
3011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
3013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
3017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
3020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           in order to reduce power consumption.
ARM GAS  /tmp/cceGX4yx.s 			page 72


3036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           has been retrieved by user software.
3040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           other conversion.
3042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           applications.
3046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           How to use this low power mode:
3047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC conversion start.
3058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
3070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
3077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           in order to reduce power consumption.
3092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
ARM GAS  /tmp/cceGX4yx.s 			page 73


3093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           has been retrieved by user software.
3096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           other conversion.
3098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           applications.
3102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           How to use this low power mode:
3103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC conversion start.
3114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
3133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or group injected)
3143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           converted data).
3145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are set to 0.
3148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
ARM GAS  /tmp/cceGX4yx.s 			page 74


3150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
3157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
3179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
3180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
3181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
3182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
3183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
3197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
3198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
3199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
3200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
3201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
3202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
3203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
3204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
3206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
ARM GAS  /tmp/cceGX4yx.s 			page 75


3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
3210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
3211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
3212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
3213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
3214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
3215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
3216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
3217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
3218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or group injected)
3235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
3243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
3245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
3247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
3261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
3262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
3263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
ARM GAS  /tmp/cceGX4yx.s 			page 76


3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
3265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
3279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
3280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
3281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
3282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
3283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
3284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
3285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
3286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
3287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
3288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
3289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
3291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
3292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
3293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
3294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
3295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
3296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
3297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
3298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
3299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
3300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
3301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         converted data).
3315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are set to 0.
3318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
ARM GAS  /tmp/cceGX4yx.s 			page 77


3321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         force offset state disable or enable
3340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetState);
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset state disabled or enabled.
3375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
ARM GAS  /tmp/cceGX4yx.s 			page 78


3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         choose offset sign.
3399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
3404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
3405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
3406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
3407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
3414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
3419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
3424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetSign);
3425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset sign if positive or negative.
3430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
3431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
3432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
3433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
3434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/cceGX4yx.s 			page 79


3435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety)
3445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSETPOS);
3449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         choose offset saturation mode.
3454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
3459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
3460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
3461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
3462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
3469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
3474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
3479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetSaturation);
3480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
3485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
3486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
3487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
3488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
3489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
ARM GAS  /tmp/cceGX4yx.s 			page 80


3492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_SATEN);
3504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC gain compensation.
3508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the gain compensation coefficient
3509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         that is applied to raw converted data using the formula:
3510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           DATA = DATA(raw) * (gain compensation coef) / 4096
3511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function enables the gain compensation if given
3512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coefficient is above 0, otherwise it disables it.
3513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Gain compensation when enabled is applied to all channels.
3514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll GCOMP    GCOMPCOEFF     LL_ADC_SetGainCompensation\n
3519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    GCOMP          LL_ADC_SetGainCompensation
3520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  GainCompensation This parameter can be:
3522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         0           Gain compensation will be disabled and value set to 0
3523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 -> 16393  Gain compensation will be enabled with specified value
3524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetGainCompensation(ADC_TypeDef *ADCx, uint32_t GainCompensation)
3527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->GCOMP, ADC_GCOMP_GCOMPCOEFF, GainCompensation);
3529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_GCOMP, ((GainCompensation == 0UL) ? 0UL : 1UL) << ADC_CFGR2_GCO
3530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the ADC gain compensation value
3534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll GCOMP    GCOMPCOEFF     LL_ADC_GetGainCompensation\n
3535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    GCOMP          LL_ADC_GetGainCompensation
3536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be:
3538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         0           Gain compensation is disabled
3539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 -> 16393  Gain compensation is enabled with returned value
3540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetGainCompensation(ADC_TypeDef *ADCx)
3542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR2, ADC_CFGR2_GCOMP) == ADC_CFGR2_GCOMP) ? READ_BIT(ADCx->GCOMP, ADC_G
3544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
ARM GAS  /tmp/cceGX4yx.s 			page 81


3549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
3583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
3587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
3593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
ARM GAS  /tmp/cceGX4yx.s 			page 82


3606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1        (1)
3613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2        (1)
3614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH1        (2)
3617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2        (1)
3618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3        (2)
3619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1        (2)
3621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4        (1)
3622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH1        (2)
3624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4        (1)
3625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO
3627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1        (2)
3630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO
3632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO2
3633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH1
3634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH2       (1)
3635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH3       (1)
3636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG2      (2)
3638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG4      (2)
3640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG5
3641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG6
3642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG7
3643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG8
3644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG9
3645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG10
3646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11     (1)
3647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE2      (2)
3648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM_OUT
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
3652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
3653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
ARM GAS  /tmp/cceGX4yx.s 			page 83


3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
3664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (equivalent to
3668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1        (1)
3680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2        (1)
3681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH1        (2)
3684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2        (1)
3685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3        (2)
3686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1        (2)
3688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4        (1)
3689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH1        (2)
3691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4        (1)
3692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO
3694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1        (2)
3697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO
3699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO2
3700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH1
3701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH2       (1)
3702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH3       (1)
3703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG2      (2)
3705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG4      (2)
3707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG5
3708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG6
3709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG7
3710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG8
3711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG9
3712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG10
3713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11     (1)
3714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE2      (2)
3715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM_OUT
3716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
3718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
3719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
ARM GAS  /tmp/cceGX4yx.s 			page 84


3720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((TriggerSource
3732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****          );
3735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or external.
3740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
ARM GAS  /tmp/cceGX4yx.s 			page 85


3777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
3790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
3791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This mode applies to regular group only.
3792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Set sampling mode is applied to all conversion of regular group.
3793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
3798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
3799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
3801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
3807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, SamplingMode);
3809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the ADC sampling mode
3813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_GetSamplingMode\n
3814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_GetSamplingMode
3815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSamplingMode(ADC_TypeDef *ADCx)
3822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG));
3824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are configurable.
3833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function performs configuration of:
ARM GAS  /tmp/cceGX4yx.s 			page 86


3834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are defined by channel number.
3843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function performs configuration of:
3844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             highest channel number).
3851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
ARM GAS  /tmp/cceGX4yx.s 			page 87


3891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are configurable.
3892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function retrieves:
3893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are defined by channel number.
3902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function retrieves:
3903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             highest channel number).
3910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
3943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/cceGX4yx.s 			page 88


3948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
3975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         scan sequence rank.
3997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function performs configuration of:
3998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
ARM GAS  /tmp/cceGX4yx.s 			page 89


4005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  /tmp/cceGX4yx.s 			page 90


4062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
4096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
4101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         scan sequence rank.
4108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
ARM GAS  /tmp/cceGX4yx.s 			page 91


4119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
4122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
4124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
ARM GAS  /tmp/cceGX4yx.s 			page 92


4176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
4202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
4208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
4213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           conversions launched successively automatically.
4221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cceGX4yx.s 			page 93


4233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           conversions launched successively automatically.
4245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
4252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode:
4261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
4264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
4268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
4271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cceGX4yx.s 			page 94


4290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode:
4301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
4304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
4308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
4311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
4327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         data preserved or overwritten.
4334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         other devices without this feature have a behavior
4336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         equivalent to data overwritten.
4337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
ARM GAS  /tmp/cceGX4yx.s 			page 95


4347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         data preserved or overwritten.
4359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
4366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
4372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
4376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
4382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
ARM GAS  /tmp/cceGX4yx.s 			page 96


4404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
4437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
4439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
4441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
4452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (equivalent to
4456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
ARM GAS  /tmp/cceGX4yx.s 			page 97


4461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
4503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
4505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
4507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
4509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
4515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
ARM GAS  /tmp/cceGX4yx.s 			page 98


4518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((TriggerSource
4519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****          );
4522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             or external
4527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
4536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 99


4575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function performs configuration of:
4578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function retrieves:
4604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
4626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
ARM GAS  /tmp/cceGX4yx.s 			page 100


4632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
4644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence rank.
4658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
4665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  /tmp/cceGX4yx.s 			page 101


4689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence rank.
4738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
ARM GAS  /tmp/cceGX4yx.s 			page 102


4746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
4748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
4750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
ARM GAS  /tmp/cceGX4yx.s 			page 103


4803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
4804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
4813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent or from ADC group regular.
4818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC group injected.
4824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent trigger.
4827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC group regular.
4832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent or from ADC group regular.
4853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
ARM GAS  /tmp/cceGX4yx.s 			page 104


4860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - group injected trigger
4868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer length
4869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer ranks
4870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If contexts queue is disabled:
4871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           and is active perpetually.
4873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If contexts queue is enabled:
4874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           into the queue).
4885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
ARM GAS  /tmp/cceGX4yx.s 			page 105


4917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         contexts queue.
4928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - group injected trigger
4930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer length
4931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer ranks
4932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         cannot be used):
4936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
4947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
ARM GAS  /tmp/cceGX4yx.s 			page 106


4974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
5000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
5002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
5003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
5004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /tmp/cceGX4yx.s 			page 107


5031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
ARM GAS  /tmp/cceGX4yx.s 			page 108


5088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
ARM GAS  /tmp/cceGX4yx.s 			page 109


5145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
ARM GAS  /tmp/cceGX4yx.s 			page 110


5202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JL,
5210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SequencerNbRanks
5217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             );
5218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
5222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
5226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         converted:
5235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         setting).
5238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TS_temp, ...).
5240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is required.
5249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
5250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
ARM GAS  /tmp/cceGX4yx.s 			page 111


5259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
ARM GAS  /tmp/cceGX4yx.s 			page 112


5316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
ARM GAS  /tmp/cceGX4yx.s 			page 113


5373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
ARM GAS  /tmp/cceGX4yx.s 			page 114


5430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
5432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
5439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
5444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC group regular or injected.
5446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         available in differential mode.
5452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not available in differential mode.
5454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some channels are internally fixed to single-ended inputs
5457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configuration:
5458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC1: Channels 12, 15, 16, 17 and 18
5459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC2: Channels 15, 17 and 18
5460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC3: Channels 12, 16, 17 and 18            (1)
5461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC4: Channels 16, 17 and 18                (1)
5462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC5: Channels 2, 3, 4, 16, 17 and 18       (1)
5463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) ADC3/4/5 are not available on all devices, refer to device datasheet
5464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
5465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
5472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/cceGX4yx.s 			page 115


5487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
5504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
5509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         available in differential mode.
5517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not available in differential mode.
5519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some channels are internally fixed to single-ended inputs
5522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configuration:
5523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC1: Channels 12, 15, 16, 17 and 18
5524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC2: Channels 15, 17 and 18
5525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC3: Channels 12, 16, 17 and 18            (1)
5526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC4: Channels 16, 17 and 18                (1)
5527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC5: Channels 2, 3, 4, 16, 17 and 18       (1)
5528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) ADC3/4/5 are not available on all devices, refer to device datasheet
5529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
5530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /tmp/cceGX4yx.s 			page 116


5544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
5554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
5560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
5564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled.
5572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
ARM GAS  /tmp/cceGX4yx.s 			page 117


5601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
ARM GAS  /tmp/cceGX4yx.s 			page 118


5658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
5674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)
5675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ
5676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG  (0)(1)
5677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ  (0)(1)
5678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ (1)
5679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG  (0)(5)
5680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ  (0)(5)
5681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ (5)
5682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(6)
5683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(6)
5684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (6)
5685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG          (0)(1)
5686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_INJ          (0)(1)
5687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG_INJ         (1)
5688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG          (0)(2)
5689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_INJ          (0)(2)
5690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG_INJ         (2)
5691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     (0)(2)
5692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     (0)(2)
5693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ    (2)
5694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     (0)(3)
5695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     (0)(3)
5696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ    (3)
5697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG          (0)(5)
5698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_INJ          (0)(5)
5699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG_INJ         (5)
5700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG          (0)(5)
5701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_INJ          (0)(5)
5702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG_INJ         (5)
5703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG          (0)(4)
5704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_INJ          (0)(4)
5705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG_INJ         (4)
5706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.\n
5708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
ARM GAS  /tmp/cceGX4yx.s 			page 119


5715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
5726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
5742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
5744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           one channel.
5747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
ARM GAS  /tmp/cceGX4yx.s 			page 120


5772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             by bitfield.
5789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
ARM GAS  /tmp/cceGX4yx.s 			page 121


5829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.
5853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC
5858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* or a single channel.                                                     */
5865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
5867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     {
5869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  )
5875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       else
5879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     }
ARM GAS  /tmp/cceGX4yx.s 			page 122


5886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     else
5887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     {
5888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       else
5896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     }
5905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
5906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         high and low.
5913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
5914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
ARM GAS  /tmp/cceGX4yx.s 			page 123


5943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
5944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
5967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
5971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         high or low.
5976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
ARM GAS  /tmp/cceGX4yx.s 			page 124


6000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
6002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
6007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
6009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
6010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
6011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
6016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
6029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
6039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDThresholdsHighLow,
6040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         concatenated.
6047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
6048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
6049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         using helper macro:
6050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
6051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
ARM GAS  /tmp/cceGX4yx.s 			page 125


6057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
6069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
6072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
6075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
6080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
6084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
6089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog (AWD1)
6090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
6091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
6095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
6106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(AWDy);
6109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->TR1, ADC_TR1_AWDFILT, FilteringConfig);
6110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
ARM GAS  /tmp/cceGX4yx.s 			page 126


6114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
6115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog (AWD1)
6116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
6117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be:
6121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy)
6131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(AWDy);
6134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR1, ADC_TR1_AWDFILT));
6135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (oversampler buffer reset).
6154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
ARM GAS  /tmp/cceGX4yx.s 			page 127


6171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (oversampler buffer reset).
6184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
6196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on the selected ADC group.
6203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are done from 1 trigger)
6206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           needs a trigger)
6208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
6212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/cceGX4yx.s 			page 128


6228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on the selected ADC group.
6230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are done from 1 trigger)
6233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           needs a trigger)
6235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
6242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling
6248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ratio
6251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - shift
6252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
6283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 129


6285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
6301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
6322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
6341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/cceGX4yx.s 			page 130


6342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro
6346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
6372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
6386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
6388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or transfer by DMA.
6393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         DMA transfer settings.
6396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
ARM GAS  /tmp/cceGX4yx.s 			page 131


6399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
6402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
6406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
6409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
6425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
6426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
6439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or transfer by DMA.
6444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         DMA transfer settings.
6447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
6453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
ARM GAS  /tmp/cceGX4yx.s 			page 132


6456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
6457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
6460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
6472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
6473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
6483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
6485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
ARM GAS  /tmp/cceGX4yx.s 			page 133


6513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
6551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/cceGX4yx.s 			page 134


6570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
6614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
  82              		.loc 2 6615 0
  83 0016 9A68     		ldr	r2, [r3, #8]
  84 0018 12F0005F 		tst	r2, #536870912
  85 001c 05D0     		beq	.L5
  86              	.LVL5:
  87              	.LBE359:
  88              	.LBE358:
  89              	.LBB360:
  90              	.LBB361:
6604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
  91              		.loc 2 6604 0
ARM GAS  /tmp/cceGX4yx.s 			page 135


  92 001e 9A68     		ldr	r2, [r3, #8]
  93 0020 22F02042 		bic	r2, r2, #-1610612736
  94 0024 22F03F02 		bic	r2, r2, #63
  95 0028 9A60     		str	r2, [r3, #8]
  96              	.LVL6:
  97              	.L5:
  98              	.LBE361:
  99              	.LBE360:
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 100              		.loc 1 495 0
 101 002a 2268     		ldr	r2, [r4]
 102              	.LVL7:
 103              	.LBB362:
 104              	.LBB363:
6616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
ARM GAS  /tmp/cceGX4yx.s 			page 136


6659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
6663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 105              		.loc 2 6664 0
 106 002c 9368     		ldr	r3, [r2, #8]
 107 002e 13F0805F 		tst	r3, #268435456
 108 0032 1FD1     		bne	.L6
 109              	.LVL8:
 110              	.LBE363:
 111              	.LBE362:
 112              	.LBB364:
 113              	.LBB365:
6637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 114              		.loc 2 6637 0
 115 0034 9368     		ldr	r3, [r2, #8]
 116 0036 23F01043 		bic	r3, r3, #-1879048192
 117 003a 23F03F03 		bic	r3, r3, #63
 118 003e 43F08053 		orr	r3, r3, #268435456
 119 0042 9360     		str	r3, [r2, #8]
 120              	.LVL9:
 121              	.LBE365:
 122              	.LBE364:
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 123              		.loc 1 503 0
 124 0044 984B     		ldr	r3, .L50
 125 0046 1B68     		ldr	r3, [r3]
 126 0048 9B09     		lsrs	r3, r3, #6
 127 004a 984A     		ldr	r2, .L50+4
 128 004c A2FB0323 		umull	r2, r3, r2, r3
 129 0050 9B09     		lsrs	r3, r3, #6
 130 0052 0133     		adds	r3, r3, #1
 131 0054 5B00     		lsls	r3, r3, #1
 132 0056 0193     		str	r3, [sp, #4]
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 133              		.loc 1 504 0
 134 0058 09E0     		b	.L7
 135              	.LVL10:
 136              	.L45:
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 137              		.loc 1 474 0
 138 005a FFF7FEFF 		bl	HAL_ADC_MspInit
 139              	.LVL11:
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 140              		.loc 1 478 0
 141 005e 0023     		movs	r3, #0
 142 0060 2366     		str	r3, [r4, #96]
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 143              		.loc 1 481 0
 144 0062 84F85830 		strb	r3, [r4, #88]
 145 0066 D5E7     		b	.L4
 146              	.L8:
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 147              		.loc 1 506 0
 148 0068 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/cceGX4yx.s 			page 137


 149 006a 013B     		subs	r3, r3, #1
 150 006c 0193     		str	r3, [sp, #4]
 151              	.L7:
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 152              		.loc 1 504 0
 153 006e 019B     		ldr	r3, [sp, #4]
 154 0070 002B     		cmp	r3, #0
 155 0072 F9D1     		bne	.L8
 156              	.L6:
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 157              		.loc 1 513 0
 158 0074 2368     		ldr	r3, [r4]
 159              	.LVL12:
 160              	.LBB366:
 161              	.LBB367:
 162              		.loc 2 6664 0
 163 0076 9A68     		ldr	r2, [r3, #8]
 164 0078 12F0805F 		tst	r2, #268435456
 165 007c 40D1     		bne	.L33
 166              	.LVL13:
 167              	.LBE367:
 168              	.LBE366:
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 169              		.loc 1 516 0
 170 007e E26D     		ldr	r2, [r4, #92]
 171 0080 42F01002 		orr	r2, r2, #16
 172 0084 E265     		str	r2, [r4, #92]
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 173              		.loc 1 519 0
 174 0086 226E     		ldr	r2, [r4, #96]
 175 0088 42F00102 		orr	r2, r2, #1
 176 008c 2266     		str	r2, [r4, #96]
 177              	.LVL14:
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 178              		.loc 1 521 0
 179 008e 0120     		movs	r0, #1
 180              	.LVL15:
 181              	.L9:
 182              	.LBB368:
 183              	.LBB369:
6665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion start.
6672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cceGX4yx.s 			page 138


6682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADEN);
6691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADDIS);
6711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/cceGX4yx.s 			page 139


6739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
6747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         requires their calibration).
6750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           starts immediately.
ARM GAS  /tmp/cceGX4yx.s 			page 140


6796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           following the ADC start conversion command.
6799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADSTART);
6816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADSTP);
6836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
6845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 184              		.loc 2 6846 0
 185 0090 9A68     		ldr	r2, [r3, #8]
 186 0092 12F0040F 		tst	r2, #4
 187 0096 35D0     		beq	.L34
 188 0098 0121     		movs	r1, #1
 189              	.L10:
ARM GAS  /tmp/cceGX4yx.s 			page 141


 190              	.LVL16:
 191              	.LBE369:
 192              	.LBE368:
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 193              		.loc 1 530 0
 194 009a E26D     		ldr	r2, [r4, #92]
 195 009c 12F0100F 		tst	r2, #16
 196 00a0 40F0F980 		bne	.L11
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 197              		.loc 1 531 0
 198 00a4 0029     		cmp	r1, #0
 199 00a6 40F0F680 		bne	.L11
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 200              		.loc 1 535 0
 201 00aa E26D     		ldr	r2, [r4, #92]
 202 00ac 22F48172 		bic	r2, r2, #258
 203 00b0 42F00202 		orr	r2, r2, #2
 204 00b4 E265     		str	r2, [r4, #92]
 205              	.LVL17:
 206              	.LBB371:
 207              	.LBB372:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 208              		.loc 2 6724 0
 209 00b6 9A68     		ldr	r2, [r3, #8]
 210 00b8 12F0010F 		tst	r2, #1
 211 00bc 43D1     		bne	.L12
 212              	.LVL18:
 213              	.LBE372:
 214              	.LBE371:
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 215              		.loc 1 546 0
 216 00be B3F1A04F 		cmp	r3, #1342177280
 217 00c2 21D0     		beq	.L13
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 218              		.loc 1 546 0 is_stmt 0 discriminator 2
 219 00c4 7A4A     		ldr	r2, .L50+8
 220 00c6 9342     		cmp	r3, r2
 221 00c8 1ED0     		beq	.L13
 222              	.LVL19:
 223              	.LBB373:
 224              	.LBB374:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 225              		.loc 2 6724 0 is_stmt 1
 226 00ca 7A4A     		ldr	r2, .L50+12
 227 00cc 9268     		ldr	r2, [r2, #8]
 228 00ce 12F0010F 		tst	r2, #1
 229 00d2 00F0A380 		beq	.L37
 230 00d6 0121     		movs	r1, #1
 231              	.L18:
 232              	.LVL20:
 233              	.LBE374:
 234              	.LBE373:
 235              	.LBB376:
 236              	.LBB377:
 237 00d8 774A     		ldr	r2, .L50+16
 238 00da 9268     		ldr	r2, [r2, #8]
 239 00dc 12F0010F 		tst	r2, #1
ARM GAS  /tmp/cceGX4yx.s 			page 142


 240 00e0 00F09E80 		beq	.L38
 241 00e4 0122     		movs	r2, #1
 242              	.L19:
 243              	.LVL21:
 244              	.LBE377:
 245              	.LBE376:
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 246              		.loc 1 546 0
 247 00e6 0A43     		orrs	r2, r2, r1
 248              	.LVL22:
 249              	.LBB379:
 250              	.LBB380:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 251              		.loc 2 6724 0
 252 00e8 7449     		ldr	r1, .L50+20
 253 00ea 8968     		ldr	r1, [r1, #8]
 254 00ec 11F0010F 		tst	r1, #1
 255 00f0 00F09880 		beq	.L39
 256 00f4 0121     		movs	r1, #1
 257              	.L20:
 258              	.LVL23:
 259              	.LBE380:
 260              	.LBE379:
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 261              		.loc 1 546 0
 262 00f6 0A43     		orrs	r2, r2, r1
 263 00f8 0CBF     		ite	eq
 264 00fa 0122     		moveq	r2, #1
 265 00fc 0022     		movne	r2, #0
 266 00fe 14E0     		b	.L17
 267              	.LVL24:
 268              	.L33:
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpCFGR;
 269              		.loc 1 405 0
 270 0100 0020     		movs	r0, #0
 271 0102 C5E7     		b	.L9
 272              	.LVL25:
 273              	.L34:
 274              	.LBB382:
 275              	.LBB370:
 276              		.loc 2 6846 0
 277 0104 0021     		movs	r1, #0
 278 0106 C8E7     		b	.L10
 279              	.LVL26:
 280              	.L13:
 281              	.LBE370:
 282              	.LBE382:
 283              	.LBB383:
 284              	.LBB384:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 285              		.loc 2 6724 0
 286 0108 4FF0A042 		mov	r2, #1342177280
 287 010c 9268     		ldr	r2, [r2, #8]
 288 010e 12F0010F 		tst	r2, #1
 289 0112 7FD0     		beq	.L35
 290 0114 0121     		movs	r1, #1
 291              	.L15:
ARM GAS  /tmp/cceGX4yx.s 			page 143


 292              	.LVL27:
 293              	.LBE384:
 294              	.LBE383:
 295              	.LBB386:
 296              	.LBB387:
 297 0116 664A     		ldr	r2, .L50+8
 298 0118 9268     		ldr	r2, [r2, #8]
 299 011a 12F0010F 		tst	r2, #1
 300 011e 7BD0     		beq	.L36
 301 0120 0122     		movs	r2, #1
 302              	.L16:
 303              	.LVL28:
 304              	.LBE387:
 305              	.LBE386:
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 306              		.loc 1 546 0
 307 0122 0A43     		orrs	r2, r2, r1
 308 0124 0CBF     		ite	eq
 309 0126 0122     		moveq	r2, #1
 310 0128 0022     		movne	r2, #0
 311              	.L17:
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 312              		.loc 1 546 0 is_stmt 0 discriminator 6
 313 012a 62B1     		cbz	r2, .L12
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 314              		.loc 1 565 0 is_stmt 1
 315 012c B3F1A04F 		cmp	r3, #1342177280
 316 0130 7CD0     		beq	.L40
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 317              		.loc 1 565 0 is_stmt 0 discriminator 2
 318 0132 5F4A     		ldr	r2, .L50+8
 319 0134 9342     		cmp	r3, r2
 320 0136 77D0     		beq	.L46
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 321              		.loc 1 565 0
 322 0138 6149     		ldr	r1, .L50+24
 323              	.L21:
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 324              		.loc 1 565 0 discriminator 6
 325 013a 6368     		ldr	r3, [r4, #4]
 326              	.LVL29:
 327              	.LBB389:
 328              	.LBB390:
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 329              		.loc 2 2735 0 is_stmt 1 discriminator 6
 330 013c 8A68     		ldr	r2, [r1, #8]
 331 013e 22F47C12 		bic	r2, r2, #4128768
 332 0142 1343     		orrs	r3, r3, r2
 333              	.LVL30:
 334 0144 8B60     		str	r3, [r1, #8]
 335              	.LVL31:
 336              	.L12:
 337              	.LBE390:
 338              	.LBE389:
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 339              		.loc 1 578 0
 340 0146 627F     		ldrb	r2, [r4, #29]	@ zero_extendqisi2
ARM GAS  /tmp/cceGX4yx.s 			page 144


 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 341              		.loc 1 579 0
 342 0148 E36B     		ldr	r3, [r4, #60]
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 343              		.loc 1 578 0
 344 014a 43EA4233 		orr	r3, r3, r2, lsl #13
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 345              		.loc 1 580 0
 346 014e E268     		ldr	r2, [r4, #12]
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 347              		.loc 1 579 0
 348 0150 1343     		orrs	r3, r3, r2
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 349              		.loc 1 581 0
 350 0152 A268     		ldr	r2, [r4, #8]
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 351              		.loc 1 580 0
 352 0154 1343     		orrs	r3, r3, r2
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 353              		.loc 1 582 0
 354 0156 94F82420 		ldrb	r2, [r4, #36]	@ zero_extendqisi2
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 355              		.loc 1 578 0
 356 015a 43EA0243 		orr	r3, r3, r2, lsl #16
 357              	.LVL32:
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 358              		.loc 1 584 0
 359 015e 012A     		cmp	r2, #1
 360 0160 66D0     		beq	.L47
 361              	.L22:
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 362              		.loc 1 594 0
 363 0162 E26A     		ldr	r2, [r4, #44]
 364 0164 22B1     		cbz	r2, .L23
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 365              		.loc 1 596 0
 366 0166 02F47872 		and	r2, r2, #992
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  );
 367              		.loc 1 597 0
 368 016a 216B     		ldr	r1, [r4, #48]
 369 016c 0A43     		orrs	r2, r2, r1
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 370              		.loc 1 596 0
 371 016e 1343     		orrs	r3, r3, r2
 372              	.LVL33:
 373              	.L23:
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 374              		.loc 1 602 0
 375 0170 2168     		ldr	r1, [r4]
 376 0172 CD68     		ldr	r5, [r1, #12]
 377 0174 534A     		ldr	r2, .L50+28
 378 0176 2A40     		ands	r2, r2, r5
 379 0178 1343     		orrs	r3, r3, r2
 380              	.LVL34:
 381 017a CB60     		str	r3, [r1, #12]
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 382              		.loc 1 605 0
ARM GAS  /tmp/cceGX4yx.s 			page 145


 383 017c 2268     		ldr	r2, [r4]
 384 017e 1369     		ldr	r3, [r2, #16]
 385 0180 23F04063 		bic	r3, r3, #201326592
 386 0184 616B     		ldr	r1, [r4, #52]
 387 0186 0B43     		orrs	r3, r3, r1
 388 0188 1361     		str	r3, [r2, #16]
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 389              		.loc 1 614 0
 390 018a 2368     		ldr	r3, [r4]
 391              	.LVL35:
 392              	.LBB391:
 393              	.LBB392:
 394              		.loc 2 6846 0
 395 018c 9A68     		ldr	r2, [r3, #8]
 396 018e 12F0040F 		tst	r2, #4
 397 0192 52D0     		beq	.L42
 398 0194 0121     		movs	r1, #1
 399              	.L24:
 400              	.LVL36:
 401              	.LBE392:
 402              	.LBE391:
 403              	.LBB394:
 404              	.LBB395:
6847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC sampling phase for sampling time trigger mode
6862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is relevant only when
6863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
6864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
6865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
6866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StartSamplingPhase
6872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartSamplingPhase(ADC_TypeDef *ADCx)
6876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
6878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/cceGX4yx.s 			page 146


6881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC sampling phase for sampling time trigger mode and start conversion
6882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is relevant only when
6883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
6884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
6885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
6886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_StartSamplingPhase has been called to start
6887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the sampling phase
6888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StopSamplingPhase
6894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopSamplingPhase(ADC_TypeDef *ADCx)
6898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
6900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with feature oversampling).
6907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
ARM GAS  /tmp/cceGX4yx.s 			page 147


6938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
6981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
6985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
6986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
6987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         separately).
6988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
6989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
6990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
6993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
6994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
ARM GAS  /tmp/cceGX4yx.s 			page 148


6995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
6996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
6999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
7001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ConversionData)
7002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
7003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
7012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
7017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           starts immediately.
7021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           following the ADC start conversion command.
7024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
7027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
7028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
7029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
7030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
7034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_JADSTART);
7041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
7045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
7048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
7049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
7050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cceGX4yx.s 			page 149


7052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_JADSTP);
7061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
7070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 405              		.loc 2 7071 0
 406 0196 9A68     		ldr	r2, [r3, #8]
 407 0198 12F0080F 		tst	r2, #8
 408 019c 4FD0     		beq	.L43
 409 019e 0122     		movs	r2, #1
 410              	.L25:
 411              	.LVL37:
 412              	.LBE395:
 413              	.LBE394:
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 414              		.loc 1 616 0
 415 01a0 49BB     		cbnz	r1, .L26
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 416              		.loc 1 617 0
 417 01a2 42BB     		cbnz	r2, .L26
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 418              		.loc 1 621 0
 419 01a4 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 420              		.loc 1 622 0
 421 01a6 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 422 01aa 5200     		lsls	r2, r2, #1
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 423              		.loc 1 620 0
 424 01ac 42EA8131 		orr	r1, r2, r1, lsl #14
 425              	.LVL38:
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 426              		.loc 1 624 0
 427 01b0 DA68     		ldr	r2, [r3, #12]
 428 01b2 22F48042 		bic	r2, r2, #16384
 429 01b6 22F00202 		bic	r2, r2, #2
 430 01ba 0A43     		orrs	r2, r2, r1
 431 01bc DA60     		str	r2, [r3, #12]
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 432              		.loc 1 626 0
 433 01be 2369     		ldr	r3, [r4, #16]
 434 01c0 002B     		cmp	r3, #0
ARM GAS  /tmp/cceGX4yx.s 			page 150


 435 01c2 3ED0     		beq	.L27
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, hadc->Init.GainCompensation);
 436              		.loc 1 628 0
 437 01c4 2268     		ldr	r2, [r4]
 438 01c6 1369     		ldr	r3, [r2, #16]
 439 01c8 43F48033 		orr	r3, r3, #65536
 440 01cc 1361     		str	r3, [r2, #16]
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 441              		.loc 1 629 0
 442 01ce 2268     		ldr	r2, [r4]
 443 01d0 D2F8C030 		ldr	r3, [r2, #192]
 444 01d4 23F47F53 		bic	r3, r3, #16320
 445 01d8 23F03F03 		bic	r3, r3, #63
 446 01dc 2169     		ldr	r1, [r4, #16]
 447              	.LVL39:
 448 01de 0B43     		orrs	r3, r3, r1
 449 01e0 C2F8C030 		str	r3, [r2, #192]
 450              	.L28:
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 451              		.loc 1 637 0
 452 01e4 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 453 01e8 012B     		cmp	r3, #1
 454 01ea 39D0     		beq	.L48
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 455              		.loc 1 664 0
 456 01ec 2268     		ldr	r2, [r4]
 457 01ee 1369     		ldr	r3, [r2, #16]
 458 01f0 23F00103 		bic	r3, r3, #1
 459 01f4 1361     		str	r3, [r2, #16]
 460              	.L26:
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 461              		.loc 1 678 0
 462 01f6 6369     		ldr	r3, [r4, #20]
 463 01f8 012B     		cmp	r3, #1
 464 01fa 43D0     		beq	.L49
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 465              		.loc 1 685 0
 466 01fc 2268     		ldr	r2, [r4]
 467 01fe 136B     		ldr	r3, [r2, #48]
 468 0200 23F00F03 		bic	r3, r3, #15
 469 0204 1363     		str	r3, [r2, #48]
 470              	.L31:
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 471              		.loc 1 690 0
 472 0206 E36D     		ldr	r3, [r4, #92]
 473 0208 23F00303 		bic	r3, r3, #3
 474 020c 43F00103 		orr	r3, r3, #1
 475 0210 E365     		str	r3, [r4, #92]
 476 0212 45E0     		b	.L3
 477              	.LVL40:
 478              	.L35:
 479              	.LBB397:
 480              	.LBB385:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 481              		.loc 2 6724 0
 482 0214 0021     		movs	r1, #0
 483 0216 7EE7     		b	.L15
ARM GAS  /tmp/cceGX4yx.s 			page 151


 484              	.LVL41:
 485              	.L36:
 486              	.LBE385:
 487              	.LBE397:
 488              	.LBB398:
 489              	.LBB388:
 490 0218 0022     		movs	r2, #0
 491 021a 82E7     		b	.L16
 492              	.LVL42:
 493              	.L37:
 494              	.LBE388:
 495              	.LBE398:
 496              	.LBB399:
 497              	.LBB375:
 498 021c 0021     		movs	r1, #0
 499 021e 5BE7     		b	.L18
 500              	.LVL43:
 501              	.L38:
 502              	.LBE375:
 503              	.LBE399:
 504              	.LBB400:
 505              	.LBB378:
 506 0220 0022     		movs	r2, #0
 507 0222 60E7     		b	.L19
 508              	.LVL44:
 509              	.L39:
 510              	.LBE378:
 511              	.LBE400:
 512              	.LBB401:
 513              	.LBB381:
 514 0224 0021     		movs	r1, #0
 515 0226 66E7     		b	.L20
 516              	.LVL45:
 517              	.L46:
 518              	.LBE381:
 519              	.LBE401:
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 520              		.loc 1 565 0
 521 0228 2749     		ldr	r1, .L50+32
 522 022a 86E7     		b	.L21
 523              	.L40:
 524 022c 2649     		ldr	r1, .L50+32
 525 022e 84E7     		b	.L21
 526              	.LVL46:
 527              	.L47:
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 528              		.loc 1 586 0
 529 0230 A26A     		ldr	r2, [r4, #40]
 530 0232 013A     		subs	r2, r2, #1
 531 0234 43EA4243 		orr	r3, r3, r2, lsl #17
 532              	.LVL47:
 533 0238 93E7     		b	.L22
 534              	.LVL48:
 535              	.L42:
 536              	.LBB402:
 537              	.LBB393:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/cceGX4yx.s 			page 152


 538              		.loc 2 6846 0
 539 023a 0021     		movs	r1, #0
 540 023c ABE7     		b	.L24
 541              	.LVL49:
 542              	.L43:
 543              	.LBE393:
 544              	.LBE402:
 545              	.LBB403:
 546              	.LBB396:
 547              		.loc 2 7071 0
 548 023e 0022     		movs	r2, #0
 549 0240 AEE7     		b	.L25
 550              	.LVL50:
 551              	.L27:
 552              	.LBE396:
 553              	.LBE403:
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, 0UL);
 554              		.loc 1 633 0
 555 0242 2268     		ldr	r2, [r4]
 556 0244 1369     		ldr	r3, [r2, #16]
 557 0246 23F48033 		bic	r3, r3, #65536
 558 024a 1361     		str	r3, [r2, #16]
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 559              		.loc 1 634 0
 560 024c 2268     		ldr	r2, [r4]
 561 024e D2F8C030 		ldr	r3, [r2, #192]
 562 0252 23F47F53 		bic	r3, r3, #16320
 563 0256 23F03F03 		bic	r3, r3, #63
 564 025a C2F8C030 		str	r3, [r2, #192]
 565 025e C1E7     		b	.L28
 566              	.LVL51:
 567              	.L48:
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 568              		.loc 1 649 0
 569 0260 2168     		ldr	r1, [r4]
 570 0262 0B69     		ldr	r3, [r1, #16]
 571 0264 23F4FF63 		bic	r3, r3, #2040
 572 0268 23F00403 		bic	r3, r3, #4
 573 026c 626C     		ldr	r2, [r4, #68]
 574 026e A56C     		ldr	r5, [r4, #72]
 575 0270 2A43     		orrs	r2, r2, r5
 576 0272 E56C     		ldr	r5, [r4, #76]
 577 0274 2A43     		orrs	r2, r2, r5
 578 0276 256D     		ldr	r5, [r4, #80]
 579 0278 2A43     		orrs	r2, r2, r5
 580 027a 1343     		orrs	r3, r3, r2
 581 027c 43F00103 		orr	r3, r3, #1
 582 0280 0B61     		str	r3, [r1, #16]
 583 0282 B8E7     		b	.L26
 584              	.L49:
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 585              		.loc 1 681 0
 586 0284 2168     		ldr	r1, [r4]
 587 0286 0B6B     		ldr	r3, [r1, #48]
 588 0288 23F00F03 		bic	r3, r3, #15
 589 028c 226A     		ldr	r2, [r4, #32]
 590 028e 013A     		subs	r2, r2, #1
ARM GAS  /tmp/cceGX4yx.s 			page 153


 591 0290 1343     		orrs	r3, r3, r2
 592 0292 0B63     		str	r3, [r1, #48]
 593 0294 B7E7     		b	.L31
 594              	.L11:
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 595              		.loc 1 695 0
 596 0296 E36D     		ldr	r3, [r4, #92]
 597 0298 43F01003 		orr	r3, r3, #16
 598 029c E365     		str	r3, [r4, #92]
 599              	.LVL52:
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 600              		.loc 1 697 0
 601 029e 0120     		movs	r0, #1
 602              	.LVL53:
 603              	.L3:
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 604              		.loc 1 702 0
 605 02a0 03B0     		add	sp, sp, #12
 606              	.LCFI2:
 607              		.cfi_remember_state
 608              		.cfi_def_cfa_offset 12
 609              		@ sp needed
 610 02a2 30BD     		pop	{r4, r5, pc}
 611              	.LVL54:
 612              	.L32:
 613              	.LCFI3:
 614              		.cfi_restore_state
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 615              		.loc 1 415 0
 616 02a4 0120     		movs	r0, #1
 617              	.LVL55:
 618 02a6 FBE7     		b	.L3
 619              	.L51:
 620              		.align	2
 621              	.L50:
 622 02a8 00000000 		.word	SystemCoreClock
 623 02ac 632D3E05 		.word	87960931
 624 02b0 00010050 		.word	1342177536
 625 02b4 00040050 		.word	1342178304
 626 02b8 00050050 		.word	1342178560
 627 02bc 00060050 		.word	1342178816
 628 02c0 00070050 		.word	1342179072
 629 02c4 0740F0FF 		.word	-1032185
 630 02c8 00030050 		.word	1342178048
 631              		.cfi_endproc
 632              	.LFE329:
 634              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 635              		.align	1
 636              		.weak	HAL_ADC_MspDeInit
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu fpv4-sp-d16
 642              	HAL_ADC_MspDeInit:
 643              	.LFB332:
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
ARM GAS  /tmp/cceGX4yx.s 			page 154


 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 644              		.loc 1 939 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649              	.LVL56:
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****    */
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 650              		.loc 1 946 0
 651 0000 7047     		bx	lr
 652              		.cfi_endproc
 653              	.LFE332:
 655              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 656              		.align	1
 657              		.global	HAL_ADC_PollForConversion
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 661              		.fpu fpv4-sp-d16
 663              	HAL_ADC_PollForConversion:
 664              	.LFB335:
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
ARM GAS  /tmp/cceGX4yx.s 			page 155


 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (pCallback == NULL)
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update the error code */
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     return HAL_ERROR;
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
ARM GAS  /tmp/cceGX4yx.s 			page 156


1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status = HAL_ERROR;
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status = HAL_ERROR;
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update the error code */
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Return error status */
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     status =  HAL_ERROR;
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return status;
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This parameter can be one of the following values:
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
ARM GAS  /tmp/cceGX4yx.s 			page 157


1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/cceGX4yx.s 			page 158


1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status =  HAL_ERROR;
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status =  HAL_ERROR;
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update the error code */
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Return error status */
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     status =  HAL_ERROR;
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return status;
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
ARM GAS  /tmp/cceGX4yx.s 			page 159


1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief    ADC IO operation functions
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       ##### IO operation functions #####
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Start conversion of regular group.
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Stop conversion of regular group.
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Poll for conversion event.
1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Handle ADC interrupt request
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Process locked */
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state                                                        */
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
ARM GAS  /tmp/cceGX4yx.s 			page 160


1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code */
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* trigger event.                                                       */
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
ARM GAS  /tmp/cceGX4yx.s 			page 161


1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
ARM GAS  /tmp/cceGX4yx.s 			page 162


1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 665              		.loc 1 1418 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              	.LVL57:
 670 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 671              	.LCFI4:
ARM GAS  /tmp/cceGX4yx.s 			page 163


 672              		.cfi_def_cfa_offset 24
 673              		.cfi_offset 4, -24
 674              		.cfi_offset 5, -20
 675              		.cfi_offset 6, -16
 676              		.cfi_offset 7, -12
 677              		.cfi_offset 8, -8
 678              		.cfi_offset 14, -4
1419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
1420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_Flag_End;
1421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_cfgr;
1422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 679              		.loc 1 1424 0
 680 0004 0368     		ldr	r3, [r0]
 681 0006 B3F1A04F 		cmp	r3, #1342177280
 682 000a 1ED0     		beq	.L70
 683              		.loc 1 1424 0 is_stmt 0 discriminator 2
 684 000c 4D4A     		ldr	r2, .L88
 685 000e 9342     		cmp	r3, r2
 686 0010 18D0     		beq	.L81
 687              		.loc 1 1424 0
 688 0012 4D4A     		ldr	r2, .L88+4
 689              	.L54:
 690              	.LVL58:
 691              	.LBB404:
 692              	.LBB405:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 693              		.loc 2 6387 0 is_stmt 1 discriminator 6
 694 0014 9768     		ldr	r7, [r2, #8]
 695 0016 07F01F07 		and	r7, r7, #31
 696              	.LVL59:
 697              	.LBE405:
 698              	.LBE404:
1425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 699              		.loc 1 1431 0 discriminator 6
 700 001a 8269     		ldr	r2, [r0, #24]
 701 001c 082A     		cmp	r2, #8
 702 001e 4DD0     		beq	.L72
1432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* each conversion:                                                       */
1440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
ARM GAS  /tmp/cceGX4yx.s 			page 164


1444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 703              		.loc 1 1445 0
 704 0020 AFB1     		cbz	r7, .L56
1446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 705              		.loc 1 1446 0
 706 0022 052F     		cmp	r7, #5
 707 0024 13D0     		beq	.L56
1447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 708              		.loc 1 1447 0
 709 0026 092F     		cmp	r7, #9
 710 0028 11D0     		beq	.L56
1448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check ADC DMA mode in independent mode on ADC group regular */
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
1455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
1464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
 711              		.loc 1 1464 0
 712 002a B3F1A04F 		cmp	r3, #1342177280
 713 002e 3DD0     		beq	.L74
 714              		.loc 1 1464 0 is_stmt 0 discriminator 2
 715 0030 444A     		ldr	r2, .L88
 716 0032 9342     		cmp	r3, r2
 717 0034 38D0     		beq	.L82
 718              		.loc 1 1464 0
 719 0036 444B     		ldr	r3, .L88+4
 720              	.L59:
 721              	.LVL60:
 722              	.LBB406:
 723              	.LBB407:
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 724              		.loc 2 6484 0 is_stmt 1 discriminator 6
 725 0038 9B68     		ldr	r3, [r3, #8]
 726              	.LVL61:
 727              	.LBE407:
 728              	.LBE406:
 729              		.loc 1 1464 0 discriminator 6
 730 003a 13F4604F 		tst	r3, #57344
 731 003e 37D1     		bne	.L83
1465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
1468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
ARM GAS  /tmp/cceGX4yx.s 			page 165


1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 732              		.loc 1 1471 0
 733 0040 0426     		movs	r6, #4
 734 0042 09E0     		b	.L55
 735              	.L81:
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 736              		.loc 1 1424 0
 737 0044 02F50072 		add	r2, r2, #512
 738 0048 E4E7     		b	.L54
 739              	.L70:
 740 004a 404A     		ldr	r2, .L88+8
 741 004c E2E7     		b	.L54
 742              	.L56:
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 743              		.loc 1 1451 0
 744 004e DB68     		ldr	r3, [r3, #12]
 745 0050 13F0010F 		tst	r3, #1
 746 0054 21D1     		bne	.L84
1458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 747              		.loc 1 1458 0
 748 0056 0426     		movs	r6, #4
 749              	.L55:
 750 0058 0D46     		mov	r5, r1
 751 005a 0446     		mov	r4, r0
 752              	.LVL62:
1472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check ADC DMA mode */
1476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       return HAL_ERROR;
1480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
1484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Get tick count */
1489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 753              		.loc 1 1489 0
 754 005c FFF7FEFF 		bl	HAL_GetTick
 755              	.LVL63:
 756 0060 8046     		mov	r8, r0
 757              	.LVL64:
 758              	.L61:
1490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 759              		.loc 1 1492 0
 760 0062 2368     		ldr	r3, [r4]
 761 0064 1A68     		ldr	r2, [r3]
 762 0066 3242     		tst	r2, r6
 763 0068 2AD1     		bne	.L85
ARM GAS  /tmp/cceGX4yx.s 			page 166


1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 764              		.loc 1 1495 0
 765 006a B5F1FF3F 		cmp	r5, #-1
 766 006e F8D0     		beq	.L61
1496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 767              		.loc 1 1497 0
 768 0070 FFF7FEFF 		bl	HAL_GetTick
 769              	.LVL65:
 770 0074 A0EB0800 		sub	r0, r0, r8
 771 0078 A842     		cmp	r0, r5
 772 007a 01D8     		bhi	.L62
 773              		.loc 1 1497 0 is_stmt 0 discriminator 1
 774 007c 002D     		cmp	r5, #0
 775 007e F0D1     		bne	.L61
 776              	.L62:
1498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 777              		.loc 1 1500 0 is_stmt 1
 778 0080 2368     		ldr	r3, [r4]
 779 0082 1B68     		ldr	r3, [r3]
 780 0084 3342     		tst	r3, r6
 781 0086 ECD1     		bne	.L61
1501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 782              		.loc 1 1503 0
 783 0088 E36D     		ldr	r3, [r4, #92]
 784 008a 43F00403 		orr	r3, r3, #4
 785 008e E365     		str	r3, [r4, #92]
1504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Process unlocked */
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 786              		.loc 1 1506 0
 787 0090 0023     		movs	r3, #0
 788 0092 84F85830 		strb	r3, [r4, #88]
1507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_TIMEOUT;
 789              		.loc 1 1508 0
 790 0096 0320     		movs	r0, #3
 791 0098 04E0     		b	.L58
 792              	.LVL66:
 793              	.L84:
1453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
 794              		.loc 1 1453 0
 795 009a C36D     		ldr	r3, [r0, #92]
 796 009c 43F02003 		orr	r3, r3, #32
 797 00a0 C365     		str	r3, [r0, #92]
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 798              		.loc 1 1454 0
 799 00a2 0120     		movs	r0, #1
 800              	.LVL67:
 801              	.L58:
1509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
ARM GAS  /tmp/cceGX4yx.s 			page 167


1510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Update ADC state machine */
1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
1521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
1530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* available).                                                              */
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
1545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
1554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve handle ADC CFGR register */
1557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Clear polled flag */
1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
1562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
ARM GAS  /tmp/cceGX4yx.s 			page 168


1567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
1578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 802              		.loc 1 1578 0
 803 00a4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 804              	.LVL68:
 805              	.L82:
1464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 806              		.loc 1 1464 0
 807 00a8 284B     		ldr	r3, .L88+8
 808 00aa C5E7     		b	.L59
 809              	.L74:
 810 00ac 274B     		ldr	r3, .L88+8
 811 00ae C3E7     		b	.L59
 812              	.L83:
1466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
 813              		.loc 1 1466 0
 814 00b0 C36D     		ldr	r3, [r0, #92]
 815 00b2 43F02003 		orr	r3, r3, #32
 816 00b6 C365     		str	r3, [r0, #92]
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 817              		.loc 1 1467 0
 818 00b8 0120     		movs	r0, #1
 819              	.LVL69:
 820 00ba F3E7     		b	.L58
 821              	.LVL70:
 822              	.L72:
1433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 823              		.loc 1 1433 0
 824 00bc 0826     		movs	r6, #8
 825 00be CBE7     		b	.L55
 826              	.LVL71:
 827              	.L85:
1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 828              		.loc 1 1515 0
 829 00c0 E26D     		ldr	r2, [r4, #92]
 830 00c2 42F40072 		orr	r2, r2, #512
 831 00c6 E265     		str	r2, [r4, #92]
 832              	.LVL72:
 833              	.LBB408:
 834              	.LBB409:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 835              		.loc 2 3750 0
 836 00c8 DA68     		ldr	r2, [r3, #12]
 837 00ca 12F4406F 		tst	r2, #3072
 838 00ce 11D1     		bne	.L64
 839              	.LVL73:
 840              	.LBE409:
ARM GAS  /tmp/cceGX4yx.s 			page 169


 841              	.LBE408:
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 842              		.loc 1 1520 0
 843 00d0 627F     		ldrb	r2, [r4, #29]	@ zero_extendqisi2
 844 00d2 7AB9     		cbnz	r2, .L64
1524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 845              		.loc 1 1524 0
 846 00d4 1A68     		ldr	r2, [r3]
 847 00d6 12F0080F 		tst	r2, #8
 848 00da 0BD0     		beq	.L64
1527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 849              		.loc 1 1527 0
 850 00dc E26D     		ldr	r2, [r4, #92]
 851 00de 22F48072 		bic	r2, r2, #256
 852 00e2 E265     		str	r2, [r4, #92]
1529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 853              		.loc 1 1529 0
 854 00e4 E26D     		ldr	r2, [r4, #92]
 855 00e6 12F4805F 		tst	r2, #4096
 856 00ea 03D1     		bne	.L64
1531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 857              		.loc 1 1531 0
 858 00ec E26D     		ldr	r2, [r4, #92]
 859 00ee 42F00102 		orr	r2, r2, #1
 860 00f2 E265     		str	r2, [r4, #92]
 861              	.L64:
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 862              		.loc 1 1540 0
 863 00f4 134A     		ldr	r2, .L88
 864 00f6 9342     		cmp	r3, r2
 865 00f8 10D0     		beq	.L77
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 866              		.loc 1 1540 0 is_stmt 0 discriminator 1
 867 00fa 02F58062 		add	r2, r2, #1024
 868 00fe 9342     		cmp	r3, r2
 869 0100 09D0     		beq	.L86
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 870              		.loc 1 1540 0
 871 0102 1A46     		mov	r2, r3
 872              	.L65:
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 873              		.loc 1 1540 0 discriminator 8
 874 0104 9342     		cmp	r3, r2
 875 0106 0CD0     		beq	.L66
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 876              		.loc 1 1541 0 is_stmt 1
 877 0108 5FB1     		cbz	r7, .L66
1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 878              		.loc 1 1542 0
 879 010a 052F     		cmp	r7, #5
 880 010c 09D0     		beq	.L66
1543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 881              		.loc 1 1543 0
 882 010e 092F     		cmp	r7, #9
 883 0110 07D0     		beq	.L66
 884              	.LVL74:
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
ARM GAS  /tmp/cceGX4yx.s 			page 170


 885              		.loc 1 1553 0 discriminator 8
 886 0112 D268     		ldr	r2, [r2, #12]
 887              	.LVL75:
 888 0114 06E0     		b	.L68
 889              	.LVL76:
 890              	.L86:
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 891              		.loc 1 1540 0
 892 0116 A2F58072 		sub	r2, r2, #256
 893 011a F3E7     		b	.L65
 894              	.L77:
 895 011c 4FF0A042 		mov	r2, #1342177280
 896 0120 F0E7     		b	.L65
 897              	.L66:
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 898              		.loc 1 1547 0
 899 0122 DA68     		ldr	r2, [r3, #12]
 900              	.LVL77:
 901              	.L68:
1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 902              		.loc 1 1561 0
 903 0124 082E     		cmp	r6, #8
 904 0126 06D0     		beq	.L87
1570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 905              		.loc 1 1570 0
 906 0128 12F4804F 		tst	r2, #16384
 907 012c 07D1     		bne	.L79
1572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 908              		.loc 1 1572 0
 909 012e 0C22     		movs	r2, #12
 910              	.LVL78:
 911 0130 1A60     		str	r2, [r3]
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 912              		.loc 1 1577 0
 913 0132 0020     		movs	r0, #0
 914 0134 B6E7     		b	.L58
 915              	.LVL79:
 916              	.L87:
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 917              		.loc 1 1563 0
 918 0136 0822     		movs	r2, #8
 919              	.LVL80:
 920 0138 1A60     		str	r2, [r3]
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 921              		.loc 1 1577 0
 922 013a 0020     		movs	r0, #0
 923 013c B2E7     		b	.L58
 924              	.LVL81:
 925              	.L79:
 926 013e 0020     		movs	r0, #0
 927 0140 B0E7     		b	.L58
 928              	.L89:
 929 0142 00BF     		.align	2
 930              	.L88:
 931 0144 00010050 		.word	1342177536
 932 0148 00070050 		.word	1342179072
 933 014c 00030050 		.word	1342178048
ARM GAS  /tmp/cceGX4yx.s 			page 171


 934              		.cfi_endproc
 935              	.LFE335:
 937              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 938              		.align	1
 939              		.global	HAL_ADC_PollForEvent
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 943              		.fpu fpv4-sp-d16
 945              	HAL_ADC_PollForEvent:
 946              	.LFB336:
1579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Poll for ADC event.
1582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param EventType the ADC event type.
1584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          This parameter can be one of the following values:
1585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 947              		.loc 1 1601 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951              	.LVL82:
 952 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 953              	.LCFI5:
 954              		.cfi_def_cfa_offset 24
 955              		.cfi_offset 3, -24
 956              		.cfi_offset 4, -20
 957              		.cfi_offset 5, -16
 958              		.cfi_offset 6, -12
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 0546     		mov	r5, r0
 962 0004 0C46     		mov	r4, r1
 963 0006 1646     		mov	r6, r2
1602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
1603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/cceGX4yx.s 			page 172


1608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Get tick count */
1609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 964              		.loc 1 1609 0
 965 0008 FFF7FEFF 		bl	HAL_GetTick
 966              	.LVL83:
 967 000c 0746     		mov	r7, r0
 968              	.LVL84:
 969              	.L92:
1610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check selected event flag */
1612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 970              		.loc 1 1612 0
 971 000e 2B68     		ldr	r3, [r5]
 972 0010 1A68     		ldr	r2, [r3]
 973 0012 34EA0202 		bics	r2, r4, r2
 974 0016 17D0     		beq	.L105
1613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 975              		.loc 1 1615 0
 976 0018 B6F1FF3F 		cmp	r6, #-1
 977 001c F7D0     		beq	.L92
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 978              		.loc 1 1617 0
 979 001e FFF7FEFF 		bl	HAL_GetTick
 980              	.LVL85:
 981 0022 C01B     		subs	r0, r0, r7
 982 0024 B042     		cmp	r0, r6
 983 0026 01D8     		bhi	.L93
 984              		.loc 1 1617 0 is_stmt 0 discriminator 1
 985 0028 002E     		cmp	r6, #0
 986 002a F0D1     		bne	.L92
 987              	.L93:
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 988              		.loc 1 1620 0 is_stmt 1
 989 002c 2B68     		ldr	r3, [r5]
 990 002e 1B68     		ldr	r3, [r3]
 991 0030 34EA0303 		bics	r3, r4, r3
 992 0034 EBD0     		beq	.L92
1621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 993              		.loc 1 1623 0
 994 0036 EB6D     		ldr	r3, [r5, #92]
 995 0038 43F00403 		orr	r3, r3, #4
 996 003c EB65     		str	r3, [r5, #92]
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Process unlocked */
1626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 997              		.loc 1 1626 0
 998 003e 0023     		movs	r3, #0
 999 0040 85F85830 		strb	r3, [r5, #88]
1627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/cceGX4yx.s 			page 173


 1000              		.loc 1 1628 0
 1001 0044 0320     		movs	r0, #3
 1002 0046 29E0     		b	.L94
 1003              	.L105:
1629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   switch (EventType)
 1004              		.loc 1 1634 0
 1005 0048 B4F5807F 		cmp	r4, #256
 1006 004c 27D0     		beq	.L97
 1007 004e 0BD8     		bhi	.L98
 1008 0050 022C     		cmp	r4, #2
 1009 0052 1CD0     		beq	.L99
 1010 0054 802C     		cmp	r4, #128
 1011 0056 34D1     		bne	.L96
1635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* End Of Sampling event */
1637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* For example:                                                             */
1651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_AWD_EVENT:
1657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1012              		.loc 1 1658 0
 1013 0058 EA6D     		ldr	r2, [r5, #92]
 1014 005a 42F48032 		orr	r2, r2, #65536
 1015 005e EA65     		str	r2, [r5, #92]
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 1016              		.loc 1 1661 0
 1017 0060 8022     		movs	r2, #128
 1018 0062 1A60     		str	r2, [r3]
1662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_AWD2_EVENT:
ARM GAS  /tmp/cceGX4yx.s 			page 174


1667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Injected context queue overflow event */
1686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Overrun event */
1699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* considered as an error.                                                */
1702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* overrun ")                                                             */
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC state */
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC error code to overrun */
1710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            as OVR is cleared. */
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
ARM GAS  /tmp/cceGX4yx.s 			page 175


 1019              		.loc 1 1723 0
 1020 0064 0020     		movs	r0, #0
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1021              		.loc 1 1663 0
 1022 0066 19E0     		b	.L94
 1023              	.L98:
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1024              		.loc 1 1634 0
 1025 0068 B4F5007F 		cmp	r4, #512
 1026 006c 20D0     		beq	.L101
 1027 006e B4F5806F 		cmp	r4, #1024
 1028 0072 26D1     		bne	.L96
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1029              		.loc 1 1688 0
 1030 0074 EA6D     		ldr	r2, [r5, #92]
 1031 0076 42F48042 		orr	r2, r2, #16384
 1032 007a EA65     		str	r2, [r5, #92]
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1033              		.loc 1 1691 0
 1034 007c 2A6E     		ldr	r2, [r5, #96]
 1035 007e 42F00802 		orr	r2, r2, #8
 1036 0082 2A66     		str	r2, [r5, #96]
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1037              		.loc 1 1694 0
 1038 0084 4FF48062 		mov	r2, #1024
 1039 0088 1A60     		str	r2, [r3]
 1040              		.loc 1 1723 0
 1041 008a 0020     		movs	r0, #0
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1042              		.loc 1 1696 0
 1043 008c 06E0     		b	.L94
 1044              	.L99:
1639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1045              		.loc 1 1639 0
 1046 008e EA6D     		ldr	r2, [r5, #92]
 1047 0090 42F40062 		orr	r2, r2, #2048
 1048 0094 EA65     		str	r2, [r5, #92]
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1049              		.loc 1 1642 0
 1050 0096 0222     		movs	r2, #2
 1051 0098 1A60     		str	r2, [r3]
 1052              		.loc 1 1723 0
 1053 009a 0020     		movs	r0, #0
 1054              	.L94:
1724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1055              		.loc 1 1724 0
 1056 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1057              	.LVL86:
 1058              	.L97:
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1059              		.loc 1 1668 0
 1060 009e EA6D     		ldr	r2, [r5, #92]
 1061 00a0 42F40032 		orr	r2, r2, #131072
 1062 00a4 EA65     		str	r2, [r5, #92]
1671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1063              		.loc 1 1671 0
 1064 00a6 4FF48072 		mov	r2, #256
ARM GAS  /tmp/cceGX4yx.s 			page 176


 1065 00aa 1A60     		str	r2, [r3]
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1066              		.loc 1 1723 0
 1067 00ac 0020     		movs	r0, #0
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1068              		.loc 1 1673 0
 1069 00ae F5E7     		b	.L94
 1070              	.L101:
1678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1071              		.loc 1 1678 0
 1072 00b0 EA6D     		ldr	r2, [r5, #92]
 1073 00b2 42F48022 		orr	r2, r2, #262144
 1074 00b6 EA65     		str	r2, [r5, #92]
1681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1075              		.loc 1 1681 0
 1076 00b8 4FF40072 		mov	r2, #512
 1077 00bc 1A60     		str	r2, [r3]
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1078              		.loc 1 1723 0
 1079 00be 0020     		movs	r0, #0
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1080              		.loc 1 1683 0
 1081 00c0 ECE7     		b	.L94
 1082              	.L96:
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1083              		.loc 1 1704 0
 1084 00c2 EA6B     		ldr	r2, [r5, #60]
 1085 00c4 1AB1     		cbz	r2, .L106
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1086              		.loc 1 1717 0
 1087 00c6 1022     		movs	r2, #16
 1088 00c8 1A60     		str	r2, [r3]
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1089              		.loc 1 1723 0
 1090 00ca 0020     		movs	r0, #0
 1091 00cc E6E7     		b	.L94
 1092              	.L106:
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1093              		.loc 1 1707 0
 1094 00ce EB6D     		ldr	r3, [r5, #92]
 1095 00d0 43F48063 		orr	r3, r3, #1024
 1096 00d4 EB65     		str	r3, [r5, #92]
1710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1097              		.loc 1 1710 0
 1098 00d6 2B6E     		ldr	r3, [r5, #96]
 1099 00d8 43F00203 		orr	r3, r3, #2
 1100 00dc 2B66     		str	r3, [r5, #96]
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1101              		.loc 1 1723 0
 1102 00de 0020     		movs	r0, #0
 1103 00e0 DCE7     		b	.L94
 1104              		.cfi_endproc
 1105              	.LFE336:
 1107              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1108              		.align	1
 1109              		.global	HAL_ADC_GetValue
 1110              		.syntax unified
ARM GAS  /tmp/cceGX4yx.s 			page 177


 1111              		.thumb
 1112              		.thumb_func
 1113              		.fpu fpv4-sp-d16
 1115              	HAL_ADC_GetValue:
 1116              	.LFB341:
1725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         OVR overrun.
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC Master.
1735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         mode), the user must:
1743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Process locked */
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state                                                        */
1773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
ARM GAS  /tmp/cceGX4yx.s 			page 178


1777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code */
1792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
1822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         default:
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
1826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
ARM GAS  /tmp/cceGX4yx.s 			page 179


1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* trigger event.                                                       */
1841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
1863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             default:
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
1888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
ARM GAS  /tmp/cceGX4yx.s 			page 180


1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
1893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             default:
1899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
1903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* ADC instance is not a multimode slave instance with multimode regular conversions enabled 
1907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Enable as well injected interruptions in case
1912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          allows to start regular and injected conversions when JAUTO is
1914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          set with a single call to HAL_ADC_Start_IT() */
1915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         switch (hadc->Init.EOCSelection)
1916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           case ADC_EOC_SEQ_CONV:
1918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             break;
1921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* case ADC_EOC_SINGLE_CONV */
1922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           default:
1923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             break;
1926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
ARM GAS  /tmp/cceGX4yx.s 			page 181


1948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
1955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
2000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
2001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
2002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
2003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
2004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
ARM GAS  /tmp/cceGX4yx.s 			page 182


2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param pData Destination Buffer address.
2006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
2007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Process locked */
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_LOCK(hadc);
2024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable the ADC peripheral */
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
2036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC state                                                        */
2041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            )
2054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
2061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
ARM GAS  /tmp/cceGX4yx.s 			page 183


2062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         else
2066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Reset all ADC error code fields */
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set the DMA error callback */
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* operations)                                                        */
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Process unlocked */
2090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Enable ADC DMA mode */
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start the DMA channel */
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
2104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* trigger event.                                                       */
2109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start ADC group regular conversion */
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Process unlocked */
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
ARM GAS  /tmp/cceGX4yx.s 			page 184


2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
2123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
2129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC peripheral.
2141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
ARM GAS  /tmp/cceGX4yx.s 			page 185


2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update ADC state machine to error */
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (void)ADC_Disable(hadc);
2196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            to flag EOC.
2225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         To clear this flag, either use function:
2229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
ARM GAS  /tmp/cceGX4yx.s 			page 186


2233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval ADC group regular conversion data
2234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
2236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1117              		.loc 1 2236 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121              		@ link register save eliminated.
 1122              	.LVL87:
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return ADC converted value */
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return hadc->Instance->DR;
 1123              		.loc 1 2244 0
 1124 0000 0368     		ldr	r3, [r0]
 1125 0002 186C     		ldr	r0, [r3, #64]
 1126              	.LVL88:
2245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1127              		.loc 1 2245 0
 1128 0004 7047     		bx	lr
 1129              		.cfi_endproc
 1130              	.LFE341:
 1132              		.section	.text.HAL_ADC_StartSampling,"ax",%progbits
 1133              		.align	1
 1134              		.global	HAL_ADC_StartSampling
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu fpv4-sp-d16
 1140              	HAL_ADC_StartSampling:
 1141              	.LFB342:
2246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Start ADC conversion sampling phase of regular group
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  This function should only be called to start sampling when
2250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SAMPLING_MODE_TRIGGER_CONTROLED sampling
2251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         mode has been selected
2252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SOFTWARE_START has been selected as trigger source
2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_StartSampling(ADC_HandleTypeDef *hadc)
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1142              		.loc 1 2257 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              		@ link register save eliminated.
 1147              	.LVL89:
2258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/cceGX4yx.s 			page 187


2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Start sampling */
2262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR2, ADC_CFGR2_SWTRIG);
 1148              		.loc 1 2262 0
 1149 0000 0268     		ldr	r2, [r0]
 1150 0002 1369     		ldr	r3, [r2, #16]
 1151 0004 43F00073 		orr	r3, r3, #33554432
 1152 0008 1361     		str	r3, [r2, #16]
2263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1153              		.loc 1 2266 0
 1154 000a 0020     		movs	r0, #0
 1155              	.LVL90:
 1156 000c 7047     		bx	lr
 1157              		.cfi_endproc
 1158              	.LFE342:
 1160              		.section	.text.HAL_ADC_StopSampling,"ax",%progbits
 1161              		.align	1
 1162              		.global	HAL_ADC_StopSampling
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1166              		.fpu fpv4-sp-d16
 1168              	HAL_ADC_StopSampling:
 1169              	.LFB343:
2267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion sampling phase of regular group and start conversion
2270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  This function should only be called to stop sampling when
2271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SAMPLING_MODE_TRIGGER_CONTROLED sampling
2272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         mode has been selected
2273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SOFTWARE_START has been selected as trigger source
2274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - after sampling has been started using @ref HAL_ADC_StartSampling.
2275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_StopSampling(ADC_HandleTypeDef *hadc)
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1170              		.loc 1 2279 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 1175              	.LVL91:
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Start sampling */
2284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_SWTRIG);
 1176              		.loc 1 2284 0
 1177 0000 0268     		ldr	r2, [r0]
 1178 0002 1369     		ldr	r3, [r2, #16]
 1179 0004 23F00073 		bic	r3, r3, #33554432
 1180 0008 1361     		str	r3, [r2, #16]
2285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
ARM GAS  /tmp/cceGX4yx.s 			page 188


2287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
2288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1181              		.loc 1 2288 0
 1182 000a 0020     		movs	r0, #0
 1183              	.LVL92:
 1184 000c 7047     		bx	lr
 1185              		.cfi_endproc
 1186              	.LFE343:
 1188              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1189              		.align	1
 1190              		.weak	HAL_ADC_ConvCpltCallback
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu fpv4-sp-d16
 1196              	HAL_ADC_ConvCpltCallback:
 1197              	.LFB345:
2289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_cfgr;
2303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* End Of Sampling callback */
2323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/cceGX4yx.s 			page 189


2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* to disable interruption.                                               */
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* available).                                                          */
2352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
2358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
ARM GAS  /tmp/cceGX4yx.s 			page 190


2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Set ADC state */
2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
2395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           else
2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Change ADC state to error state */
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Conversion complete callback */
2409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       possibility to use:                                              */
2412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
2413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
2425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Retrieve ADC configuration */
2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
ARM GAS  /tmp/cceGX4yx.s 			page 191


2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* available).                                                        */
2444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
2448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
2449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_adc_inj_is_trigger_source_sw_start != 0UL)
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL) ||
2470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
2471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
2472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Particular case if injected contexts queue is enabled:             */
2477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* when the last context has been fully processed, JSQR is reset      */
2478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* by the hardware. Even if no injected conversion is planned to come */
2479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* (queue empty, triggers are ignored), it can start again            */
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* immediately after setting a new context (JADSTART is still set).   */
2481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Therefore, state of HAL ADC injected group is kept to busy.        */
2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* JADSTART==0 (no conversion on going)                             */
2486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               /* Disable ADC end of sequence conversion interrupt  */
2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               /* Set ADC state */
2492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               {
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               }
2498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
2499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             else
ARM GAS  /tmp/cceGX4yx.s 			page 192


2500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
2501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               /* Update ADC state machine to error */
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               /* Set ADC error code to ADC peripheral internal error */
2505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
2507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Injected Conversion complete callback */
2513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               sequence.    */
2518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear injected group conversion flag */
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Level out of window 1 callback */
2535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
2549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Level out of window 2 callback */
2552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  /tmp/cceGX4yx.s 			page 193


2557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
2566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Level out of window 3 callback */
2569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* overrun ")                                                             */
2586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* error.                                                                 */
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       overrun_error = 1UL;
2591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check DMA configuration */
2595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
2597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
2601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           overrun_error = 1UL;
2603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMAEN) != 0UL)
2610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           overrun_error = 1UL;
2612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
ARM GAS  /tmp/cceGX4yx.s 			page 194


2614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (overrun_error == 1UL)
2617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Change ADC state to error state */
2619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to overrun */
2622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Error callback */
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC overrun flag */
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Change ADC state to overrun state */
2644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Injected context queue overflow callback */
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1198              		.loc 1 2668 0
 1199              		.cfi_startproc
ARM GAS  /tmp/cceGX4yx.s 			page 195


 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 1203              	.LVL93:
2669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
2671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****    */
2675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1204              		.loc 1 2675 0
 1205 0000 7047     		bx	lr
 1206              		.cfi_endproc
 1207              	.LFE345:
 1209              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1210              		.align	1
 1211              		.weak	HAL_ADC_ConvHalfCpltCallback
 1212              		.syntax unified
 1213              		.thumb
 1214              		.thumb_func
 1215              		.fpu fpv4-sp-d16
 1217              	HAL_ADC_ConvHalfCpltCallback:
 1218              	.LFB346:
2676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1219              		.loc 1 2683 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 1223              		@ link register save eliminated.
 1224              	.LVL94:
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
2686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1225              		.loc 1 2690 0
 1226 0000 7047     		bx	lr
 1227              		.cfi_endproc
 1228              	.LFE346:
 1230              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1231              		.align	1
 1232              		.global	ADC_DMAHalfConvCplt
 1233              		.syntax unified
 1234              		.thumb
 1235              		.thumb_func
 1236              		.fpu fpv4-sp-d16
 1238              	ADC_DMAHalfConvCplt:
ARM GAS  /tmp/cceGX4yx.s 			page 196


 1239              	.LFB357:
2691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
2701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
2723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief    Peripheral Control functions
2735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              ##### Peripheral Control functions #####
2739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
2740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Configure channels on regular group
2742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Configure the analog watchdog
2743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
2745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
2746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
ARM GAS  /tmp/cceGX4yx.s 			page 197


2747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         These internal paths can be disabled using function
2753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         without resetting the ADC.
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ignored (considered as reset) */
2784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification of channel number */
2787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
2792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
2794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*  - Channel number                                                        */
2803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*  - Channel rank                                                          */
ARM GAS  /tmp/cceGX4yx.s 			page 198


2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Channel offset                                                        */
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
2818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
2819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (sConfig->SamplingTime == ADC_SAMPLETIME_3CYCLES_5)
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, LL_ADC_SAMPLINGTIME_2CYCLES
2825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5)
2828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
2836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
2845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC selected offset number */
2847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
2848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_OFFSET_SIGN(sConfig->OffsetSign));
2850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
2851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC selected offset sign & saturation */
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffsetSign(hadc->Instance, sConfig->OffsetNumber, sConfig->OffsetSign);
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturatio
2854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
ARM GAS  /tmp/cceGX4yx.s 			page 199


2861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configuration of differential mode */
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
2898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* If internal channel selected, enable dedicated internal buffers and    */
2904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* paths.                                                                 */
2905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: these internal measurement paths can be disabled using           */
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* HAL_ADC_DeInit().                                                      */
2907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->I
2911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled, */
2913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* bypass the configuration processing.                                 */
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR_ADC1) || (sConfig->Channel == ADC_CHANNEL_TE
2915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
ARM GAS  /tmp/cceGX4yx.s 			page 200


2918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Wait loop initialization and execution */
2924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
2929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             wait_loop_index--;
2931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PAT
2935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VREFINT)
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (ADC_VREFINT_INSTANCE(hadc))
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* nothing to do */
2954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* parameters.                                                              */
2961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
2962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update ADC state machine to error */
2964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
2974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
ARM GAS  /tmp/cceGX4yx.s 			page 201


2975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the ADC.
2983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds can be modified
2987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         while ADC conversion is on going.
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
2996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *Analog
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
3002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
3009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
3010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_FILTERING_MODE(AnalogWDGConfig->FilteringConfig));
3011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
3012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
3014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
3015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
3016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, AnalogWDGConfig->Channel));
3018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verify thresholds range */
3021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
3022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
3024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
3025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
3027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
3028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
3030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
ARM GAS  /tmp/cceGX4yx.s 			page 202


3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
3034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
3038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
3042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
3048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Analog watchdog configuration */
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
3065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
3074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
3078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/cceGX4yx.s 			page 203


3089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set the filtering configuration */
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->TR1,
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_TR1_AWDFILT,
3092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  AnalogWDGConfig->FilteringConfig);
3093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
3109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
3127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           else
3128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
3131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
ARM GAS  /tmp/cceGX4yx.s 			page 204


3146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         else
3161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         else
3183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Analog watchdog thresholds configuration */
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* are set to 0.                                                        */
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighThre
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
3199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
3201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
3202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
ARM GAS  /tmp/cceGX4yx.s 			page 205


3203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 7, the LSB (right bits)    */
3205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* are set to 0.                                                        */
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighThr
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
3208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighThresh
3212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                   tmpAWDLowThresholdShifted);
3213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
3218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
3224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
3229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
3230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
3231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
3233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
3234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     peripheral.
3236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Check the ADC state
3237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Check the ADC error code
3238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
3240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         compared with states bits.
3247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For example:
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
3254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return ADC handle state */
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return hadc->State;
ARM GAS  /tmp/cceGX4yx.s 			page 206


3260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Return the ADC error code.
3264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
3268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return hadc->ErrorCode;
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
3277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
3281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
3285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          This parameter can be one of the following values:
3292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
3316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
ARM GAS  /tmp/cceGX4yx.s 			page 207


3317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* auto-delay mode.                                                       */
3320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* (see reference manual).                                                */
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
3328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Use stop of regular group */
3330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to error */
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_ERROR;
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear JEOS */
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
ARM GAS  /tmp/cceGX4yx.s 			page 208


3374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
3376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (conversion_group_reassigned)
3382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
3386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default:
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
3393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to error */
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_ERROR;
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return HAL status */
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
3428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
ARM GAS  /tmp/cceGX4yx.s 			page 209


3431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
3432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Update ADC state machine to error */
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       return HAL_ERROR;
3450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable the ADC peripheral */
3453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the
3462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           calibration logic.
3463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
3464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           4 ADC clock cycle duration */
3466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Note: Test of ADC enabled required due to hardware constraint to     */
3467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       not enable ADC if already enabled.                             */
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_Enable(hadc->Instance);
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to error */
3479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_ERROR;
3485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
ARM GAS  /tmp/cceGX4yx.s 			page 210


3488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return HAL status */
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         stopped.
3498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       disabled.                                                          */
3509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
3512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Disable the ADC peripheral */
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Update ADC state machine to error */
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       return HAL_ERROR;
3529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Get tick count */
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to error */
3543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/cceGX4yx.s 			page 211


3545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_ERROR;
3549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return HAL status */
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* to disable interruption.                                               */
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
3579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Is CONT bit set ? */
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
3592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
3600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
ARM GAS  /tmp/cceGX4yx.s 			page 212


3602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Conversion complete callback */
3611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Call ADC DMA error callback */
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
3640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1240              		.loc 1 3642 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 1244              	.LVL95:
 1245 0000 08B5     		push	{r3, lr}
 1246              	.LCFI6:
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 3, -8
 1249              		.cfi_offset 14, -4
 1250              	.LVL96:
3643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Half conversion callback */
3647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/cceGX4yx.s 			page 213


3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1251              		.loc 1 3650 0
 1252 0002 806A     		ldr	r0, [r0, #40]
 1253              	.LVL97:
 1254 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1255              	.LVL98:
3651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1256              		.loc 1 3652 0
 1257 0008 08BD     		pop	{r3, pc}
 1258              		.cfi_endproc
 1259              	.LFE357:
 1261              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1262              		.align	1
 1263              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1267              		.fpu fpv4-sp-d16
 1269              	HAL_ADC_LevelOutOfWindowCallback:
 1270              	.LFB347:
2698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1271              		.loc 1 2698 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 0, uses_anonymous_args = 0
 1275              		@ link register save eliminated.
 1276              	.LVL99:
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1277              		.loc 1 2705 0
 1278 0000 7047     		bx	lr
 1279              		.cfi_endproc
 1280              	.LFE347:
 1282              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1283              		.align	1
 1284              		.weak	HAL_ADC_ErrorCallback
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu fpv4-sp-d16
 1290              	HAL_ADC_ErrorCallback:
 1291              	.LFB348:
2720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1292              		.loc 1 2720 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 1297              	.LVL100:
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1298              		.loc 1 2727 0
 1299 0000 7047     		bx	lr
 1300              		.cfi_endproc
 1301              	.LFE348:
 1303              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
ARM GAS  /tmp/cceGX4yx.s 			page 214


 1304              		.align	1
 1305              		.global	HAL_ADC_IRQHandler
 1306              		.syntax unified
 1307              		.thumb
 1308              		.thumb_func
 1309              		.fpu fpv4-sp-d16
 1311              	HAL_ADC_IRQHandler:
 1312              	.LFB344:
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1313              		.loc 1 2296 0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 0
 1316              		@ frame_needed = 0, uses_anonymous_args = 0
 1317              	.LVL101:
 1318 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1319              	.LCFI7:
 1320              		.cfi_def_cfa_offset 24
 1321              		.cfi_offset 3, -24
 1322              		.cfi_offset 4, -20
 1323              		.cfi_offset 5, -16
 1324              		.cfi_offset 6, -12
 1325              		.cfi_offset 7, -8
 1326              		.cfi_offset 14, -4
 1327 0002 0446     		mov	r4, r0
 1328              	.LVL102:
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1329              		.loc 1 2298 0
 1330 0004 0368     		ldr	r3, [r0]
 1331 0006 1D68     		ldr	r5, [r3]
 1332              	.LVL103:
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1333              		.loc 1 2299 0
 1334 0008 5E68     		ldr	r6, [r3, #4]
 1335              	.LVL104:
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1336              		.loc 1 2305 0
 1337 000a B3F1A04F 		cmp	r3, #1342177280
 1338 000e 46D0     		beq	.L154
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1339              		.loc 1 2305 0 is_stmt 0 discriminator 2
 1340 0010 A84A     		ldr	r2, .L173
 1341 0012 9342     		cmp	r3, r2
 1342 0014 41D0     		beq	.L165
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1343              		.loc 1 2305 0
 1344 0016 A84B     		ldr	r3, .L173+4
 1345              	.L117:
 1346              	.LVL105:
 1347              	.LBB410:
 1348              	.LBB411:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1349              		.loc 2 6387 0 is_stmt 1 discriminator 6
 1350 0018 9F68     		ldr	r7, [r3, #8]
 1351 001a 07F01F07 		and	r7, r7, #31
 1352              	.LVL106:
 1353              	.LBE411:
 1354              	.LBE410:
ARM GAS  /tmp/cceGX4yx.s 			page 215


2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1355              		.loc 1 2313 0 discriminator 6
 1356 001e 15F0020F 		tst	r5, #2
 1357 0022 10D0     		beq	.L118
2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1358              		.loc 1 2313 0 is_stmt 0 discriminator 1
 1359 0024 16F0020F 		tst	r6, #2
 1360 0028 0DD0     		beq	.L118
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1361              		.loc 1 2316 0 is_stmt 1
 1362 002a E36D     		ldr	r3, [r4, #92]
 1363 002c 13F0100F 		tst	r3, #16
 1364 0030 03D1     		bne	.L119
2319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1365              		.loc 1 2319 0
 1366 0032 E36D     		ldr	r3, [r4, #92]
 1367 0034 43F40063 		orr	r3, r3, #2048
 1368 0038 E365     		str	r3, [r4, #92]
 1369              	.L119:
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1370              		.loc 1 2326 0
 1371 003a 2046     		mov	r0, r4
 1372              	.LVL107:
 1373 003c FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1374              	.LVL108:
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1375              		.loc 1 2330 0
 1376 0040 2368     		ldr	r3, [r4]
 1377 0042 0222     		movs	r2, #2
 1378 0044 1A60     		str	r2, [r3]
 1379              	.L118:
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1380              		.loc 1 2334 0
 1381 0046 15F0040F 		tst	r5, #4
 1382 004a 02D0     		beq	.L120
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1383              		.loc 1 2334 0 is_stmt 0 discriminator 1
 1384 004c 16F0040F 		tst	r6, #4
 1385 0050 05D1     		bne	.L121
 1386              	.L120:
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1387              		.loc 1 2334 0 discriminator 3
 1388 0052 15F0080F 		tst	r5, #8
 1389 0056 55D0     		beq	.L122
2335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1390              		.loc 1 2335 0 is_stmt 1
 1391 0058 16F0080F 		tst	r6, #8
 1392 005c 52D0     		beq	.L122
 1393              	.L121:
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1394              		.loc 1 2338 0
 1395 005e E36D     		ldr	r3, [r4, #92]
 1396 0060 13F0100F 		tst	r3, #16
 1397 0064 03D1     		bne	.L123
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1398              		.loc 1 2341 0
 1399 0066 E36D     		ldr	r3, [r4, #92]
ARM GAS  /tmp/cceGX4yx.s 			page 216


 1400 0068 43F40073 		orr	r3, r3, #512
 1401 006c E365     		str	r3, [r4, #92]
 1402              	.L123:
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1403              		.loc 1 2347 0
 1404 006e 2368     		ldr	r3, [r4]
 1405              	.LVL109:
 1406              	.LBB412:
 1407              	.LBB413:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1408              		.loc 2 3750 0
 1409 0070 DA68     		ldr	r2, [r3, #12]
 1410 0072 12F4406F 		tst	r2, #3072
 1411 0076 3FD1     		bne	.L124
 1412              	.LVL110:
 1413              	.LBE413:
 1414              	.LBE412:
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1415              		.loc 1 2353 0
 1416 0078 8E4A     		ldr	r2, .L173
 1417 007a 9342     		cmp	r3, r2
 1418 007c 14D0     		beq	.L156
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1419              		.loc 1 2353 0 is_stmt 0 discriminator 1
 1420 007e 02F58062 		add	r2, r2, #1024
 1421 0082 9342     		cmp	r3, r2
 1422 0084 0DD0     		beq	.L166
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1423              		.loc 1 2353 0
 1424 0086 1A46     		mov	r2, r3
 1425              	.L125:
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1426              		.loc 1 2353 0 discriminator 8
 1427 0088 9342     		cmp	r3, r2
 1428 008a 10D0     		beq	.L126
2354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 1429              		.loc 1 2354 0 is_stmt 1
 1430 008c 7FB1     		cbz	r7, .L126
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 1431              		.loc 1 2355 0
 1432 008e 052F     		cmp	r7, #5
 1433 0090 0DD0     		beq	.L126
2356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
 1434              		.loc 1 2356 0
 1435 0092 092F     		cmp	r7, #9
 1436 0094 0BD0     		beq	.L126
 1437              	.LVL111:
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1438              		.loc 1 2366 0 discriminator 8
 1439 0096 D268     		ldr	r2, [r2, #12]
 1440              	.LVL112:
 1441 0098 0AE0     		b	.L128
 1442              	.LVL113:
 1443              	.L165:
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1444              		.loc 1 2305 0
 1445 009a 884B     		ldr	r3, .L173+8
ARM GAS  /tmp/cceGX4yx.s 			page 217


 1446 009c BCE7     		b	.L117
 1447              	.L154:
 1448 009e 874B     		ldr	r3, .L173+8
 1449 00a0 BAE7     		b	.L117
 1450              	.LVL114:
 1451              	.L166:
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1452              		.loc 1 2353 0
 1453 00a2 A2F58072 		sub	r2, r2, #256
 1454 00a6 EFE7     		b	.L125
 1455              	.L156:
 1456 00a8 4FF0A042 		mov	r2, #1342177280
 1457 00ac ECE7     		b	.L125
 1458              	.L126:
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1459              		.loc 1 2360 0
 1460 00ae DA68     		ldr	r2, [r3, #12]
 1461              	.LVL115:
 1462              	.L128:
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1463              		.loc 1 2373 0
 1464 00b0 12F4005F 		tst	r2, #8192
 1465 00b4 20D1     		bne	.L124
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1466              		.loc 1 2376 0
 1467 00b6 1A68     		ldr	r2, [r3]
 1468              	.LVL116:
 1469 00b8 12F0080F 		tst	r2, #8
 1470 00bc 1CD0     		beq	.L124
 1471              	.LVL117:
 1472              	.LBB414:
 1473              	.LBB415:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1474              		.loc 2 6846 0
 1475 00be 9A68     		ldr	r2, [r3, #8]
 1476 00c0 12F0040F 		tst	r2, #4
 1477 00c4 10D1     		bne	.L129
 1478              	.LVL118:
 1479              	.LBE415:
 1480              	.LBE414:
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1481              		.loc 1 2386 0
 1482 00c6 5A68     		ldr	r2, [r3, #4]
 1483 00c8 22F00C02 		bic	r2, r2, #12
 1484 00cc 5A60     		str	r2, [r3, #4]
2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1485              		.loc 1 2389 0
 1486 00ce E36D     		ldr	r3, [r4, #92]
 1487 00d0 23F48073 		bic	r3, r3, #256
 1488 00d4 E365     		str	r3, [r4, #92]
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
 1489              		.loc 1 2391 0
 1490 00d6 E36D     		ldr	r3, [r4, #92]
 1491 00d8 13F4805F 		tst	r3, #4096
 1492 00dc 0CD1     		bne	.L124
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
 1493              		.loc 1 2393 0
ARM GAS  /tmp/cceGX4yx.s 			page 218


 1494 00de E36D     		ldr	r3, [r4, #92]
 1495 00e0 43F00103 		orr	r3, r3, #1
 1496 00e4 E365     		str	r3, [r4, #92]
 1497 00e6 07E0     		b	.L124
 1498              	.LVL119:
 1499              	.L129:
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1500              		.loc 1 2399 0
 1501 00e8 E36D     		ldr	r3, [r4, #92]
 1502 00ea 43F01003 		orr	r3, r3, #16
 1503 00ee E365     		str	r3, [r4, #92]
2402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 1504              		.loc 1 2402 0
 1505 00f0 236E     		ldr	r3, [r4, #96]
 1506 00f2 43F00103 		orr	r3, r3, #1
 1507 00f6 2366     		str	r3, [r4, #96]
 1508              	.L124:
2416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1509              		.loc 1 2416 0
 1510 00f8 2046     		mov	r0, r4
 1511 00fa FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1512              	.LVL120:
2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1513              		.loc 1 2424 0
 1514 00fe 2368     		ldr	r3, [r4]
 1515 0100 0C22     		movs	r2, #12
 1516 0102 1A60     		str	r2, [r3]
 1517              	.L122:
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1518              		.loc 1 2428 0
 1519 0104 15F0200F 		tst	r5, #32
 1520 0108 02D0     		beq	.L131
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1521              		.loc 1 2428 0 is_stmt 0 discriminator 1
 1522 010a 16F0200F 		tst	r6, #32
 1523 010e 05D1     		bne	.L132
 1524              	.L131:
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1525              		.loc 1 2428 0 discriminator 3
 1526 0110 15F0400F 		tst	r5, #64
 1527 0114 63D0     		beq	.L133
2429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1528              		.loc 1 2429 0 is_stmt 1
 1529 0116 16F0400F 		tst	r6, #64
 1530 011a 60D0     		beq	.L133
 1531              	.L132:
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1532              		.loc 1 2432 0
 1533 011c E36D     		ldr	r3, [r4, #92]
 1534 011e 13F0100F 		tst	r3, #16
 1535 0122 03D1     		bne	.L134
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1536              		.loc 1 2435 0
 1537 0124 E36D     		ldr	r3, [r4, #92]
 1538 0126 43F40053 		orr	r3, r3, #8192
 1539 012a E365     		str	r3, [r4, #92]
 1540              	.L134:
ARM GAS  /tmp/cceGX4yx.s 			page 219


2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1541              		.loc 1 2439 0
 1542 012c 2368     		ldr	r3, [r4]
 1543              	.LVL121:
 1544              	.LBB416:
 1545              	.LBB417:
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1546              		.loc 2 4537 0
 1547 012e DA6C     		ldr	r2, [r3, #76]
 1548 0130 12F4C07F 		tst	r2, #384
 1549 0134 16D1     		bne	.L158
 1550 0136 0121     		movs	r1, #1
 1551              	.L135:
 1552              	.LVL122:
 1553              	.LBE417:
 1554              	.LBE416:
 1555              	.LBB419:
 1556              	.LBB420:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1557              		.loc 2 3750 0
 1558 0138 DA68     		ldr	r2, [r3, #12]
 1559 013a 12F4406F 		tst	r2, #3072
 1560 013e 13D1     		bne	.L159
 1561 0140 0120     		movs	r0, #1
 1562              	.L136:
 1563              	.LVL123:
 1564              	.LBE420:
 1565              	.LBE419:
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1566              		.loc 1 2445 0
 1567 0142 5C4A     		ldr	r2, .L173
 1568 0144 9342     		cmp	r3, r2
 1569 0146 14D0     		beq	.L160
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1570              		.loc 1 2445 0 is_stmt 0 discriminator 1
 1571 0148 02F58062 		add	r2, r2, #1024
 1572 014c 9342     		cmp	r3, r2
 1573 014e 0DD0     		beq	.L167
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1574              		.loc 1 2445 0
 1575 0150 1A46     		mov	r2, r3
 1576              	.L137:
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1577              		.loc 1 2445 0 discriminator 8
 1578 0152 9342     		cmp	r3, r2
 1579 0154 10D0     		beq	.L138
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1580              		.loc 1 2446 0 is_stmt 1
 1581 0156 7FB1     		cbz	r7, .L138
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1582              		.loc 1 2447 0
 1583 0158 062F     		cmp	r7, #6
 1584 015a 0DD0     		beq	.L138
2448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 1585              		.loc 1 2448 0
 1586 015c 072F     		cmp	r7, #7
 1587 015e 0BD0     		beq	.L138
ARM GAS  /tmp/cceGX4yx.s 			page 220


 1588              	.LVL124:
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1589              		.loc 1 2456 0 discriminator 8
 1590 0160 D268     		ldr	r2, [r2, #12]
 1591              	.LVL125:
 1592 0162 0AE0     		b	.L140
 1593              	.LVL126:
 1594              	.L158:
 1595              	.LBB422:
 1596              	.LBB418:
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1597              		.loc 2 4537 0
 1598 0164 0021     		movs	r1, #0
 1599 0166 E7E7     		b	.L135
 1600              	.LVL127:
 1601              	.L159:
 1602              	.LBE418:
 1603              	.LBE422:
 1604              	.LBB423:
 1605              	.LBB421:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1606              		.loc 2 3750 0
 1607 0168 0020     		movs	r0, #0
 1608 016a EAE7     		b	.L136
 1609              	.LVL128:
 1610              	.L167:
 1611              	.LBE421:
 1612              	.LBE423:
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1613              		.loc 1 2445 0
 1614 016c A2F58072 		sub	r2, r2, #256
 1615 0170 EFE7     		b	.L137
 1616              	.L160:
 1617 0172 4FF0A042 		mov	r2, #1342177280
 1618 0176 ECE7     		b	.L137
 1619              	.L138:
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1620              		.loc 1 2451 0
 1621 0178 DA68     		ldr	r2, [r3, #12]
 1622              	.LVL129:
 1623              	.L140:
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1624              		.loc 1 2467 0
 1625 017a 51B3     		cbz	r1, .L141
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1626              		.loc 1 2469 0
 1627 017c 12F0007F 		tst	r2, #33554432
 1628 0180 03D0     		beq	.L142
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1629              		.loc 1 2469 0 is_stmt 0 discriminator 1
 1630 0182 30B3     		cbz	r0, .L141
2470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
 1631              		.loc 1 2470 0 is_stmt 1
 1632 0184 12F4005F 		tst	r2, #8192
 1633 0188 23D1     		bne	.L141
 1634              	.L142:
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
ARM GAS  /tmp/cceGX4yx.s 			page 221


 1635              		.loc 1 2474 0
 1636 018a 1968     		ldr	r1, [r3]
 1637 018c 11F0400F 		tst	r1, #64
 1638 0190 1FD0     		beq	.L141
2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 1639              		.loc 1 2482 0
 1640 0192 12F4001F 		tst	r2, #2097152
 1641 0196 1CD1     		bne	.L141
 1642              	.LVL130:
 1643              	.LBB424:
 1644              	.LBB425:
 1645              		.loc 2 7071 0
 1646 0198 9A68     		ldr	r2, [r3, #8]
 1647              	.LVL131:
 1648 019a 12F0080F 		tst	r2, #8
 1649 019e 10D1     		bne	.L143
 1650              	.LVL132:
 1651              	.LBE425:
 1652              	.LBE424:
2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1653              		.loc 1 2489 0
 1654 01a0 5A68     		ldr	r2, [r3, #4]
 1655 01a2 22F06002 		bic	r2, r2, #96
 1656 01a6 5A60     		str	r2, [r3, #4]
2492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1657              		.loc 1 2492 0
 1658 01a8 E36D     		ldr	r3, [r4, #92]
 1659 01aa 23F48053 		bic	r3, r3, #4096
 1660 01ae E365     		str	r3, [r4, #92]
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               {
 1661              		.loc 1 2494 0
 1662 01b0 E36D     		ldr	r3, [r4, #92]
 1663 01b2 13F4807F 		tst	r3, #256
 1664 01b6 0CD1     		bne	.L141
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               }
 1665              		.loc 1 2496 0
 1666 01b8 E36D     		ldr	r3, [r4, #92]
 1667 01ba 43F00103 		orr	r3, r3, #1
 1668 01be E365     		str	r3, [r4, #92]
 1669 01c0 07E0     		b	.L141
 1670              	.LVL133:
 1671              	.L143:
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1672              		.loc 1 2502 0
 1673 01c2 E36D     		ldr	r3, [r4, #92]
 1674 01c4 43F01003 		orr	r3, r3, #16
 1675 01c8 E365     		str	r3, [r4, #92]
2505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
 1676              		.loc 1 2505 0
 1677 01ca 236E     		ldr	r3, [r4, #96]
 1678 01cc 43F00103 		orr	r3, r3, #1
 1679 01d0 2366     		str	r3, [r4, #96]
 1680              	.L141:
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1681              		.loc 1 2521 0
 1682 01d2 2046     		mov	r0, r4
 1683 01d4 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
ARM GAS  /tmp/cceGX4yx.s 			page 222


 1684              	.LVL134:
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1685              		.loc 1 2525 0
 1686 01d8 2368     		ldr	r3, [r4]
 1687 01da 6022     		movs	r2, #96
 1688 01dc 1A60     		str	r2, [r3]
 1689              	.L133:
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1690              		.loc 1 2529 0
 1691 01de 15F0800F 		tst	r5, #128
 1692 01e2 02D0     		beq	.L145
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1693              		.loc 1 2529 0 is_stmt 0 discriminator 1
 1694 01e4 16F0800F 		tst	r6, #128
 1695 01e8 36D1     		bne	.L168
 1696              	.L145:
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1697              		.loc 1 2546 0 is_stmt 1
 1698 01ea 15F4807F 		tst	r5, #256
 1699 01ee 02D0     		beq	.L146
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1700              		.loc 1 2546 0 is_stmt 0 discriminator 1
 1701 01f0 16F4807F 		tst	r6, #256
 1702 01f4 3BD1     		bne	.L169
 1703              	.L146:
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1704              		.loc 1 2563 0 is_stmt 1
 1705 01f6 15F4007F 		tst	r5, #512
 1706 01fa 02D0     		beq	.L147
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1707              		.loc 1 2563 0 is_stmt 0 discriminator 1
 1708 01fc 16F4007F 		tst	r6, #512
 1709 0200 41D1     		bne	.L170
 1710              	.L147:
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1711              		.loc 1 2580 0 is_stmt 1
 1712 0202 15F0100F 		tst	r5, #16
 1713 0206 20D0     		beq	.L148
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1714              		.loc 1 2580 0 is_stmt 0 discriminator 1
 1715 0208 16F0100F 		tst	r6, #16
 1716 020c 1DD0     		beq	.L148
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1717              		.loc 1 2588 0 is_stmt 1
 1718 020e E36B     		ldr	r3, [r4, #60]
 1719 0210 6BB1     		cbz	r3, .L149
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1720              		.loc 1 2596 0
 1721 0212 002F     		cmp	r7, #0
 1722 0214 47D0     		beq	.L150
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1723              		.loc 1 2600 0
 1724 0216 2368     		ldr	r3, [r4]
 1725 0218 B3F1A04F 		cmp	r3, #1342177280
 1726 021c 41D0     		beq	.L162
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1727              		.loc 1 2600 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/cceGX4yx.s 			page 223


 1728 021e 254A     		ldr	r2, .L173
 1729 0220 9342     		cmp	r3, r2
 1730 0222 3CD0     		beq	.L171
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1731              		.loc 1 2600 0
 1732 0224 244B     		ldr	r3, .L173+4
 1733              	.L151:
 1734              	.LVL135:
 1735              	.LBB426:
 1736              	.LBB427:
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1737              		.loc 2 6484 0 is_stmt 1 discriminator 6
 1738 0226 9B68     		ldr	r3, [r3, #8]
 1739              	.LVL136:
 1740              	.LBE427:
 1741              	.LBE426:
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1742              		.loc 1 2600 0 discriminator 6
 1743 0228 13F4604F 		tst	r3, #57344
 1744 022c 0AD0     		beq	.L152
 1745              	.L149:
2619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1746              		.loc 1 2619 0
 1747 022e E36D     		ldr	r3, [r4, #92]
 1748 0230 43F48063 		orr	r3, r3, #1024
 1749 0234 E365     		str	r3, [r4, #92]
2622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1750              		.loc 1 2622 0
 1751 0236 236E     		ldr	r3, [r4, #96]
 1752 0238 43F00203 		orr	r3, r3, #2
 1753 023c 2366     		str	r3, [r4, #96]
2632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1754              		.loc 1 2632 0
 1755 023e 2046     		mov	r0, r4
 1756 0240 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1757              	.LVL137:
 1758              	.L152:
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1759              		.loc 1 2637 0
 1760 0244 2368     		ldr	r3, [r4]
 1761 0246 1022     		movs	r2, #16
 1762 0248 1A60     		str	r2, [r3]
 1763              	.L148:
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1764              		.loc 1 2641 0
 1765 024a 15F4806F 		tst	r5, #1024
 1766 024e 02D0     		beq	.L116
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1767              		.loc 1 2641 0 is_stmt 0 discriminator 1
 1768 0250 16F4806F 		tst	r6, #1024
 1769 0254 34D1     		bne	.L172
 1770              	.L116:
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1771              		.loc 1 2660 0 is_stmt 1
 1772 0256 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1773              	.LVL138:
 1774              	.L168:
ARM GAS  /tmp/cceGX4yx.s 			page 224


2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1775              		.loc 1 2532 0
 1776 0258 E36D     		ldr	r3, [r4, #92]
 1777 025a 43F48033 		orr	r3, r3, #65536
 1778 025e E365     		str	r3, [r4, #92]
2538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1779              		.loc 1 2538 0
 1780 0260 2046     		mov	r0, r4
 1781 0262 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1782              	.LVL139:
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1783              		.loc 1 2542 0
 1784 0266 2368     		ldr	r3, [r4]
 1785 0268 8022     		movs	r2, #128
 1786 026a 1A60     		str	r2, [r3]
 1787 026c BDE7     		b	.L145
 1788              	.L169:
2549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1789              		.loc 1 2549 0
 1790 026e E36D     		ldr	r3, [r4, #92]
 1791 0270 43F40033 		orr	r3, r3, #131072
 1792 0274 E365     		str	r3, [r4, #92]
2555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1793              		.loc 1 2555 0
 1794 0276 2046     		mov	r0, r4
 1795 0278 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1796              	.LVL140:
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1797              		.loc 1 2559 0
 1798 027c 2368     		ldr	r3, [r4]
 1799 027e 4FF48072 		mov	r2, #256
 1800 0282 1A60     		str	r2, [r3]
 1801 0284 B7E7     		b	.L146
 1802              	.L170:
2566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1803              		.loc 1 2566 0
 1804 0286 E36D     		ldr	r3, [r4, #92]
 1805 0288 43F48023 		orr	r3, r3, #262144
 1806 028c E365     		str	r3, [r4, #92]
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1807              		.loc 1 2572 0
 1808 028e 2046     		mov	r0, r4
 1809 0290 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1810              	.LVL141:
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1811              		.loc 1 2576 0
 1812 0294 2368     		ldr	r3, [r4]
 1813 0296 4FF40072 		mov	r2, #512
 1814 029a 1A60     		str	r2, [r3]
 1815 029c B1E7     		b	.L147
 1816              	.L171:
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1817              		.loc 1 2600 0
 1818 029e 074B     		ldr	r3, .L173+8
 1819 02a0 C1E7     		b	.L151
 1820              	.L162:
 1821 02a2 064B     		ldr	r3, .L173+8
ARM GAS  /tmp/cceGX4yx.s 			page 225


 1822 02a4 BFE7     		b	.L151
 1823              	.L150:
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1824              		.loc 1 2609 0
 1825 02a6 2368     		ldr	r3, [r4]
 1826 02a8 DB68     		ldr	r3, [r3, #12]
 1827 02aa 13F0010F 		tst	r3, #1
 1828 02ae C9D0     		beq	.L152
 1829 02b0 BDE7     		b	.L149
 1830              	.L174:
 1831 02b2 00BF     		.align	2
 1832              	.L173:
 1833 02b4 00010050 		.word	1342177536
 1834 02b8 00070050 		.word	1342179072
 1835 02bc 00030050 		.word	1342178048
 1836              	.L172:
2644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1837              		.loc 1 2644 0
 1838 02c0 E36D     		ldr	r3, [r4, #92]
 1839 02c2 43F48043 		orr	r3, r3, #16384
 1840 02c6 E365     		str	r3, [r4, #92]
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1841              		.loc 1 2647 0
 1842 02c8 236E     		ldr	r3, [r4, #96]
 1843 02ca 43F00803 		orr	r3, r3, #8
 1844 02ce 2366     		str	r3, [r4, #96]
2650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1845              		.loc 1 2650 0
 1846 02d0 2368     		ldr	r3, [r4]
 1847 02d2 4FF48062 		mov	r2, #1024
 1848 02d6 1A60     		str	r2, [r3]
2656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1849              		.loc 1 2656 0
 1850 02d8 2046     		mov	r0, r4
 1851 02da FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 1852              	.LVL142:
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1853              		.loc 1 2660 0
 1854 02de BAE7     		b	.L116
 1855              		.cfi_endproc
 1856              	.LFE344:
 1858              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1859              		.align	1
 1860              		.global	ADC_DMAConvCplt
 1861              		.syntax unified
 1862              		.thumb
 1863              		.thumb_func
 1864              		.fpu fpv4-sp-d16
 1866              	ADC_DMAConvCplt:
 1867              	.LFB356:
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1868              		.loc 1 3564 0
 1869              		.cfi_startproc
 1870              		@ args = 0, pretend = 0, frame = 0
 1871              		@ frame_needed = 0, uses_anonymous_args = 0
 1872              	.LVL143:
 1873 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cceGX4yx.s 			page 226


 1874              	.LCFI8:
 1875              		.cfi_def_cfa_offset 8
 1876              		.cfi_offset 3, -8
 1877              		.cfi_offset 14, -4
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1878              		.loc 1 3566 0
 1879 0002 836A     		ldr	r3, [r0, #40]
 1880              	.LVL144:
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1881              		.loc 1 3569 0
 1882 0004 DA6D     		ldr	r2, [r3, #92]
 1883 0006 12F0500F 		tst	r2, #80
 1884 000a 31D1     		bne	.L176
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1885              		.loc 1 3572 0
 1886 000c DA6D     		ldr	r2, [r3, #92]
 1887 000e 42F40072 		orr	r2, r2, #512
 1888 0012 DA65     		str	r2, [r3, #92]
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1889              		.loc 1 3578 0
 1890 0014 1A68     		ldr	r2, [r3]
 1891 0016 1168     		ldr	r1, [r2]
 1892 0018 11F0080F 		tst	r1, #8
 1893 001c 14D0     		beq	.L177
 1894              	.LVL145:
 1895              	.LBB428:
 1896              	.LBB429:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1897              		.loc 2 3750 0
 1898 001e D168     		ldr	r1, [r2, #12]
 1899 0020 11F4406F 		tst	r1, #3072
 1900 0024 20D1     		bne	.L178
 1901              	.LVL146:
 1902              	.LBE429:
 1903              	.LBE428:
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1904              		.loc 1 3584 0
 1905 0026 D268     		ldr	r2, [r2, #12]
 1906 0028 12F4005F 		tst	r2, #8192
 1907 002c 1CD1     		bne	.L178
3587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1908              		.loc 1 3587 0
 1909 002e DA6D     		ldr	r2, [r3, #92]
 1910 0030 22F48072 		bic	r2, r2, #256
 1911 0034 DA65     		str	r2, [r3, #92]
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 1912              		.loc 1 3588 0
 1913 0036 DA6D     		ldr	r2, [r3, #92]
 1914 0038 12F4805F 		tst	r2, #4096
 1915 003c 14D1     		bne	.L178
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 1916              		.loc 1 3590 0
 1917 003e DA6D     		ldr	r2, [r3, #92]
 1918 0040 42F00102 		orr	r2, r2, #1
 1919 0044 DA65     		str	r2, [r3, #92]
 1920 0046 0FE0     		b	.L178
 1921              	.L177:
ARM GAS  /tmp/cceGX4yx.s 			page 227


3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1922              		.loc 1 3599 0
 1923 0048 D268     		ldr	r2, [r2, #12]
 1924 004a 12F0020F 		tst	r2, #2
 1925 004e 0BD1     		bne	.L178
3602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1926              		.loc 1 3602 0
 1927 0050 DA6D     		ldr	r2, [r3, #92]
 1928 0052 22F48072 		bic	r2, r2, #256
 1929 0056 DA65     		str	r2, [r3, #92]
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1930              		.loc 1 3603 0
 1931 0058 DA6D     		ldr	r2, [r3, #92]
 1932 005a 12F4805F 		tst	r2, #4096
 1933 005e 03D1     		bne	.L178
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 1934              		.loc 1 3605 0
 1935 0060 DA6D     		ldr	r2, [r3, #92]
 1936 0062 42F00102 		orr	r2, r2, #1
 1937 0066 DA65     		str	r2, [r3, #92]
 1938              	.L178:
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1939              		.loc 1 3614 0
 1940 0068 1846     		mov	r0, r3
 1941              	.LVL147:
 1942 006a FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1943              	.LVL148:
 1944              	.L175:
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1945              		.loc 1 3634 0
 1946 006e 08BD     		pop	{r3, pc}
 1947              	.LVL149:
 1948              	.L176:
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1949              		.loc 1 3619 0
 1950 0070 DA6D     		ldr	r2, [r3, #92]
 1951 0072 12F0100F 		tst	r2, #16
 1952 0076 03D1     		bne	.L182
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1953              		.loc 1 3631 0
 1954 0078 5B6D     		ldr	r3, [r3, #84]
 1955              	.LVL150:
 1956 007a 5B6B     		ldr	r3, [r3, #52]
 1957 007c 9847     		blx	r3
 1958              	.LVL151:
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1959              		.loc 1 3634 0
 1960 007e F6E7     		b	.L175
 1961              	.LVL152:
 1962              	.L182:
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1963              		.loc 1 3625 0
 1964 0080 1846     		mov	r0, r3
 1965              	.LVL153:
 1966 0082 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1967              	.LVL154:
 1968 0086 F2E7     		b	.L175
ARM GAS  /tmp/cceGX4yx.s 			page 228


 1969              		.cfi_endproc
 1970              	.LFE356:
 1972              		.section	.text.ADC_DMAError,"ax",%progbits
 1973              		.align	1
 1974              		.global	ADC_DMAError
 1975              		.syntax unified
 1976              		.thumb
 1977              		.thumb_func
 1978              		.fpu fpv4-sp-d16
 1980              	ADC_DMAError:
 1981              	.LFB358:
3653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DMA error callback.
3656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
3658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1982              		.loc 1 3660 0
 1983              		.cfi_startproc
 1984              		@ args = 0, pretend = 0, frame = 0
 1985              		@ frame_needed = 0, uses_anonymous_args = 0
 1986              	.LVL155:
 1987 0000 08B5     		push	{r3, lr}
 1988              	.LCFI9:
 1989              		.cfi_def_cfa_offset 8
 1990              		.cfi_offset 3, -8
 1991              		.cfi_offset 14, -4
3661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1992              		.loc 1 3662 0
 1993 0002 806A     		ldr	r0, [r0, #40]
 1994              	.LVL156:
3663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC state */
3665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1995              		.loc 1 3665 0
 1996 0004 C36D     		ldr	r3, [r0, #92]
 1997 0006 43F04003 		orr	r3, r3, #64
 1998 000a C365     		str	r3, [r0, #92]
3666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1999              		.loc 1 3668 0
 2000 000c 036E     		ldr	r3, [r0, #96]
 2001 000e 43F00403 		orr	r3, r3, #4
 2002 0012 0366     		str	r3, [r0, #96]
3669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Error callback */
3671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 2003              		.loc 1 3674 0
 2004 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2005              	.LVL157:
ARM GAS  /tmp/cceGX4yx.s 			page 229


3675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 2006              		.loc 1 3676 0
 2007 0018 08BD     		pop	{r3, pc}
 2008              		.cfi_endproc
 2009              	.LFE358:
 2011              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2012              		.align	1
 2013              		.global	HAL_ADC_ConfigChannel
 2014              		.syntax unified
 2015              		.thumb
 2016              		.thumb_func
 2017              		.fpu fpv4-sp-d16
 2019              	HAL_ADC_ConfigChannel:
 2020              	.LFB349:
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2021              		.loc 1 2766 0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 8
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
 2025              		@ link register save eliminated.
 2026              	.LVL158:
 2027 0000 F0B4     		push	{r4, r5, r6, r7}
 2028              	.LCFI10:
 2029              		.cfi_def_cfa_offset 16
 2030              		.cfi_offset 4, -16
 2031              		.cfi_offset 5, -12
 2032              		.cfi_offset 6, -8
 2033              		.cfi_offset 7, -4
 2034 0002 82B0     		sub	sp, sp, #8
 2035              	.LCFI11:
 2036              		.cfi_def_cfa_offset 24
 2037              	.LVL159:
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 2038              		.loc 1 2770 0
 2039 0004 0022     		movs	r2, #0
 2040 0006 0192     		str	r2, [sp, #4]
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2041              		.loc 1 2797 0
 2042 0008 90F85820 		ldrb	r2, [r0, #88]	@ zero_extendqisi2
 2043 000c 012A     		cmp	r2, #1
 2044 000e 00F08282 		beq	.L245
 2045 0012 0346     		mov	r3, r0
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2046              		.loc 1 2797 0 is_stmt 0 discriminator 2
 2047 0014 0122     		movs	r2, #1
 2048 0016 80F85820 		strb	r2, [r0, #88]
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2049              		.loc 1 2804 0 is_stmt 1 discriminator 2
 2050 001a 0668     		ldr	r6, [r0]
 2051              	.LVL160:
 2052              	.LBB430:
 2053              	.LBB431:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2054              		.loc 2 6846 0 discriminator 2
 2055 001c B068     		ldr	r0, [r6, #8]
 2056              	.LVL161:
ARM GAS  /tmp/cceGX4yx.s 			page 230


 2057 001e 10F0040F 		tst	r0, #4
 2058 0022 0AD0     		beq	.L187
 2059              	.LVL162:
 2060              	.LBE431:
 2061              	.LBE430:
2964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2062              		.loc 1 2964 0
 2063 0024 DA6D     		ldr	r2, [r3, #92]
 2064 0026 42F02002 		orr	r2, r2, #32
 2065 002a DA65     		str	r2, [r3, #92]
 2066              	.LVL163:
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 2067              		.loc 1 2966 0
 2068 002c 0120     		movs	r0, #1
 2069              	.LVL164:
 2070              	.L188:
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2071              		.loc 1 2970 0
 2072 002e 0022     		movs	r2, #0
 2073 0030 83F85820 		strb	r2, [r3, #88]
 2074              	.LVL165:
 2075              	.L186:
2974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2076              		.loc 1 2974 0
 2077 0034 02B0     		add	sp, sp, #8
 2078              	.LCFI12:
 2079              		.cfi_remember_state
 2080              		.cfi_def_cfa_offset 16
 2081              		@ sp needed
 2082 0036 F0BC     		pop	{r4, r5, r6, r7}
 2083              	.LCFI13:
 2084              		.cfi_restore 7
 2085              		.cfi_restore 6
 2086              		.cfi_restore 5
 2087              		.cfi_restore 4
 2088              		.cfi_def_cfa_offset 0
 2089 0038 7047     		bx	lr
 2090              	.LVL166:
 2091              	.L187:
 2092              	.LCFI14:
 2093              		.cfi_restore_state
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2094              		.loc 1 2807 0
 2095 003a 4D68     		ldr	r5, [r1, #4]
 2096 003c 0C68     		ldr	r4, [r1]
 2097              	.LVL167:
 2098              	.LBB432:
 2099              	.LBB433:
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2100              		.loc 2 4098 0
 2101 003e 3036     		adds	r6, r6, #48
 2102              	.LVL168:
 2103 0040 2A0A     		lsrs	r2, r5, #8
 2104 0042 9200     		lsls	r2, r2, #2
 2105 0044 02F00C02 		and	r2, r2, #12
 2106              	.LVL169:
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
ARM GAS  /tmp/cceGX4yx.s 			page 231


 2107              		.loc 2 4100 0
 2108 0048 B058     		ldr	r0, [r6, r2]
 2109 004a 05F01F05 		and	r5, r5, #31
 2110              	.LVL170:
 2111 004e 1F27     		movs	r7, #31
 2112 0050 AF40     		lsls	r7, r7, r5
 2113 0052 20EA0700 		bic	r0, r0, r7
 2114 0056 C4F38464 		ubfx	r4, r4, #26, #5
 2115              	.LVL171:
 2116 005a AC40     		lsls	r4, r4, r5
 2117 005c 2043     		orrs	r0, r0, r4
 2118 005e B050     		str	r0, [r6, r2]
 2119              	.LVL172:
 2120              	.LBE433:
 2121              	.LBE432:
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2122              		.loc 1 2814 0
 2123 0060 1A68     		ldr	r2, [r3]
 2124              	.LVL173:
 2125              	.LBB434:
 2126              	.LBB435:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2127              		.loc 2 6846 0
 2128 0062 9068     		ldr	r0, [r2, #8]
 2129 0064 10F0040F 		tst	r0, #4
 2130 0068 00F09980 		beq	.L246
 2131 006c 0120     		movs	r0, #1
 2132              	.L189:
 2133              	.LVL174:
 2134              	.LBE435:
 2135              	.LBE434:
 2136              	.LBB437:
 2137              	.LBB438:
 2138              		.loc 2 7071 0
 2139 006e 9468     		ldr	r4, [r2, #8]
 2140 0070 14F0080F 		tst	r4, #8
 2141 0074 00F09580 		beq	.L247
 2142 0078 0125     		movs	r5, #1
 2143              	.L190:
 2144              	.LVL175:
 2145              	.LBE438:
 2146              	.LBE437:
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2147              		.loc 1 2816 0
 2148 007a 0028     		cmp	r0, #0
 2149 007c 4FD1     		bne	.L191
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 2150              		.loc 1 2817 0
 2151 007e 002D     		cmp	r5, #0
 2152 0080 4DD1     		bne	.L191
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2153              		.loc 1 2821 0
 2154 0082 8C68     		ldr	r4, [r1, #8]
 2155 0084 B4F1004F 		cmp	r4, #-2147483648
 2156 0088 00F08D80 		beq	.L272
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2157              		.loc 1 2832 0
ARM GAS  /tmp/cceGX4yx.s 			page 232


 2158 008c 0F68     		ldr	r7, [r1]
 2159              	.LVL176:
 2160              	.LBB440:
 2161              	.LBB441:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2162              		.loc 2 5337 0
 2163 008e 1432     		adds	r2, r2, #20
 2164              	.LVL177:
 2165 0090 780E     		lsrs	r0, r7, #25
 2166 0092 8000     		lsls	r0, r0, #2
 2167 0094 00F00400 		and	r0, r0, #4
 2168              	.LVL178:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2169              		.loc 2 5339 0
 2170 0098 1658     		ldr	r6, [r2, r0]
 2171 009a C7F30457 		ubfx	r7, r7, #20, #5
 2172              	.LVL179:
 2173 009e 4FF0070C 		mov	ip, #7
 2174 00a2 0CFA07FC 		lsl	ip, ip, r7
 2175 00a6 26EA0C06 		bic	r6, r6, ip
 2176 00aa BC40     		lsls	r4, r4, r7
 2177              	.LVL180:
 2178 00ac 3443     		orrs	r4, r4, r6
 2179 00ae 1450     		str	r4, [r2, r0]
 2180              	.LVL181:
 2181              	.LBE441:
 2182              	.LBE440:
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2183              		.loc 1 2835 0
 2184 00b0 1868     		ldr	r0, [r3]
 2185              	.LVL182:
 2186              	.LBB442:
 2187              	.LBB443:
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2188              		.loc 2 3563 0
 2189 00b2 4269     		ldr	r2, [r0, #20]
 2190 00b4 22F00042 		bic	r2, r2, #-2147483648
 2191 00b8 4261     		str	r2, [r0, #20]
 2192              	.LVL183:
 2193              	.L193:
 2194              	.LBE443:
 2195              	.LBE442:
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2196              		.loc 1 2842 0
 2197 00ba 4A69     		ldr	r2, [r1, #20]
 2198 00bc 1C68     		ldr	r4, [r3]
 2199 00be E068     		ldr	r0, [r4, #12]
 2200 00c0 C0F3C100 		ubfx	r0, r0, #3, #2
 2201 00c4 4000     		lsls	r0, r0, #1
 2202 00c6 02FA00F0 		lsl	r0, r2, r0
 2203              	.LVL184:
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2204              		.loc 1 2844 0
 2205 00ca 0E69     		ldr	r6, [r1, #16]
 2206 00cc 042E     		cmp	r6, #4
 2207 00ce 00F08280 		beq	.L194
 2208              	.LVL185:
ARM GAS  /tmp/cceGX4yx.s 			page 233


 2209              	.LBB444:
 2210              	.LBB445:
3223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2211              		.loc 2 3223 0
 2212 00d2 6034     		adds	r4, r4, #96
 2213              	.LVL186:
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2214              		.loc 2 3225 0
 2215 00d4 54F82670 		ldr	r7, [r4, r6, lsl #2]
 2216 00d8 AC4A     		ldr	r2, .L284
 2217 00da 3A40     		ands	r2, r2, r7
 2218 00dc 0F68     		ldr	r7, [r1]
 2219 00de 07F0F847 		and	r7, r7, #2080374784
 2220 00e2 3843     		orrs	r0, r0, r7
 2221              	.LVL187:
 2222 00e4 0243     		orrs	r2, r2, r0
 2223 00e6 42F00042 		orr	r2, r2, #-2147483648
 2224 00ea 44F82620 		str	r2, [r4, r6, lsl #2]
 2225              	.LVL188:
 2226              	.LBE445:
 2227              	.LBE444:
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturatio
 2228              		.loc 1 2852 0
 2229 00ee 1A68     		ldr	r2, [r3]
 2230 00f0 0E69     		ldr	r6, [r1, #16]
 2231 00f2 8869     		ldr	r0, [r1, #24]
 2232              	.LVL189:
 2233              	.LBB446:
 2234              	.LBB447:
3420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2235              		.loc 2 3420 0
 2236 00f4 6032     		adds	r2, r2, #96
 2237              	.LVL190:
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 2238              		.loc 2 3422 0
 2239 00f6 52F82640 		ldr	r4, [r2, r6, lsl #2]
 2240 00fa 24F08074 		bic	r4, r4, #16777216
 2241 00fe 2043     		orrs	r0, r0, r4
 2242              	.LVL191:
 2243 0100 42F82600 		str	r0, [r2, r6, lsl #2]
 2244              	.LVL192:
 2245              	.LBE447:
 2246              	.LBE446:
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2247              		.loc 1 2853 0
 2248 0104 1868     		ldr	r0, [r3]
 2249 0106 0C69     		ldr	r4, [r1, #16]
 2250 0108 0A7F     		ldrb	r2, [r1, #28]	@ zero_extendqisi2
 2251 010a 012A     		cmp	r2, #1
 2252 010c 60D0     		beq	.L273
 2253              	.L195:
 2254              	.LVL193:
 2255              	.LBB448:
 2256              	.LBB449:
3475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2257              		.loc 2 3475 0 discriminator 4
 2258 010e 6030     		adds	r0, r0, #96
ARM GAS  /tmp/cceGX4yx.s 			page 234


 2259              	.LVL194:
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2260              		.loc 2 3477 0 discriminator 4
 2261 0110 50F82420 		ldr	r2, [r0, r4, lsl #2]
 2262 0114 22F00072 		bic	r2, r2, #33554432
 2263 0118 2A43     		orrs	r2, r2, r5
 2264 011a 40F82420 		str	r2, [r0, r4, lsl #2]
 2265              	.LVL195:
 2266              	.L191:
 2267              	.LBE449:
 2268              	.LBE448:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2269              		.loc 1 2885 0
 2270 011e 1868     		ldr	r0, [r3]
 2271              	.LVL196:
 2272              	.LBB450:
 2273              	.LBB451:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2274              		.loc 2 6724 0
 2275 0120 8268     		ldr	r2, [r0, #8]
 2276 0122 12F0010F 		tst	r2, #1
 2277 0126 16D1     		bne	.L211
 2278              	.LVL197:
 2279              	.LBE451:
 2280              	.LBE450:
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2281              		.loc 1 2888 0
 2282 0128 0A68     		ldr	r2, [r1]
 2283 012a CD68     		ldr	r5, [r1, #12]
 2284              	.LVL198:
 2285              	.LBB452:
 2286              	.LBB453:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2287              		.loc 2 5501 0
 2288 012c D0F8B040 		ldr	r4, [r0, #176]
 2289 0130 C2F31206 		ubfx	r6, r2, #0, #19
 2290 0134 24EA0604 		bic	r4, r4, r6
 2291 0138 05F01806 		and	r6, r5, #24
 2292 013c 944D     		ldr	r5, .L284+4
 2293              	.LVL199:
 2294 013e F540     		lsrs	r5, r5, r6
 2295 0140 2A40     		ands	r2, r2, r5
 2296              	.LVL200:
 2297 0142 C2F31202 		ubfx	r2, r2, #0, #19
 2298 0146 2243     		orrs	r2, r2, r4
 2299 0148 C0F8B020 		str	r2, [r0, #176]
 2300              	.LVL201:
 2301              	.LBE453:
 2302              	.LBE452:
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2303              		.loc 1 2891 0
 2304 014c C868     		ldr	r0, [r1, #12]
 2305 014e 914A     		ldr	r2, .L284+8
 2306 0150 9042     		cmp	r0, r2
 2307 0152 00F0A880 		beq	.L274
 2308              	.L211:
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
ARM GAS  /tmp/cceGX4yx.s 			page 235


 2309              		.loc 1 2908 0
 2310 0156 0A68     		ldr	r2, [r1]
 2311 0158 8F49     		ldr	r1, .L284+12
 2312              	.LVL202:
 2313 015a 0A42     		tst	r2, r1
 2314 015c 00F0D581 		beq	.L259
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2315              		.loc 1 2910 0
 2316 0160 1968     		ldr	r1, [r3]
 2317 0162 B1F1A04F 		cmp	r1, #1342177280
 2318 0166 00F06E81 		beq	.L260
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2319              		.loc 1 2910 0 is_stmt 0 discriminator 2
 2320 016a 8C48     		ldr	r0, .L284+16
 2321 016c 8142     		cmp	r1, r0
 2322 016e 00F06781 		beq	.L275
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2323              		.loc 1 2910 0
 2324 0172 8B48     		ldr	r0, .L284+20
 2325              	.L235:
 2326              	.LVL203:
 2327              	.LBB454:
 2328              	.LBB455:
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2329              		.loc 2 2880 0 is_stmt 1 discriminator 6
 2330 0174 8068     		ldr	r0, [r0, #8]
 2331              	.LVL204:
 2332 0176 00F0E074 		and	r4, r0, #29360128
 2333              	.LBE455:
 2334              	.LBE454:
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2335              		.loc 1 2914 0 discriminator 6
 2336 017a 8A4D     		ldr	r5, .L284+24
 2337 017c AA42     		cmp	r2, r5
 2338 017e 00F06481 		beq	.L236
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2339              		.loc 1 2914 0 is_stmt 0 discriminator 1
 2340 0182 894D     		ldr	r5, .L284+28
 2341 0184 AA42     		cmp	r2, r5
 2342 0186 00F06081 		beq	.L236
 2343              	.L237:
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2344              		.loc 1 2934 0 is_stmt 1
 2345 018a 884D     		ldr	r5, .L284+32
 2346 018c AA42     		cmp	r2, r5
 2347 018e 00F08F81 		beq	.L276
 2348              	.L242:
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2349              		.loc 1 2942 0
 2350 0192 874D     		ldr	r5, .L284+36
 2351 0194 AA42     		cmp	r2, r5
 2352 0196 00F0A381 		beq	.L277
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2353              		.loc 1 2767 0
 2354 019a 0020     		movs	r0, #0
 2355 019c 47E7     		b	.L188
 2356              	.LVL205:
ARM GAS  /tmp/cceGX4yx.s 			page 236


 2357              	.L246:
 2358              	.LBB456:
 2359              	.LBB436:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2360              		.loc 2 6846 0
 2361 019e 0020     		movs	r0, #0
 2362 01a0 65E7     		b	.L189
 2363              	.LVL206:
 2364              	.L247:
 2365              	.LBE436:
 2366              	.LBE456:
 2367              	.LBB457:
 2368              	.LBB439:
 2369              		.loc 2 7071 0
 2370 01a2 0025     		movs	r5, #0
 2371 01a4 69E7     		b	.L190
 2372              	.LVL207:
 2373              	.L272:
 2374              	.LBE439:
 2375              	.LBE457:
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2376              		.loc 1 2824 0
 2377 01a6 0C68     		ldr	r4, [r1]
 2378              	.LVL208:
 2379              	.LBB458:
 2380              	.LBB459:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2381              		.loc 2 5337 0
 2382 01a8 1432     		adds	r2, r2, #20
 2383              	.LVL209:
 2384 01aa 600E     		lsrs	r0, r4, #25
 2385 01ac 8000     		lsls	r0, r0, #2
 2386 01ae 00F00400 		and	r0, r0, #4
 2387              	.LVL210:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2388              		.loc 2 5339 0
 2389 01b2 1658     		ldr	r6, [r2, r0]
 2390 01b4 C4F30454 		ubfx	r4, r4, #20, #5
 2391              	.LVL211:
 2392 01b8 0727     		movs	r7, #7
 2393 01ba 07FA04F4 		lsl	r4, r7, r4
 2394 01be 26EA0404 		bic	r4, r6, r4
 2395 01c2 1450     		str	r4, [r2, r0]
 2396              	.LVL212:
 2397              	.LBE459:
 2398              	.LBE458:
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2399              		.loc 1 2827 0
 2400 01c4 1868     		ldr	r0, [r3]
 2401              	.LVL213:
 2402              	.LBB460:
 2403              	.LBB461:
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2404              		.loc 2 3563 0
 2405 01c6 4269     		ldr	r2, [r0, #20]
 2406 01c8 42F00042 		orr	r2, r2, #-2147483648
 2407 01cc 4261     		str	r2, [r0, #20]
ARM GAS  /tmp/cceGX4yx.s 			page 237


 2408 01ce 74E7     		b	.L193
 2409              	.LVL214:
 2410              	.L273:
 2411              	.LBE461:
 2412              	.LBE460:
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2413              		.loc 1 2853 0
 2414 01d0 4FF00075 		mov	r5, #33554432
 2415 01d4 9BE7     		b	.L195
 2416              	.LVL215:
 2417              	.L194:
 2418              	.LBB462:
 2419              	.LBB463:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2420              		.loc 2 3308 0
 2421 01d6 226E     		ldr	r2, [r4, #96]
 2422              	.LVL216:
 2423              	.LBE463:
 2424              	.LBE462:
 2425              	.LBB464:
 2426              	.LBB465:
 2427 01d8 206E     		ldr	r0, [r4, #96]
 2428              	.LVL217:
 2429              	.LBE465:
 2430              	.LBE464:
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2431              		.loc 1 2859 0
 2432 01da C0F38460 		ubfx	r0, r0, #26, #5
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2433              		.loc 1 2860 0
 2434 01de 0A68     		ldr	r2, [r1]
 2435 01e0 C2F31205 		ubfx	r5, r2, #0, #19
 2436 01e4 85BB     		cbnz	r5, .L196
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2437              		.loc 1 2860 0 is_stmt 0 discriminator 1
 2438 01e6 C2F38462 		ubfx	r2, r2, #26, #5
 2439              	.L197:
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2440              		.loc 1 2859 0 is_stmt 1
 2441 01ea 9042     		cmp	r0, r2
 2442 01ec 34D0     		beq	.L278
 2443              	.L199:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2444              		.loc 1 2864 0
 2445 01ee 1C68     		ldr	r4, [r3]
 2446              	.LVL218:
 2447              	.LBB466:
 2448              	.LBB467:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2449              		.loc 2 3308 0
 2450 01f0 626E     		ldr	r2, [r4, #100]
 2451              	.LVL219:
 2452              	.LBE467:
 2453              	.LBE466:
 2454              	.LBB468:
 2455              	.LBB469:
 2456 01f2 606E     		ldr	r0, [r4, #100]
ARM GAS  /tmp/cceGX4yx.s 			page 238


 2457              	.LVL220:
 2458              	.LBE469:
 2459              	.LBE468:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2460              		.loc 1 2864 0
 2461 01f4 C0F38460 		ubfx	r0, r0, #26, #5
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2462              		.loc 1 2865 0
 2463 01f8 0A68     		ldr	r2, [r1]
 2464 01fa C2F31205 		ubfx	r5, r2, #0, #19
 2465 01fe 85BB     		cbnz	r5, .L200
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2466              		.loc 1 2865 0 is_stmt 0 discriminator 1
 2467 0200 C2F38462 		ubfx	r2, r2, #26, #5
 2468              	.L201:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2469              		.loc 1 2864 0 is_stmt 1
 2470 0204 9042     		cmp	r0, r2
 2471 0206 34D0     		beq	.L279
 2472              	.L203:
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2473              		.loc 1 2869 0
 2474 0208 1C68     		ldr	r4, [r3]
 2475              	.LVL221:
 2476              	.LBB470:
 2477              	.LBB471:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2478              		.loc 2 3308 0
 2479 020a A26E     		ldr	r2, [r4, #104]
 2480              	.LVL222:
 2481              	.LBE471:
 2482              	.LBE470:
 2483              	.LBB472:
 2484              	.LBB473:
 2485 020c A06E     		ldr	r0, [r4, #104]
 2486              	.LVL223:
 2487              	.LBE473:
 2488              	.LBE472:
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2489              		.loc 1 2869 0
 2490 020e C0F38460 		ubfx	r0, r0, #26, #5
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2491              		.loc 1 2870 0
 2492 0212 0A68     		ldr	r2, [r1]
 2493 0214 C2F31205 		ubfx	r5, r2, #0, #19
 2494 0218 85BB     		cbnz	r5, .L204
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2495              		.loc 1 2870 0 is_stmt 0 discriminator 1
 2496 021a C2F38462 		ubfx	r2, r2, #26, #5
 2497              	.L205:
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2498              		.loc 1 2869 0 is_stmt 1
 2499 021e 9042     		cmp	r0, r2
 2500 0220 34D0     		beq	.L280
 2501              	.L207:
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2502              		.loc 1 2874 0
ARM GAS  /tmp/cceGX4yx.s 			page 239


 2503 0222 1C68     		ldr	r4, [r3]
 2504              	.LVL224:
 2505              	.LBB474:
 2506              	.LBB475:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2507              		.loc 2 3308 0
 2508 0224 E26E     		ldr	r2, [r4, #108]
 2509              	.LVL225:
 2510              	.LBE475:
 2511              	.LBE474:
 2512              	.LBB476:
 2513              	.LBB477:
 2514 0226 E06E     		ldr	r0, [r4, #108]
 2515              	.LVL226:
 2516              	.LBE477:
 2517              	.LBE476:
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2518              		.loc 1 2874 0
 2519 0228 C0F38460 		ubfx	r0, r0, #26, #5
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2520              		.loc 1 2875 0
 2521 022c 0A68     		ldr	r2, [r1]
 2522 022e C2F31205 		ubfx	r5, r2, #0, #19
 2523 0232 85BB     		cbnz	r5, .L208
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2524              		.loc 1 2875 0 is_stmt 0 discriminator 1
 2525 0234 C2F38462 		ubfx	r2, r2, #26, #5
 2526              	.L209:
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2527              		.loc 1 2874 0 is_stmt 1
 2528 0238 9042     		cmp	r0, r2
 2529 023a 7FF470AF 		bne	.L191
 2530              	.LVL227:
 2531              	.LBB478:
 2532              	.LBB479:
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2533              		.loc 2 3367 0
 2534 023e E26E     		ldr	r2, [r4, #108]
 2535 0240 22F00042 		bic	r2, r2, #-2147483648
 2536 0244 E266     		str	r2, [r4, #108]
 2537 0246 6AE7     		b	.L191
 2538              	.LVL228:
 2539              	.L196:
 2540              	.LBE479:
 2541              	.LBE478:
 2542              	.LBB480:
 2543              	.LBB481:
 2544              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/cceGX4yx.s 			page 240


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cceGX4yx.s 			page 241


  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 242


 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 243


 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
ARM GAS  /tmp/cceGX4yx.s 			page 244


 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 245


 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cceGX4yx.s 			page 246


 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  /tmp/cceGX4yx.s 			page 247


 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cceGX4yx.s 			page 248


 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 249


 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
ARM GAS  /tmp/cceGX4yx.s 			page 250


 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
ARM GAS  /tmp/cceGX4yx.s 			page 251


 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 252


 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  /tmp/cceGX4yx.s 			page 253


 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  /tmp/cceGX4yx.s 			page 254


 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
ARM GAS  /tmp/cceGX4yx.s 			page 255


 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
ARM GAS  /tmp/cceGX4yx.s 			page 256


 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 257


 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
ARM GAS  /tmp/cceGX4yx.s 			page 258


1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2545              		.loc 3 1055 0 discriminator 2
 2546              		.syntax unified
 2547              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2548 0248 92FAA2F2 		rbit r2, r2
 2549              	@ 0 "" 2
 2550              	.LVL229:
 2551              		.thumb
 2552              		.syntax unified
 2553              	.LBE481:
 2554              	.LBE480:
 2555              	.LBB482:
 2556              	.LBB483:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
ARM GAS  /tmp/cceGX4yx.s 			page 259


1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 2557              		.loc 3 1089 0 discriminator 2
 2558 024c 12B1     		cbz	r2, .L248
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 2559              		.loc 3 1093 0
 2560 024e B2FA82F2 		clz	r2, r2
 2561 0252 CAE7     		b	.L197
 2562              	.L248:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2563              		.loc 3 1091 0
 2564 0254 2022     		movs	r2, #32
 2565 0256 C8E7     		b	.L197
 2566              	.L278:
 2567              	.LVL230:
 2568              	.LBE483:
 2569              	.LBE482:
 2570              	.LBB484:
 2571              	.LBB485:
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2572              		.loc 2 3367 0
 2573 0258 226E     		ldr	r2, [r4, #96]
 2574 025a 22F00042 		bic	r2, r2, #-2147483648
 2575 025e 2266     		str	r2, [r4, #96]
 2576 0260 C5E7     		b	.L199
 2577              	.LVL231:
 2578              	.L200:
 2579              	.LBE485:
 2580              	.LBE484:
 2581              	.LBB486:
 2582              	.LBB487:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2583              		.loc 3 1055 0 discriminator 2
 2584              		.syntax unified
 2585              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2586 0262 92FAA2F2 		rbit r2, r2
 2587              	@ 0 "" 2
 2588              	.LVL232:
 2589              		.thumb
 2590              		.syntax unified
 2591              	.LBE487:
 2592              	.LBE486:
 2593              	.LBB488:
 2594              	.LBB489:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2595              		.loc 3 1089 0 discriminator 2
 2596 0266 12B1     		cbz	r2, .L249
ARM GAS  /tmp/cceGX4yx.s 			page 260


 2597              		.loc 3 1093 0
 2598 0268 B2FA82F2 		clz	r2, r2
 2599 026c CAE7     		b	.L201
 2600              	.L249:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2601              		.loc 3 1091 0
 2602 026e 2022     		movs	r2, #32
 2603 0270 C8E7     		b	.L201
 2604              	.L279:
 2605              	.LVL233:
 2606              	.LBE489:
 2607              	.LBE488:
 2608              	.LBB490:
 2609              	.LBB491:
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2610              		.loc 2 3367 0
 2611 0272 626E     		ldr	r2, [r4, #100]
 2612 0274 22F00042 		bic	r2, r2, #-2147483648
 2613 0278 6266     		str	r2, [r4, #100]
 2614 027a C5E7     		b	.L203
 2615              	.LVL234:
 2616              	.L204:
 2617              	.LBE491:
 2618              	.LBE490:
 2619              	.LBB492:
 2620              	.LBB493:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2621              		.loc 3 1055 0 discriminator 2
 2622              		.syntax unified
 2623              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2624 027c 92FAA2F2 		rbit r2, r2
 2625              	@ 0 "" 2
 2626              	.LVL235:
 2627              		.thumb
 2628              		.syntax unified
 2629              	.LBE493:
 2630              	.LBE492:
 2631              	.LBB494:
 2632              	.LBB495:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2633              		.loc 3 1089 0 discriminator 2
 2634 0280 12B1     		cbz	r2, .L250
 2635              		.loc 3 1093 0
 2636 0282 B2FA82F2 		clz	r2, r2
 2637 0286 CAE7     		b	.L205
 2638              	.L250:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2639              		.loc 3 1091 0
 2640 0288 2022     		movs	r2, #32
 2641 028a C8E7     		b	.L205
 2642              	.L280:
 2643              	.LVL236:
 2644              	.LBE495:
 2645              	.LBE494:
 2646              	.LBB496:
 2647              	.LBB497:
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
ARM GAS  /tmp/cceGX4yx.s 			page 261


 2648              		.loc 2 3367 0
 2649 028c A26E     		ldr	r2, [r4, #104]
 2650 028e 22F00042 		bic	r2, r2, #-2147483648
 2651 0292 A266     		str	r2, [r4, #104]
 2652 0294 C5E7     		b	.L207
 2653              	.LVL237:
 2654              	.L208:
 2655              	.LBE497:
 2656              	.LBE496:
 2657              	.LBB498:
 2658              	.LBB499:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2659              		.loc 3 1055 0 discriminator 2
 2660              		.syntax unified
 2661              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2662 0296 92FAA2F2 		rbit r2, r2
 2663              	@ 0 "" 2
 2664              	.LVL238:
 2665              		.thumb
 2666              		.syntax unified
 2667              	.LBE499:
 2668              	.LBE498:
 2669              	.LBB500:
 2670              	.LBB501:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2671              		.loc 3 1089 0 discriminator 2
 2672 029a 12B1     		cbz	r2, .L251
 2673              		.loc 3 1093 0
 2674 029c B2FA82F2 		clz	r2, r2
 2675 02a0 CAE7     		b	.L209
 2676              	.L251:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2677              		.loc 3 1091 0
 2678 02a2 2022     		movs	r2, #32
 2679 02a4 C8E7     		b	.L209
 2680              	.L274:
 2681              	.LBE501:
 2682              	.LBE500:
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2683              		.loc 1 2895 0
 2684 02a6 1D68     		ldr	r5, [r3]
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2685              		.loc 1 2896 0
 2686 02a8 0A68     		ldr	r2, [r1]
 2687 02aa C2F31206 		ubfx	r6, r2, #0, #19
 2688 02ae 002E     		cmp	r6, #0
 2689 02b0 35D1     		bne	.L212
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2690              		.loc 1 2896 0 is_stmt 0 discriminator 1
 2691 02b2 900E     		lsrs	r0, r2, #26
 2692 02b4 0130     		adds	r0, r0, #1
 2693 02b6 00F01F00 		and	r0, r0, #31
 2694 02ba 0928     		cmp	r0, #9
 2695 02bc 8CBF     		ite	hi
 2696 02be 0020     		movhi	r0, #0
 2697 02c0 0120     		movls	r0, #1
 2698              	.L213:
ARM GAS  /tmp/cceGX4yx.s 			page 262


2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2699              		.loc 1 2895 0 is_stmt 1
 2700 02c2 0028     		cmp	r0, #0
 2701 02c4 76D0     		beq	.L215
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2702              		.loc 1 2896 0
 2703 02c6 002E     		cmp	r6, #0
 2704 02c8 38D1     		bne	.L216
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2705              		.loc 1 2896 0 is_stmt 0 discriminator 3
 2706 02ca 940E     		lsrs	r4, r2, #26
 2707 02cc 0134     		adds	r4, r4, #1
 2708 02ce A406     		lsls	r4, r4, #26
 2709 02d0 04F0F844 		and	r4, r4, #2080374784
 2710              	.L217:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2711              		.loc 1 2896 0 discriminator 6
 2712 02d4 002E     		cmp	r6, #0
 2713 02d6 3DD1     		bne	.L219
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2714              		.loc 1 2896 0 discriminator 7
 2715 02d8 900E     		lsrs	r0, r2, #26
 2716 02da 0130     		adds	r0, r0, #1
 2717 02dc 00F01F07 		and	r7, r0, #31
 2718 02e0 0120     		movs	r0, #1
 2719 02e2 B840     		lsls	r0, r0, r7
 2720              	.L220:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2721              		.loc 1 2896 0 discriminator 10
 2722 02e4 0443     		orrs	r4, r4, r0
 2723 02e6 002E     		cmp	r6, #0
 2724 02e8 42D1     		bne	.L222
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2725              		.loc 1 2896 0 discriminator 11
 2726 02ea 920E     		lsrs	r2, r2, #26
 2727 02ec 0132     		adds	r2, r2, #1
 2728 02ee 02F01F02 		and	r2, r2, #31
 2729 02f2 02EB4202 		add	r2, r2, r2, lsl #1
 2730 02f6 1205     		lsls	r2, r2, #20
 2731              	.L223:
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2732              		.loc 1 2895 0 is_stmt 1
 2733 02f8 2243     		orrs	r2, r2, r4
 2734              	.L225:
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2735              		.loc 1 2895 0 is_stmt 0 discriminator 1
 2736 02fa 8C68     		ldr	r4, [r1, #8]
 2737              	.LVL239:
 2738              	.LBB502:
 2739              	.LBB503:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2740              		.loc 2 5337 0 is_stmt 1 discriminator 1
 2741 02fc 1435     		adds	r5, r5, #20
 2742              	.LVL240:
 2743 02fe 500E     		lsrs	r0, r2, #25
 2744 0300 8000     		lsls	r0, r0, #2
 2745 0302 00F00400 		and	r0, r0, #4
ARM GAS  /tmp/cceGX4yx.s 			page 263


 2746              	.LVL241:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2747              		.loc 2 5339 0 discriminator 1
 2748 0306 2E58     		ldr	r6, [r5, r0]
 2749 0308 C2F30452 		ubfx	r2, r2, #20, #5
 2750              	.LVL242:
 2751 030c 0727     		movs	r7, #7
 2752 030e 9740     		lsls	r7, r7, r2
 2753 0310 26EA0706 		bic	r6, r6, r7
 2754 0314 04FA02F2 		lsl	r2, r4, r2
 2755 0318 3243     		orrs	r2, r2, r6
 2756 031a 2A50     		str	r2, [r5, r0]
 2757              	.LVL243:
 2758 031c 1BE7     		b	.L211
 2759              	.LVL244:
 2760              	.L212:
 2761              	.LBE503:
 2762              	.LBE502:
 2763              	.LBB504:
 2764              	.LBB505:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2765              		.loc 3 1055 0 discriminator 2
 2766              		.syntax unified
 2767              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2768 031e 92FAA2F0 		rbit r0, r2
 2769              	@ 0 "" 2
 2770              	.LVL245:
 2771              		.thumb
 2772              		.syntax unified
 2773              	.LBE505:
 2774              	.LBE504:
 2775              	.LBB506:
 2776              	.LBB507:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2777              		.loc 3 1089 0 discriminator 2
 2778 0322 48B1     		cbz	r0, .L252
 2779              		.loc 3 1093 0
 2780 0324 B0FA80F0 		clz	r0, r0
 2781              	.L214:
 2782              	.LBE507:
 2783              	.LBE506:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2784              		.loc 1 2896 0
 2785 0328 0130     		adds	r0, r0, #1
 2786 032a 00F01F00 		and	r0, r0, #31
 2787 032e 0928     		cmp	r0, #9
 2788 0330 8CBF     		ite	hi
 2789 0332 0020     		movhi	r0, #0
 2790 0334 0120     		movls	r0, #1
 2791 0336 C4E7     		b	.L213
 2792              	.L252:
 2793              	.LBB509:
 2794              	.LBB508:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2795              		.loc 3 1091 0
 2796 0338 2020     		movs	r0, #32
 2797 033a F5E7     		b	.L214
ARM GAS  /tmp/cceGX4yx.s 			page 264


 2798              	.L216:
 2799              	.LVL246:
 2800              	.LBE508:
 2801              	.LBE509:
 2802              	.LBB510:
 2803              	.LBB511:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2804              		.loc 3 1055 0 discriminator 4
 2805              		.syntax unified
 2806              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2807 033c 92FAA2F4 		rbit r4, r2
 2808              	@ 0 "" 2
 2809              	.LVL247:
 2810              		.thumb
 2811              		.syntax unified
 2812              	.LBE511:
 2813              	.LBE510:
 2814              	.LBB512:
 2815              	.LBB513:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2816              		.loc 3 1089 0 discriminator 4
 2817 0340 14B1     		cbz	r4, .L253
 2818              		.loc 3 1093 0
 2819 0342 B4FA84F4 		clz	r4, r4
 2820 0346 00E0     		b	.L218
 2821              	.L253:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2822              		.loc 3 1091 0
 2823 0348 2024     		movs	r4, #32
 2824              	.L218:
 2825              	.LBE513:
 2826              	.LBE512:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2827              		.loc 1 2896 0
 2828 034a 0134     		adds	r4, r4, #1
 2829 034c A406     		lsls	r4, r4, #26
 2830 034e 04F0F844 		and	r4, r4, #2080374784
 2831 0352 BFE7     		b	.L217
 2832              	.L219:
 2833              	.LVL248:
 2834              	.LBB514:
 2835              	.LBB515:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2836              		.loc 3 1055 0 discriminator 8
 2837              		.syntax unified
 2838              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2839 0354 92FAA2F0 		rbit r0, r2
 2840              	@ 0 "" 2
 2841              	.LVL249:
 2842              		.thumb
 2843              		.syntax unified
 2844              	.LBE515:
 2845              	.LBE514:
 2846              	.LBB516:
 2847              	.LBB517:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2848              		.loc 3 1089 0 discriminator 8
ARM GAS  /tmp/cceGX4yx.s 			page 265


 2849 0358 10B1     		cbz	r0, .L254
 2850              		.loc 3 1093 0
 2851 035a B0FA80F0 		clz	r0, r0
 2852 035e 00E0     		b	.L221
 2853              	.L254:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2854              		.loc 3 1091 0
 2855 0360 2020     		movs	r0, #32
 2856              	.L221:
 2857              	.LBE517:
 2858              	.LBE516:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2859              		.loc 1 2896 0
 2860 0362 0130     		adds	r0, r0, #1
 2861 0364 00F01F00 		and	r0, r0, #31
 2862 0368 0127     		movs	r7, #1
 2863 036a 07FA00F0 		lsl	r0, r7, r0
 2864 036e B9E7     		b	.L220
 2865              	.L222:
 2866              	.LVL250:
 2867              	.LBB518:
 2868              	.LBB519:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2869              		.loc 3 1055 0 discriminator 12
 2870              		.syntax unified
 2871              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2872 0370 92FAA2F2 		rbit r2, r2
 2873              	@ 0 "" 2
 2874              	.LVL251:
 2875              		.thumb
 2876              		.syntax unified
 2877              	.LBE519:
 2878              	.LBE518:
 2879              	.LBB520:
 2880              	.LBB521:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2881              		.loc 3 1089 0 discriminator 12
 2882 0374 12B1     		cbz	r2, .L255
 2883              		.loc 3 1093 0
 2884 0376 B2FA82F2 		clz	r2, r2
 2885 037a 00E0     		b	.L224
 2886              	.L255:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2887              		.loc 3 1091 0
 2888 037c 2022     		movs	r2, #32
 2889              	.L224:
 2890              	.LBE521:
 2891              	.LBE520:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2892              		.loc 1 2896 0
 2893 037e 0132     		adds	r2, r2, #1
 2894 0380 02F01F02 		and	r2, r2, #31
 2895 0384 02EB4202 		add	r2, r2, r2, lsl #1
 2896 0388 1205     		lsls	r2, r2, #20
 2897 038a B5E7     		b	.L223
 2898              	.L285:
 2899              		.align	2
ARM GAS  /tmp/cceGX4yx.s 			page 266


 2900              	.L284:
 2901 038c 00F0FF03 		.word	67104768
 2902 0390 FFFF0700 		.word	524287
 2903 0394 00007F40 		.word	1082064896
 2904 0398 00000880 		.word	-2146959360
 2905 039c 00010050 		.word	1342177536
 2906 03a0 00070050 		.word	1342179072
 2907 03a4 000021C3 		.word	-1021247488
 2908 03a8 1000C090 		.word	-1866465264
 2909 03ac 000052C7 		.word	-950927360
 2910 03b0 000084CB 		.word	-880541696
 2911              	.L215:
 2912 03b4 CEB9     		cbnz	r6, .L226
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2913              		.loc 1 2896 0 is_stmt 0 discriminator 13
 2914 03b6 940E     		lsrs	r4, r2, #26
 2915 03b8 0134     		adds	r4, r4, #1
 2916 03ba A406     		lsls	r4, r4, #26
 2917 03bc 04F0F844 		and	r4, r4, #2080374784
 2918              	.L227:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2919              		.loc 1 2896 0 discriminator 16
 2920 03c0 FEB9     		cbnz	r6, .L229
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2921              		.loc 1 2896 0 discriminator 17
 2922 03c2 900E     		lsrs	r0, r2, #26
 2923 03c4 0130     		adds	r0, r0, #1
 2924 03c6 00F01F07 		and	r7, r0, #31
 2925 03ca 0120     		movs	r0, #1
 2926 03cc B840     		lsls	r0, r0, r7
 2927              	.L230:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2928              		.loc 1 2896 0 discriminator 20
 2929 03ce 0443     		orrs	r4, r4, r0
 2930 03d0 2EBB     		cbnz	r6, .L232
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2931              		.loc 1 2896 0 discriminator 21
 2932 03d2 900E     		lsrs	r0, r2, #26
 2933 03d4 0130     		adds	r0, r0, #1
 2934 03d6 00F01F00 		and	r0, r0, #31
 2935 03da 00EB4002 		add	r2, r0, r0, lsl #1
 2936 03de 1E3A     		subs	r2, r2, #30
 2937 03e0 1205     		lsls	r2, r2, #20
 2938 03e2 42F00072 		orr	r2, r2, #33554432
 2939              	.L233:
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2940              		.loc 1 2895 0 is_stmt 1 discriminator 2
 2941 03e6 2243     		orrs	r2, r2, r4
 2942 03e8 87E7     		b	.L225
 2943              	.L226:
 2944              	.LVL252:
 2945              	.LBB522:
 2946              	.LBB523:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2947              		.loc 3 1055 0 discriminator 14
 2948              		.syntax unified
 2949              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cceGX4yx.s 			page 267


 2950 03ea 92FAA2F4 		rbit r4, r2
 2951              	@ 0 "" 2
 2952              	.LVL253:
 2953              		.thumb
 2954              		.syntax unified
 2955              	.LBE523:
 2956              	.LBE522:
 2957              	.LBB524:
 2958              	.LBB525:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2959              		.loc 3 1089 0 discriminator 14
 2960 03ee 14B1     		cbz	r4, .L256
 2961              		.loc 3 1093 0
 2962 03f0 B4FA84F4 		clz	r4, r4
 2963 03f4 00E0     		b	.L228
 2964              	.L256:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2965              		.loc 3 1091 0
 2966 03f6 2024     		movs	r4, #32
 2967              	.L228:
 2968              	.LBE525:
 2969              	.LBE524:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2970              		.loc 1 2896 0
 2971 03f8 0134     		adds	r4, r4, #1
 2972 03fa A406     		lsls	r4, r4, #26
 2973 03fc 04F0F844 		and	r4, r4, #2080374784
 2974 0400 DEE7     		b	.L227
 2975              	.L229:
 2976              	.LVL254:
 2977              	.LBB526:
 2978              	.LBB527:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2979              		.loc 3 1055 0 discriminator 18
 2980              		.syntax unified
 2981              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2982 0402 92FAA2F0 		rbit r0, r2
 2983              	@ 0 "" 2
 2984              	.LVL255:
 2985              		.thumb
 2986              		.syntax unified
 2987              	.LBE527:
 2988              	.LBE526:
 2989              	.LBB528:
 2990              	.LBB529:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2991              		.loc 3 1089 0 discriminator 18
 2992 0406 10B1     		cbz	r0, .L257
 2993              		.loc 3 1093 0
 2994 0408 B0FA80F0 		clz	r0, r0
 2995 040c 00E0     		b	.L231
 2996              	.L257:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2997              		.loc 3 1091 0
 2998 040e 2020     		movs	r0, #32
 2999              	.L231:
 3000              	.LBE529:
ARM GAS  /tmp/cceGX4yx.s 			page 268


 3001              	.LBE528:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3002              		.loc 1 2896 0
 3003 0410 0130     		adds	r0, r0, #1
 3004 0412 00F01F00 		and	r0, r0, #31
 3005 0416 0127     		movs	r7, #1
 3006 0418 07FA00F0 		lsl	r0, r7, r0
 3007 041c D7E7     		b	.L230
 3008              	.L232:
 3009              	.LVL256:
 3010              	.LBB530:
 3011              	.LBB531:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3012              		.loc 3 1055 0 discriminator 22
 3013              		.syntax unified
 3014              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3015 041e 92FAA2F2 		rbit r2, r2
 3016              	@ 0 "" 2
 3017              	.LVL257:
 3018              		.thumb
 3019              		.syntax unified
 3020              	.LBE531:
 3021              	.LBE530:
 3022              	.LBB532:
 3023              	.LBB533:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3024              		.loc 3 1089 0 discriminator 22
 3025 0422 12B1     		cbz	r2, .L258
 3026              		.loc 3 1093 0
 3027 0424 B2FA82F0 		clz	r0, r2
 3028 0428 00E0     		b	.L234
 3029              	.L258:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3030              		.loc 3 1091 0
 3031 042a 2020     		movs	r0, #32
 3032              	.L234:
 3033              	.LBE533:
 3034              	.LBE532:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3035              		.loc 1 2896 0
 3036 042c 0130     		adds	r0, r0, #1
 3037 042e 00F01F00 		and	r0, r0, #31
 3038 0432 00EB4002 		add	r2, r0, r0, lsl #1
 3039 0436 1E3A     		subs	r2, r2, #30
 3040 0438 1205     		lsls	r2, r2, #20
 3041 043a 42F00072 		orr	r2, r2, #33554432
 3042 043e D2E7     		b	.L233
 3043              	.LVL258:
 3044              	.L275:
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3045              		.loc 1 2910 0
 3046 0440 00F50070 		add	r0, r0, #512
 3047 0444 96E6     		b	.L235
 3048              	.L260:
 3049 0446 3548     		ldr	r0, .L286
 3050 0448 94E6     		b	.L235
 3051              	.L236:
ARM GAS  /tmp/cceGX4yx.s 			page 269


2915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3052              		.loc 1 2915 0
 3053 044a 10F4000F 		tst	r0, #8388608
 3054 044e 7FF49CAE 		bne	.L237
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3055              		.loc 1 2917 0
 3056 0452 B1F1A04F 		cmp	r1, #1342177280
 3057 0456 04D0     		beq	.L238
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3058              		.loc 1 2917 0 is_stmt 0 discriminator 1
 3059 0458 314A     		ldr	r2, .L286+4
 3060 045a 9142     		cmp	r1, r2
 3061 045c 01D0     		beq	.L238
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3062              		.loc 1 2767 0 is_stmt 1
 3063 045e 0020     		movs	r0, #0
 3064 0460 E5E5     		b	.L188
 3065              	.L238:
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3066              		.loc 1 2919 0
 3067 0462 B1F1A04F 		cmp	r1, #1342177280
 3068 0466 19D0     		beq	.L263
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3069              		.loc 1 2919 0 is_stmt 0 discriminator 2
 3070 0468 2E4A     		ldr	r2, .L286+8
 3071 046a 9142     		cmp	r1, r2
 3072 046c 14D0     		beq	.L281
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3073              		.loc 1 2919 0
 3074 046e 2E49     		ldr	r1, .L286+12
 3075              	.L239:
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3076              		.loc 1 2919 0 discriminator 6
 3077 0470 44F40004 		orr	r4, r4, #8388608
 3078              	.LVL259:
 3079              	.LBB534:
 3080              	.LBB535:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3081              		.loc 2 2799 0 is_stmt 1 discriminator 6
 3082 0474 8A68     		ldr	r2, [r1, #8]
 3083 0476 22F0E072 		bic	r2, r2, #29360128
 3084 047a 1443     		orrs	r4, r4, r2
 3085              	.LVL260:
 3086 047c 8C60     		str	r4, [r1, #8]
 3087              	.LVL261:
 3088              	.LBE535:
 3089              	.LBE534:
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3090              		.loc 1 2927 0 discriminator 6
 3091 047e 2B4A     		ldr	r2, .L286+16
 3092 0480 1268     		ldr	r2, [r2]
 3093 0482 9209     		lsrs	r2, r2, #6
 3094 0484 2A49     		ldr	r1, .L286+20
 3095 0486 A1FB0212 		umull	r1, r2, r1, r2
 3096 048a 9209     		lsrs	r2, r2, #6
 3097 048c 0132     		adds	r2, r2, #1
 3098 048e 02EB4202 		add	r2, r2, r2, lsl #1
ARM GAS  /tmp/cceGX4yx.s 			page 270


 3099 0492 9100     		lsls	r1, r2, #2
 3100 0494 0191     		str	r1, [sp, #4]
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 3101              		.loc 1 2928 0 discriminator 6
 3102 0496 06E0     		b	.L240
 3103              	.L281:
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3104              		.loc 1 2919 0
 3105 0498 2049     		ldr	r1, .L286
 3106 049a E9E7     		b	.L239
 3107              	.L263:
 3108 049c 1F49     		ldr	r1, .L286
 3109 049e E7E7     		b	.L239
 3110              	.L241:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3111              		.loc 1 2930 0
 3112 04a0 019A     		ldr	r2, [sp, #4]
 3113 04a2 013A     		subs	r2, r2, #1
 3114 04a4 0192     		str	r2, [sp, #4]
 3115              	.L240:
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 3116              		.loc 1 2928 0
 3117 04a6 019A     		ldr	r2, [sp, #4]
 3118 04a8 002A     		cmp	r2, #0
 3119 04aa F9D1     		bne	.L241
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3120              		.loc 1 2767 0
 3121 04ac 0020     		movs	r0, #0
 3122 04ae BEE5     		b	.L188
 3123              	.L276:
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3124              		.loc 1 2934 0 discriminator 1
 3125 04b0 10F0807F 		tst	r0, #16777216
 3126 04b4 7FF46DAE 		bne	.L242
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3127              		.loc 1 2938 0
 3128 04b8 B1F1A04F 		cmp	r1, #1342177280
 3129 04bc 0ED0     		beq	.L265
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3130              		.loc 1 2938 0 is_stmt 0 discriminator 2
 3131 04be 194A     		ldr	r2, .L286+8
 3132 04c0 9142     		cmp	r1, r2
 3133 04c2 09D0     		beq	.L282
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3134              		.loc 1 2938 0
 3135 04c4 1849     		ldr	r1, .L286+12
 3136              	.L243:
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3137              		.loc 1 2938 0 discriminator 6
 3138 04c6 44F08074 		orr	r4, r4, #16777216
 3139              	.LVL262:
 3140              	.LBB536:
 3141              	.LBB537:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3142              		.loc 2 2799 0 is_stmt 1 discriminator 6
 3143 04ca 8A68     		ldr	r2, [r1, #8]
 3144 04cc 22F0E072 		bic	r2, r2, #29360128
ARM GAS  /tmp/cceGX4yx.s 			page 271


 3145 04d0 1443     		orrs	r4, r4, r2
 3146              	.LVL263:
 3147 04d2 8C60     		str	r4, [r1, #8]
 3148              	.LBE537:
 3149              	.LBE536:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3150              		.loc 1 2767 0 discriminator 6
 3151 04d4 0020     		movs	r0, #0
 3152              	.LVL264:
 3153 04d6 AAE5     		b	.L188
 3154              	.LVL265:
 3155              	.L282:
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3156              		.loc 1 2938 0
 3157 04d8 1049     		ldr	r1, .L286
 3158 04da F4E7     		b	.L243
 3159              	.L265:
 3160 04dc 0F49     		ldr	r1, .L286
 3161 04de F2E7     		b	.L243
 3162              	.L277:
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3163              		.loc 1 2943 0
 3164 04e0 10F4800F 		tst	r0, #4194304
 3165 04e4 13D1     		bne	.L268
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3166              		.loc 1 2945 0
 3167 04e6 0F4A     		ldr	r2, .L286+8
 3168 04e8 9142     		cmp	r1, r2
 3169 04ea 12D0     		beq	.L269
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 3170              		.loc 1 2947 0
 3171 04ec B1F1A04F 		cmp	r1, #1342177280
 3172 04f0 09D0     		beq	.L283
 3173 04f2 0D48     		ldr	r0, .L286+12
 3174              	.L244:
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 3175              		.loc 1 2947 0 is_stmt 0 discriminator 6
 3176 04f4 44F48002 		orr	r2, r4, #4194304
 3177              	.LVL266:
 3178              	.LBB538:
 3179              	.LBB539:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3180              		.loc 2 2799 0 is_stmt 1 discriminator 6
 3181 04f8 8168     		ldr	r1, [r0, #8]
 3182 04fa 21F0E071 		bic	r1, r1, #29360128
 3183 04fe 0A43     		orrs	r2, r2, r1
 3184              	.LVL267:
 3185 0500 8260     		str	r2, [r0, #8]
 3186              	.LBE539:
 3187              	.LBE538:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3188              		.loc 1 2767 0 discriminator 6
 3189 0502 0020     		movs	r0, #0
 3190              	.LVL268:
 3191 0504 93E5     		b	.L188
 3192              	.LVL269:
 3193              	.L283:
ARM GAS  /tmp/cceGX4yx.s 			page 272


2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 3194              		.loc 1 2947 0
 3195 0506 0548     		ldr	r0, .L286
 3196 0508 F4E7     		b	.L244
 3197              	.L259:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3198              		.loc 1 2767 0
 3199 050a 0020     		movs	r0, #0
 3200 050c 8FE5     		b	.L188
 3201              	.L268:
 3202 050e 0020     		movs	r0, #0
 3203 0510 8DE5     		b	.L188
 3204              	.L269:
 3205 0512 0020     		movs	r0, #0
 3206 0514 8BE5     		b	.L188
 3207              	.LVL270:
 3208              	.L245:
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3209              		.loc 1 2797 0
 3210 0516 0220     		movs	r0, #2
 3211              	.LVL271:
 3212 0518 8CE5     		b	.L186
 3213              	.L287:
 3214 051a 00BF     		.align	2
 3215              	.L286:
 3216 051c 00030050 		.word	1342178048
 3217 0520 00060050 		.word	1342178816
 3218 0524 00010050 		.word	1342177536
 3219 0528 00070050 		.word	1342179072
 3220 052c 00000000 		.word	SystemCoreClock
 3221 0530 632D3E05 		.word	87960931
 3222              		.cfi_endproc
 3223              	.LFE349:
 3225              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3226              		.align	1
 3227              		.global	HAL_ADC_AnalogWDGConfig
 3228              		.syntax unified
 3229              		.thumb
 3230              		.thumb_func
 3231              		.fpu fpv4-sp-d16
 3233              	HAL_ADC_AnalogWDGConfig:
 3234              	.LFB350:
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3235              		.loc 1 2999 0
 3236              		.cfi_startproc
 3237              		@ args = 0, pretend = 0, frame = 0
 3238              		@ frame_needed = 0, uses_anonymous_args = 0
 3239              		@ link register save eliminated.
 3240              	.LVL272:
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3241              		.loc 1 3037 0
 3242 0000 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 3243 0004 012B     		cmp	r3, #1
 3244 0006 00F09481 		beq	.L324
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3245              		.loc 1 2999 0 discriminator 2
 3246 000a F0B4     		push	{r4, r5, r6, r7}
ARM GAS  /tmp/cceGX4yx.s 			page 273


 3247              	.LCFI15:
 3248              		.cfi_def_cfa_offset 16
 3249              		.cfi_offset 4, -16
 3250              		.cfi_offset 5, -12
 3251              		.cfi_offset 6, -8
 3252              		.cfi_offset 7, -4
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3253              		.loc 1 3037 0 discriminator 2
 3254 000c 0123     		movs	r3, #1
 3255 000e 80F85830 		strb	r3, [r0, #88]
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3256              		.loc 1 3043 0 discriminator 2
 3257 0012 0368     		ldr	r3, [r0]
 3258              	.LVL273:
 3259              	.LBB540:
 3260              	.LBB541:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3261              		.loc 2 6846 0 discriminator 2
 3262 0014 9A68     		ldr	r2, [r3, #8]
 3263 0016 12F0040F 		tst	r2, #4
 3264 001a 36D0     		beq	.L325
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3265              		.loc 2 6846 0 is_stmt 0
 3266 001c 0122     		movs	r2, #1
 3267              	.L290:
 3268              	.LVL274:
 3269              	.LBE541:
 3270              	.LBE540:
 3271              	.LBB543:
 3272              	.LBB544:
 3273              		.loc 2 7071 0 is_stmt 1
 3274 001e 9C68     		ldr	r4, [r3, #8]
 3275 0020 14F0080F 		tst	r4, #8
 3276 0024 33D0     		beq	.L326
 3277 0026 0124     		movs	r4, #1
 3278              	.L291:
 3279              	.LVL275:
 3280              	.LBE544:
 3281              	.LBE543:
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3282              		.loc 1 3045 0
 3283 0028 002A     		cmp	r2, #0
 3284 002a 40F01581 		bne	.L292
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 3285              		.loc 1 3046 0
 3286 002e 002C     		cmp	r4, #0
 3287 0030 40F01281 		bne	.L292
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 3288              		.loc 1 3050 0
 3289 0034 0A68     		ldr	r2, [r1]
 3290 0036 BB4C     		ldr	r4, .L343
 3291 0038 A242     		cmp	r2, r4
 3292 003a 2AD0     		beq	.L333
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3293              		.loc 1 3116 0
 3294 003c 4C68     		ldr	r4, [r1, #4]
 3295 003e B4F1807F 		cmp	r4, #16777216
ARM GAS  /tmp/cceGX4yx.s 			page 274


 3296 0042 00F0DD80 		beq	.L305
 3297 0046 40F29D80 		bls	.L334
 3298 004a B4F1C07F 		cmp	r4, #25165824
 3299 004e 00F0D780 		beq	.L305
 3300 0052 B4F1E07F 		cmp	r4, #29360128
 3301 0056 00F09C80 		beq	.L307
 3302 005a B4F1A07F 		cmp	r4, #20971520
 3303 005e 00F09880 		beq	.L307
 3304              	.L304:
 3305              	.LVL276:
 3306              	.LBB546:
 3307              	.LBB547:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3308              		.loc 2 5724 0
 3309 0062 0C33     		adds	r3, r3, #12
 3310              	.LVL277:
 3311 0064 C2F30154 		ubfx	r4, r2, #20, #2
 3312 0068 02F00106 		and	r6, r2, #1
 3313 006c F500     		lsls	r5, r6, #3
 3314 006e 3544     		add	r5, r5, r6
 3315 0070 AE00     		lsls	r6, r5, #2
 3316 0072 3444     		add	r4, r4, r6
 3317              	.LVL278:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3318              		.loc 2 5727 0
 3319 0074 53F82450 		ldr	r5, [r3, r4, lsl #2]
 3320 0078 22F00242 		bic	r2, r2, #-2113929216
 3321              	.LVL279:
 3322 007c 22F46012 		bic	r2, r2, #3670016
 3323 0080 25EA0202 		bic	r2, r5, r2
 3324 0084 43F82420 		str	r2, [r3, r4, lsl #2]
 3325              	.LVL280:
 3326 0088 D2E0     		b	.L312
 3327              	.LVL281:
 3328              	.L325:
 3329              	.LBE547:
 3330              	.LBE546:
 3331              	.LBB548:
 3332              	.LBB542:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3333              		.loc 2 6846 0
 3334 008a 0022     		movs	r2, #0
 3335 008c C7E7     		b	.L290
 3336              	.LVL282:
 3337              	.L326:
 3338              	.LBE542:
 3339              	.LBE548:
 3340              	.LBB549:
 3341              	.LBB545:
 3342              		.loc 2 7071 0
 3343 008e 0024     		movs	r4, #0
 3344 0090 CAE7     		b	.L291
 3345              	.LVL283:
 3346              	.L333:
 3347              	.LBE545:
 3348              	.LBE549:
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
ARM GAS  /tmp/cceGX4yx.s 			page 275


 3349              		.loc 1 3055 0
 3350 0092 4A68     		ldr	r2, [r1, #4]
 3351 0094 B2F1807F 		cmp	r2, #16777216
 3352 0098 5CD0     		beq	.L295
 3353 009a 0FD9     		bls	.L335
 3354 009c B2F1C07F 		cmp	r2, #25165824
 3355 00a0 61D0     		beq	.L299
 3356 00a2 B2F1E07F 		cmp	r2, #29360128
 3357 00a6 3FD0     		beq	.L300
 3358 00a8 B2F1A07F 		cmp	r2, #20971520
 3359 00ac 2FD0     		beq	.L336
 3360              	.L294:
 3361              	.LVL284:
 3362              	.LBB550:
 3363              	.LBB551:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3364              		.loc 2 5727 0
 3365 00ae DA68     		ldr	r2, [r3, #12]
 3366 00b0 22F0FB42 		bic	r2, r2, #2105540608
 3367 00b4 22F48002 		bic	r2, r2, #4194304
 3368 00b8 DA60     		str	r2, [r3, #12]
 3369 00ba 11E0     		b	.L302
 3370              	.LVL285:
 3371              	.L335:
 3372              	.LBE551:
 3373              	.LBE550:
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3374              		.loc 1 3055 0
 3375 00bc B2F5000F 		cmp	r2, #8388608
 3376 00c0 3FD0     		beq	.L297
 3377 00c2 B2F5400F 		cmp	r2, #12582912
 3378 00c6 F2D1     		bne	.L294
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3379              		.loc 1 3058 0
 3380 00c8 8C68     		ldr	r4, [r1, #8]
 3381              	.LVL286:
 3382              	.LBB552:
 3383              	.LBB553:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3384              		.loc 2 5727 0
 3385 00ca DA68     		ldr	r2, [r3, #12]
 3386 00cc 22F0FB42 		bic	r2, r2, #2105540608
 3387 00d0 22F48002 		bic	r2, r2, #4194304
 3388 00d4 04F0F844 		and	r4, r4, #2080374784
 3389              	.LVL287:
 3390 00d8 44F44004 		orr	r4, r4, #12582912
 3391 00dc 2243     		orrs	r2, r2, r4
 3392 00de DA60     		str	r2, [r3, #12]
 3393              	.LVL288:
 3394              	.L302:
 3395              	.LBE553:
 3396              	.LBE552:
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_TR1_AWDFILT,
 3397              		.loc 1 3090 0
 3398 00e0 0268     		ldr	r2, [r0]
 3399 00e2 136A     		ldr	r3, [r2, #32]
 3400 00e4 23F4E043 		bic	r3, r3, #28672
ARM GAS  /tmp/cceGX4yx.s 			page 276


 3401 00e8 8C69     		ldr	r4, [r1, #24]
 3402 00ea 2343     		orrs	r3, r3, r4
 3403 00ec 1362     		str	r3, [r2, #32]
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3404              		.loc 1 3095 0
 3405 00ee C36D     		ldr	r3, [r0, #92]
 3406 00f0 23F48033 		bic	r3, r3, #65536
 3407 00f4 C365     		str	r3, [r0, #92]
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3408              		.loc 1 3101 0
 3409 00f6 0368     		ldr	r3, [r0]
 3410              	.LVL289:
 3411              	.LBB554:
 3412              	.LBB555:
7072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
7076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
7077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
7079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(ADC_TypeDef *ADCx)
7081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
7083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with feature oversampling).
7090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
7091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
7092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
7093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
7094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
7103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
7107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 12 bits.
7114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
ARM GAS  /tmp/cceGX4yx.s 			page 277


7115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
7118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
7119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
7120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
7121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
7130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 10 bits.
7141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
7145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
7146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
7147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
7148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef *ADCx, uint32_t Rank)
7157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 8 bits.
7168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
ARM GAS  /tmp/cceGX4yx.s 			page 278


7172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
7173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
7174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
7175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef *ADCx, uint32_t Rank)
7184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   );
7190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 6 bits.
7195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
7199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
7200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
7201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
7202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(ADC_TypeDef *ADCx, uint32_t Rank)
7211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   );
7217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
7224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC ready.
ARM GAS  /tmp/cceGX4yx.s 			page 279


7229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
7233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
7237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
7239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
7243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
7244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
7248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
7250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
7254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
7255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
7259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
7261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
7265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
7266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
7270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
7272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
7276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
7277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
7281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
7283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/cceGX4yx.s 			page 280


7286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
7287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
7288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(ADC_TypeDef *ADCx)
7292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
7294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
7298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
7299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
7303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
7305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
7309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
7310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(ADC_TypeDef *ADCx)
7314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
7316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
7320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
7321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
7325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
7327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
7331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
7332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
7336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
7338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
7342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
ARM GAS  /tmp/cceGX4yx.s 			page 281


7343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
7347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
7349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
7353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
7357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
7361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
7363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
7367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
7368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
7372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
7374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
7378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
7379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
7383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
7385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
7389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
7390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
7394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
7396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
ARM GAS  /tmp/cceGX4yx.s 			page 282


7400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
7401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
7405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
7407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
7411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
7412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
7416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
7418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
7422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
7423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
7427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
7429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
7433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
7434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
7438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
7440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
7444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
7445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
7449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 3413              		.loc 2 7450 0
 3414 00f8 8022     		movs	r2, #128
 3415 00fa 1A60     		str	r2, [r3]
 3416              	.LVL290:
 3417              	.LBE555:
 3418              	.LBE554:
ARM GAS  /tmp/cceGX4yx.s 			page 283


3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3419              		.loc 1 3104 0
 3420 00fc 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
 3421 00fe 012B     		cmp	r3, #1
 3422 0100 3AD0     		beq	.L337
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 3423              		.loc 1 3110 0
 3424 0102 0268     		ldr	r2, [r0]
 3425              	.LVL291:
 3426              	.LBB556:
 3427              	.LBB557:
7451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
7455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
7456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
7460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
7462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
7466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
7467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
7471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
7473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
7478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
7479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
7484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
7486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
7490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
7491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
7496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/cceGX4yx.s 			page 284


7497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
7498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
7502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
7503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
7508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
7514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
7515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
7520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
7526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
7527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
7532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
7534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
7538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
7539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
7544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
7546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
7550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
7551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/cceGX4yx.s 			page 285


7554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
7556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
7558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
7562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
7563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
7568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
7570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
7574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
7575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
7580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
7582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
7586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
7587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
7592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
7594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
7598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
7599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
7604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
7606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
7610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
ARM GAS  /tmp/cceGX4yx.s 			page 286


7611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
7616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
7618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
7622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
7623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
7628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
7630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
7634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
7635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
7640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
7642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
7646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
7647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
7652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
7654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
7658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
7659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
7664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
7666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 287


7668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
7670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
7671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
7676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
7678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
7682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
7683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
7688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
7690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
7694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
7695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
7700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
7702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
7706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
7707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
7712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
7714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
7718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
7719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/cceGX4yx.s 			page 288


7725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
7726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
7730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
7731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
7738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC ready.
7751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cceGX4yx.s 			page 289


7782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
ARM GAS  /tmp/cceGX4yx.s 			page 290


7839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
7846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
7862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
7868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/cceGX4yx.s 			page 291


7896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
7932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
7938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
7939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
7943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
7949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
7950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/cceGX4yx.s 			page 292


7953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
7954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
7960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
7961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
7965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 3428              		.loc 2 7966 0
 3429 0104 5368     		ldr	r3, [r2, #4]
 3430 0106 23F08003 		bic	r3, r3, #128
 3431 010a 5360     		str	r3, [r2, #4]
 3432 010c A4E0     		b	.L292
 3433              	.LVL292:
 3434              	.L336:
 3435              	.LBE557:
 3436              	.LBE556:
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3437              		.loc 1 3063 0
 3438 010e 8C68     		ldr	r4, [r1, #8]
 3439              	.LVL293:
 3440              	.LBB558:
 3441              	.LBB559:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3442              		.loc 2 5727 0
 3443 0110 DA68     		ldr	r2, [r3, #12]
 3444 0112 22F0FB42 		bic	r2, r2, #2105540608
 3445 0116 22F48002 		bic	r2, r2, #4194304
 3446 011a 04F0F844 		and	r4, r4, #2080374784
 3447              	.LVL294:
 3448 011e 44F0A074 		orr	r4, r4, #20971520
 3449 0122 2243     		orrs	r2, r2, r4
 3450 0124 DA60     		str	r2, [r3, #12]
 3451              	.LVL295:
 3452 0126 DBE7     		b	.L302
 3453              	.LVL296:
 3454              	.L300:
 3455              	.LBE559:
 3456              	.LBE558:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3457              		.loc 1 3068 0
 3458 0128 8C68     		ldr	r4, [r1, #8]
 3459              	.LVL297:
 3460              	.LBB560:
 3461              	.LBB561:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3462              		.loc 2 5727 0
 3463 012a DA68     		ldr	r2, [r3, #12]
 3464 012c 22F0FB42 		bic	r2, r2, #2105540608
 3465 0130 22F48002 		bic	r2, r2, #4194304
 3466 0134 04F0F844 		and	r4, r4, #2080374784
ARM GAS  /tmp/cceGX4yx.s 			page 293


 3467              	.LVL298:
 3468 0138 44F0E074 		orr	r4, r4, #29360128
 3469 013c 2243     		orrs	r2, r2, r4
 3470 013e DA60     		str	r2, [r3, #12]
 3471              	.LVL299:
 3472 0140 CEE7     		b	.L302
 3473              	.LVL300:
 3474              	.L297:
 3475              	.LBE561:
 3476              	.LBE560:
 3477              	.LBB562:
 3478              	.LBB563:
 3479 0142 DA68     		ldr	r2, [r3, #12]
 3480 0144 22F0FB42 		bic	r2, r2, #2105540608
 3481 0148 22F48002 		bic	r2, r2, #4194304
 3482 014c 42F40002 		orr	r2, r2, #8388608
 3483 0150 DA60     		str	r2, [r3, #12]
 3484 0152 C5E7     		b	.L302
 3485              	.LVL301:
 3486              	.L295:
 3487              	.LBE563:
 3488              	.LBE562:
 3489              	.LBB564:
 3490              	.LBB565:
 3491 0154 DA68     		ldr	r2, [r3, #12]
 3492 0156 22F0FB42 		bic	r2, r2, #2105540608
 3493 015a 22F48002 		bic	r2, r2, #4194304
 3494 015e 42F08072 		orr	r2, r2, #16777216
 3495 0162 DA60     		str	r2, [r3, #12]
 3496 0164 BCE7     		b	.L302
 3497              	.LVL302:
 3498              	.L299:
 3499              	.LBE565:
 3500              	.LBE564:
 3501              	.LBB566:
 3502              	.LBB567:
 3503 0166 DA68     		ldr	r2, [r3, #12]
 3504 0168 22F0FB42 		bic	r2, r2, #2105540608
 3505 016c 22F48002 		bic	r2, r2, #4194304
 3506 0170 42F0C072 		orr	r2, r2, #25165824
 3507 0174 DA60     		str	r2, [r3, #12]
 3508 0176 B3E7     		b	.L302
 3509              	.LVL303:
 3510              	.L337:
 3511              	.LBE567:
 3512              	.LBE566:
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 3513              		.loc 1 3106 0
 3514 0178 0268     		ldr	r2, [r0]
 3515              	.LVL304:
 3516              	.LBB568:
 3517              	.LBB569:
7845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3518              		.loc 2 7845 0
 3519 017a 5368     		ldr	r3, [r2, #4]
 3520 017c 43F08003 		orr	r3, r3, #128
 3521 0180 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cceGX4yx.s 			page 294


 3522 0182 69E0     		b	.L292
 3523              	.LVL305:
 3524              	.L334:
 3525              	.LBE569:
 3526              	.LBE568:
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3527              		.loc 1 3116 0
 3528 0184 B4F5000F 		cmp	r4, #8388608
 3529 0188 3AD0     		beq	.L305
 3530 018a B4F5400F 		cmp	r4, #12582912
 3531 018e 7FF468AF 		bne	.L304
 3532              	.L307:
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 3533              		.loc 1 3123 0
 3534 0192 654C     		ldr	r4, .L343+4
 3535 0194 A242     		cmp	r2, r4
 3536 0196 0DD0     		beq	.L338
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3537              		.loc 1 3129 0
 3538 0198 8A68     		ldr	r2, [r1, #8]
 3539 019a C2F31204 		ubfx	r4, r2, #0, #19
 3540 019e 1CBB     		cbnz	r4, .L313
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3541              		.loc 1 3129 0 is_stmt 0 discriminator 1
 3542 01a0 C2F38462 		ubfx	r2, r2, #26, #5
 3543 01a4 0124     		movs	r4, #1
 3544 01a6 9440     		lsls	r4, r4, r2
 3545              	.L314:
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3546              		.loc 1 3129 0 discriminator 4
 3547 01a8 D3F8A420 		ldr	r2, [r3, #164]
 3548 01ac 2243     		orrs	r2, r2, r4
 3549 01ae C3F8A420 		str	r2, [r3, #164]
 3550 01b2 3DE0     		b	.L312
 3551              	.L338:
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3552              		.loc 1 3125 0 is_stmt 1
 3553 01b4 8A68     		ldr	r2, [r1, #8]
 3554 01b6 C2F31204 		ubfx	r4, r2, #0, #19
 3555 01ba 4CB9     		cbnz	r4, .L309
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3556              		.loc 1 3125 0 is_stmt 0 discriminator 1
 3557 01bc C2F38462 		ubfx	r2, r2, #26, #5
 3558 01c0 0124     		movs	r4, #1
 3559 01c2 9440     		lsls	r4, r4, r2
 3560              	.L310:
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3561              		.loc 1 3125 0 discriminator 4
 3562 01c4 D3F8A020 		ldr	r2, [r3, #160]
 3563 01c8 2243     		orrs	r2, r2, r4
 3564 01ca C3F8A020 		str	r2, [r3, #160]
 3565 01ce 2FE0     		b	.L312
 3566              	.L309:
 3567              	.LVL306:
 3568              	.LBB570:
 3569              	.LBB571:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/cceGX4yx.s 			page 295


 3570              		.loc 3 1055 0 is_stmt 1 discriminator 2
 3571              		.syntax unified
 3572              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3573 01d0 92FAA2F2 		rbit r2, r2
 3574              	@ 0 "" 2
 3575              	.LVL307:
 3576              		.thumb
 3577              		.syntax unified
 3578              	.LBE571:
 3579              	.LBE570:
 3580              	.LBB572:
 3581              	.LBB573:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3582              		.loc 3 1089 0 discriminator 2
 3583 01d4 32B1     		cbz	r2, .L327
 3584              		.loc 3 1093 0
 3585 01d6 B2FA82F2 		clz	r2, r2
 3586              	.L311:
 3587              	.LBE573:
 3588              	.LBE572:
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3589              		.loc 1 3125 0
 3590 01da 02F01F02 		and	r2, r2, #31
 3591 01de 0124     		movs	r4, #1
 3592 01e0 9440     		lsls	r4, r4, r2
 3593 01e2 EFE7     		b	.L310
 3594              	.L327:
 3595              	.LBB575:
 3596              	.LBB574:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3597              		.loc 3 1091 0
 3598 01e4 2022     		movs	r2, #32
 3599 01e6 F8E7     		b	.L311
 3600              	.L313:
 3601              	.LVL308:
 3602              	.LBE574:
 3603              	.LBE575:
 3604              	.LBB576:
 3605              	.LBB577:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3606              		.loc 3 1055 0 discriminator 2
 3607              		.syntax unified
 3608              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3609 01e8 92FAA2F2 		rbit r2, r2
 3610              	@ 0 "" 2
 3611              	.LVL309:
 3612              		.thumb
 3613              		.syntax unified
 3614              	.LBE577:
 3615              	.LBE576:
 3616              	.LBB578:
 3617              	.LBB579:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3618              		.loc 3 1089 0 discriminator 2
 3619 01ec 32B1     		cbz	r2, .L328
 3620              		.loc 3 1093 0
 3621 01ee B2FA82F2 		clz	r2, r2
ARM GAS  /tmp/cceGX4yx.s 			page 296


 3622              	.L315:
 3623              	.LBE579:
 3624              	.LBE578:
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3625              		.loc 1 3129 0
 3626 01f2 02F01F02 		and	r2, r2, #31
 3627 01f6 0124     		movs	r4, #1
 3628 01f8 9440     		lsls	r4, r4, r2
 3629 01fa D5E7     		b	.L314
 3630              	.L328:
 3631              	.LBB581:
 3632              	.LBB580:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3633              		.loc 3 1091 0
 3634 01fc 2022     		movs	r2, #32
 3635 01fe F8E7     		b	.L315
 3636              	.L305:
 3637              	.LVL310:
 3638              	.LBE580:
 3639              	.LBE581:
 3640              	.LBB582:
 3641              	.LBB583:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3642              		.loc 2 5724 0
 3643 0200 0C33     		adds	r3, r3, #12
 3644              	.LVL311:
 3645 0202 C2F30155 		ubfx	r5, r2, #20, #2
 3646 0206 02F00106 		and	r6, r2, #1
 3647 020a F400     		lsls	r4, r6, #3
 3648 020c 3444     		add	r4, r4, r6
 3649 020e A600     		lsls	r6, r4, #2
 3650 0210 3544     		add	r5, r5, r6
 3651              	.LVL312:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3652              		.loc 2 5727 0
 3653 0212 53F82540 		ldr	r4, [r3, r5, lsl #2]
 3654 0216 22F00246 		bic	r6, r2, #-2113929216
 3655 021a 26F46016 		bic	r6, r6, #3670016
 3656 021e 24EA0604 		bic	r4, r4, r6
 3657 0222 22F07E42 		bic	r2, r2, #-33554432
 3658              	.LVL313:
 3659 0226 22F4F002 		bic	r2, r2, #7864320
 3660 022a 2243     		orrs	r2, r2, r4
 3661 022c 43F82520 		str	r2, [r3, r5, lsl #2]
 3662              	.LVL314:
 3663              	.L312:
 3664              	.LBE583:
 3665              	.LBE582:
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3666              		.loc 1 3144 0
 3667 0230 0A68     		ldr	r2, [r1]
 3668 0232 3D4B     		ldr	r3, .L343+4
 3669 0234 9A42     		cmp	r2, r3
 3670 0236 47D0     		beq	.L339
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3671              		.loc 1 3169 0
 3672 0238 C36D     		ldr	r3, [r0, #92]
ARM GAS  /tmp/cceGX4yx.s 			page 297


 3673 023a 23F48023 		bic	r3, r3, #262144
 3674 023e C365     		str	r3, [r0, #92]
3175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3675              		.loc 1 3175 0
 3676 0240 0368     		ldr	r3, [r0]
 3677              	.LVL315:
 3678              	.LBB584:
 3679              	.LBB585:
7472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3680              		.loc 2 7472 0
 3681 0242 4FF40072 		mov	r2, #512
 3682 0246 1A60     		str	r2, [r3]
 3683              	.LVL316:
 3684              	.LBE585:
 3685              	.LBE584:
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3686              		.loc 1 3178 0
 3687 0248 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
 3688 024a 012B     		cmp	r3, #1
 3689 024c 53D0     		beq	.L340
3184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 3690              		.loc 1 3184 0
 3691 024e 0268     		ldr	r2, [r0]
 3692              	.LVL317:
 3693              	.LBB586:
 3694              	.LBB587:
7967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
7971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
7972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
7976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
7982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
7983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
7987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 3695              		.loc 2 7988 0
 3696 0250 5368     		ldr	r3, [r2, #4]
 3697 0252 23F40073 		bic	r3, r3, #512
 3698 0256 5360     		str	r3, [r2, #4]
 3699              	.LVL318:
 3700              	.L292:
 3701              	.LBE587:
 3702              	.LBE586:
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
ARM GAS  /tmp/cceGX4yx.s 			page 298


 3703              		.loc 1 3192 0
 3704 0258 0B68     		ldr	r3, [r1]
 3705 025a 324A     		ldr	r2, .L343
 3706 025c 9342     		cmp	r3, r2
 3707 025e 50D0     		beq	.L341
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
 3708              		.loc 1 3206 0
 3709 0260 0768     		ldr	r7, [r0]
 3710 0262 FA68     		ldr	r2, [r7, #12]
 3711 0264 02F01802 		and	r2, r2, #24
 3712 0268 182A     		cmp	r2, #24
 3713 026a 58D0     		beq	.L321
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
 3714              		.loc 1 3206 0 is_stmt 0 discriminator 1
 3715 026c 0D69     		ldr	r5, [r1, #16]
 3716 026e FC68     		ldr	r4, [r7, #12]
 3717 0270 C4F3C104 		ubfx	r4, r4, #3, #2
 3718 0274 C4EBC474 		rsb	r4, r4, r4, lsl #31
 3719 0278 6600     		lsls	r6, r4, #1
 3720 027a 0436     		adds	r6, r6, #4
 3721 027c 06F01F02 		and	r2, r6, #31
 3722 0280 D540     		lsrs	r5, r5, r2
 3723              	.L322:
 3724              	.LVL319:
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3725              		.loc 1 3207 0 is_stmt 1 discriminator 4
 3726 0282 FA68     		ldr	r2, [r7, #12]
 3727 0284 02F01802 		and	r2, r2, #24
 3728 0288 182A     		cmp	r2, #24
 3729 028a 4FD0     		beq	.L323
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3730              		.loc 1 3207 0 is_stmt 0 discriminator 1
 3731 028c 4969     		ldr	r1, [r1, #20]
 3732              	.LVL320:
 3733 028e FC68     		ldr	r4, [r7, #12]
 3734 0290 C4F3C104 		ubfx	r4, r4, #3, #2
 3735 0294 C4EBC474 		rsb	r4, r4, r4, lsl #31
 3736 0298 6200     		lsls	r2, r4, #1
 3737 029a 0432     		adds	r2, r2, #4
 3738 029c 02F01F02 		and	r2, r2, #31
 3739 02a0 D140     		lsrs	r1, r1, r2
 3740              	.L320:
 3741              	.LVL321:
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                   tmpAWDLowThresholdShifted);
 3742              		.loc 1 3211 0 is_stmt 1
 3743 02a2 0468     		ldr	r4, [r0]
 3744              	.LVL322:
 3745              	.LBB588:
 3746              	.LBB589:
5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3747              		.loc 2 5966 0
 3748 02a4 2034     		adds	r4, r4, #32
 3749              	.LVL323:
 3750 02a6 1B0D     		lsrs	r3, r3, #20
 3751              	.LVL324:
 3752 02a8 9B00     		lsls	r3, r3, #2
 3753 02aa 03F00C03 		and	r3, r3, #12
ARM GAS  /tmp/cceGX4yx.s 			page 299


 3754              	.LVL325:
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3755              		.loc 2 5968 0
 3756 02ae E258     		ldr	r2, [r4, r3]
 3757 02b0 02F0F022 		and	r2, r2, #-268374016
 3758 02b4 41EA0541 		orr	r1, r1, r5, lsl #16
 3759              	.LVL326:
 3760 02b8 0A43     		orrs	r2, r2, r1
 3761 02ba E250     		str	r2, [r4, r3]
 3762              	.LVL327:
 3763              	.LBE589:
 3764              	.LBE588:
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3765              		.loc 1 3215 0
 3766 02bc 0023     		movs	r3, #0
 3767 02be 80F85830 		strb	r3, [r0, #88]
3218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 3768              		.loc 1 3218 0
 3769 02c2 1846     		mov	r0, r3
 3770              	.LVL328:
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3771              		.loc 1 3219 0
 3772 02c4 F0BC     		pop	{r4, r5, r6, r7}
 3773              	.LCFI16:
 3774              		.cfi_remember_state
 3775              		.cfi_restore 7
 3776              		.cfi_restore 6
 3777              		.cfi_restore 5
 3778              		.cfi_restore 4
 3779              		.cfi_def_cfa_offset 0
 3780              	.LVL329:
 3781 02c6 7047     		bx	lr
 3782              	.LVL330:
 3783              	.L339:
 3784              	.LCFI17:
 3785              		.cfi_restore_state
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3786              		.loc 1 3147 0
 3787 02c8 C36D     		ldr	r3, [r0, #92]
 3788 02ca 23F40033 		bic	r3, r3, #131072
 3789 02ce C365     		str	r3, [r0, #92]
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3790              		.loc 1 3153 0
 3791 02d0 0368     		ldr	r3, [r0]
 3792              	.LVL331:
 3793              	.LBB590:
 3794              	.LBB591:
7461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3795              		.loc 2 7461 0
 3796 02d2 4FF48072 		mov	r2, #256
 3797 02d6 1A60     		str	r2, [r3]
 3798              	.LVL332:
 3799              	.LBE591:
 3800              	.LBE590:
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3801              		.loc 1 3156 0
 3802 02d8 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
ARM GAS  /tmp/cceGX4yx.s 			page 300


 3803 02da 012B     		cmp	r3, #1
 3804 02dc 05D0     		beq	.L342
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 3805              		.loc 1 3162 0
 3806 02de 0268     		ldr	r2, [r0]
 3807              	.LVL333:
 3808              	.LBB592:
 3809              	.LBB593:
7977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3810              		.loc 2 7977 0
 3811 02e0 5368     		ldr	r3, [r2, #4]
 3812 02e2 23F48073 		bic	r3, r3, #256
 3813 02e6 5360     		str	r3, [r2, #4]
 3814 02e8 B6E7     		b	.L292
 3815              	.LVL334:
 3816              	.L342:
 3817              	.LBE593:
 3818              	.LBE592:
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 3819              		.loc 1 3158 0
 3820 02ea 0268     		ldr	r2, [r0]
 3821              	.LVL335:
 3822              	.LBB594:
 3823              	.LBB595:
7856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3824              		.loc 2 7856 0
 3825 02ec 5368     		ldr	r3, [r2, #4]
 3826 02ee 43F48073 		orr	r3, r3, #256
 3827 02f2 5360     		str	r3, [r2, #4]
 3828 02f4 B0E7     		b	.L292
 3829              	.LVL336:
 3830              	.L340:
 3831              	.LBE595:
 3832              	.LBE594:
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 3833              		.loc 1 3180 0
 3834 02f6 0268     		ldr	r2, [r0]
 3835              	.LVL337:
 3836              	.LBB596:
 3837              	.LBB597:
7867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3838              		.loc 2 7867 0
 3839 02f8 5368     		ldr	r3, [r2, #4]
 3840 02fa 43F40073 		orr	r3, r3, #512
 3841 02fe 5360     		str	r3, [r2, #4]
 3842 0300 AAE7     		b	.L292
 3843              	.LVL338:
 3844              	.L341:
 3845              	.LBE597:
 3846              	.LBE596:
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 3847              		.loc 1 3197 0
 3848 0302 0D69     		ldr	r5, [r1, #16]
 3849 0304 0468     		ldr	r4, [r0]
 3850 0306 E268     		ldr	r2, [r4, #12]
 3851 0308 C2F3C102 		ubfx	r2, r2, #3, #2
 3852 030c 5200     		lsls	r2, r2, #1
ARM GAS  /tmp/cceGX4yx.s 			page 301


 3853 030e 9540     		lsls	r5, r5, r2
 3854              	.LVL339:
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3855              		.loc 1 3198 0
 3856 0310 4969     		ldr	r1, [r1, #20]
 3857              	.LVL340:
 3858 0312 E268     		ldr	r2, [r4, #12]
 3859 0314 C2F3C102 		ubfx	r2, r2, #3, #2
 3860 0318 5200     		lsls	r2, r2, #1
 3861 031a 9140     		lsls	r1, r1, r2
 3862              	.LVL341:
 3863 031c C1E7     		b	.L320
 3864              	.LVL342:
 3865              	.L321:
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
 3866              		.loc 1 3206 0 discriminator 2
 3867 031e 0D69     		ldr	r5, [r1, #16]
 3868 0320 AD00     		lsls	r5, r5, #2
 3869 0322 AEE7     		b	.L322
 3870              	.L344:
 3871              		.align	2
 3872              	.L343:
 3873 0324 0000C07D 		.word	2109734912
 3874 0328 FFFF1700 		.word	1572863
 3875              	.LVL343:
 3876              	.L323:
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3877              		.loc 1 3207 0 discriminator 2
 3878 032c 4969     		ldr	r1, [r1, #20]
 3879              	.LVL344:
 3880 032e 8900     		lsls	r1, r1, #2
 3881 0330 B7E7     		b	.L320
 3882              	.LVL345:
 3883              	.L324:
 3884              	.LCFI18:
 3885              		.cfi_def_cfa_offset 0
 3886              		.cfi_restore 4
 3887              		.cfi_restore 5
 3888              		.cfi_restore 6
 3889              		.cfi_restore 7
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3890              		.loc 1 3037 0
 3891 0332 0220     		movs	r0, #2
 3892              	.LVL346:
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3893              		.loc 1 3219 0
 3894 0334 7047     		bx	lr
 3895              		.cfi_endproc
 3896              	.LFE350:
 3898 0336 00BF     		.section	.text.HAL_ADC_GetState,"ax",%progbits
 3899              		.align	1
 3900              		.global	HAL_ADC_GetState
 3901              		.syntax unified
 3902              		.thumb
 3903              		.thumb_func
 3904              		.fpu fpv4-sp-d16
 3906              	HAL_ADC_GetState:
ARM GAS  /tmp/cceGX4yx.s 			page 302


 3907              	.LFB351:
3254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 3908              		.loc 1 3254 0
 3909              		.cfi_startproc
 3910              		@ args = 0, pretend = 0, frame = 0
 3911              		@ frame_needed = 0, uses_anonymous_args = 0
 3912              		@ link register save eliminated.
 3913              	.LVL347:
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 3914              		.loc 1 3259 0
 3915 0000 C06D     		ldr	r0, [r0, #92]
 3916              	.LVL348:
3260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3917              		.loc 1 3260 0
 3918 0002 7047     		bx	lr
 3919              		.cfi_endproc
 3920              	.LFE351:
 3922              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 3923              		.align	1
 3924              		.global	HAL_ADC_GetError
 3925              		.syntax unified
 3926              		.thumb
 3927              		.thumb_func
 3928              		.fpu fpv4-sp-d16
 3930              	HAL_ADC_GetError:
 3931              	.LFB352:
3268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 3932              		.loc 1 3268 0
 3933              		.cfi_startproc
 3934              		@ args = 0, pretend = 0, frame = 0
 3935              		@ frame_needed = 0, uses_anonymous_args = 0
 3936              		@ link register save eliminated.
 3937              	.LVL349:
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 3938              		.loc 1 3272 0
 3939 0000 006E     		ldr	r0, [r0, #96]
 3940              	.LVL350:
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3941              		.loc 1 3273 0
 3942 0002 7047     		bx	lr
 3943              		.cfi_endproc
 3944              	.LFE352:
 3946              		.section	.text.ADC_ConversionStop,"ax",%progbits
 3947              		.align	1
 3948              		.global	ADC_ConversionStop
 3949              		.syntax unified
 3950              		.thumb
 3951              		.thumb_func
 3952              		.fpu fpv4-sp-d16
 3954              	ADC_ConversionStop:
 3955              	.LFB353:
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 3956              		.loc 1 3298 0
 3957              		.cfi_startproc
 3958              		@ args = 0, pretend = 0, frame = 0
 3959              		@ frame_needed = 0, uses_anonymous_args = 0
 3960              	.LVL351:
ARM GAS  /tmp/cceGX4yx.s 			page 303


 3961 0000 70B5     		push	{r4, r5, r6, lr}
 3962              	.LCFI19:
 3963              		.cfi_def_cfa_offset 16
 3964              		.cfi_offset 4, -16
 3965              		.cfi_offset 5, -12
 3966              		.cfi_offset 6, -8
 3967              		.cfi_offset 14, -4
 3968 0002 0446     		mov	r4, r0
 3969              	.LVL352:
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3970              		.loc 1 3312 0
 3971 0004 0368     		ldr	r3, [r0]
 3972              	.LVL353:
 3973              	.LBB598:
 3974              	.LBB599:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3975              		.loc 2 6846 0
 3976 0006 9A68     		ldr	r2, [r3, #8]
 3977 0008 12F0040F 		tst	r2, #4
 3978 000c 56D0     		beq	.L364
 3979 000e 0120     		movs	r0, #1
 3980              	.LVL354:
 3981              	.L348:
 3982              	.LBE599:
 3983              	.LBE598:
 3984              	.LBB601:
 3985              	.LBB602:
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3986              		.loc 2 7071 0
 3987 0010 9A68     		ldr	r2, [r3, #8]
 3988 0012 12F0080F 		tst	r2, #8
 3989 0016 53D0     		beq	.L365
 3990 0018 0122     		movs	r2, #1
 3991              	.L349:
 3992              	.LVL355:
 3993              	.LBE602:
 3994              	.LBE601:
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 3995              		.loc 1 3314 0
 3996 001a 08B9     		cbnz	r0, .L350
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 3997              		.loc 1 3315 0
 3998 001c 002A     		cmp	r2, #0
 3999 001e 6FD0     		beq	.L366
 4000              	.L350:
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4001              		.loc 1 3324 0
 4002 0020 DA68     		ldr	r2, [r3, #12]
 4003 0022 12F0007F 		tst	r2, #33554432
 4004 0026 04D0     		beq	.L352
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 4005              		.loc 1 3326 0
 4006 0028 A08B     		ldrh	r0, [r4, #28]
 4007 002a 40F20112 		movw	r2, #257
 4008 002e 9042     		cmp	r0, r2
 4009 0030 5AD0     		beq	.L371
 4010              	.L352:
ARM GAS  /tmp/cceGX4yx.s 			page 304


3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4011              		.loc 1 3353 0
 4012 0032 0229     		cmp	r1, #2
 4013 0034 10D0     		beq	.L357
 4014              	.LVL356:
 4015              	.L356:
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4016              		.loc 1 3356 0
 4017 0036 2368     		ldr	r3, [r4]
 4018              	.LVL357:
 4019              	.LBB604:
 4020              	.LBB605:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4021              		.loc 2 6846 0
 4022 0038 9A68     		ldr	r2, [r3, #8]
 4023 003a 12F0040F 		tst	r2, #4
 4024 003e 0BD0     		beq	.L357
 4025              	.LVL358:
 4026              	.LBE605:
 4027              	.LBE604:
 4028              	.LBB606:
 4029              	.LBB607:
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4030              		.loc 2 6735 0
 4031 0040 9A68     		ldr	r2, [r3, #8]
 4032 0042 12F0020F 		tst	r2, #2
 4033 0046 07D1     		bne	.L357
 4034              	.LVL359:
 4035              	.LBE607:
 4036              	.LBE606:
 4037              	.LBB608:
 4038              	.LBB609:
6833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4039              		.loc 2 6833 0
 4040 0048 9A68     		ldr	r2, [r3, #8]
 4041 004a 22F00042 		bic	r2, r2, #-2147483648
 4042 004e 22F03F02 		bic	r2, r2, #63
 4043 0052 42F01002 		orr	r2, r2, #16
 4044 0056 9A60     		str	r2, [r3, #8]
 4045              	.LVL360:
 4046              	.L357:
 4047              	.LBE609:
 4048              	.LBE608:
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4049              		.loc 1 3367 0
 4050 0058 0129     		cmp	r1, #1
 4051 005a 10D0     		beq	.L358
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4052              		.loc 1 3370 0
 4053 005c 2368     		ldr	r3, [r4]
 4054              	.LVL361:
 4055              	.LBB610:
 4056              	.LBB611:
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4057              		.loc 2 7071 0
 4058 005e 9A68     		ldr	r2, [r3, #8]
 4059 0060 12F0080F 		tst	r2, #8
ARM GAS  /tmp/cceGX4yx.s 			page 305


 4060 0064 0BD0     		beq	.L358
 4061              	.LVL362:
 4062              	.LBE611:
 4063              	.LBE610:
 4064              	.LBB612:
 4065              	.LBB613:
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4066              		.loc 2 6735 0
 4067 0066 9A68     		ldr	r2, [r3, #8]
 4068 0068 12F0020F 		tst	r2, #2
 4069 006c 07D1     		bne	.L358
 4070              	.LVL363:
 4071              	.LBE613:
 4072              	.LBE612:
 4073              	.LBB614:
 4074              	.LBB615:
7058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4075              		.loc 2 7058 0
 4076 006e 9A68     		ldr	r2, [r3, #8]
 4077 0070 22F00042 		bic	r2, r2, #-2147483648
 4078 0074 22F03F02 		bic	r2, r2, #63
 4079 0078 42F02002 		orr	r2, r2, #32
 4080 007c 9A60     		str	r2, [r3, #8]
 4081              	.LVL364:
 4082              	.L358:
 4083              	.LBE615:
 4084              	.LBE614:
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4085              		.loc 1 3381 0
 4086 007e 0229     		cmp	r1, #2
 4087 0080 3AD0     		beq	.L368
 4088 0082 0329     		cmp	r1, #3
 4089 0084 36D1     		bne	.L369
3384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 4090              		.loc 1 3384 0
 4091 0086 0C25     		movs	r5, #12
 4092              	.L360:
 4093              	.LVL365:
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4094              		.loc 1 3396 0
 4095 0088 FFF7FEFF 		bl	HAL_GetTick
 4096              	.LVL366:
 4097 008c 0646     		mov	r6, r0
 4098              	.LVL367:
 4099              	.L362:
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4100              		.loc 1 3398 0
 4101 008e 2368     		ldr	r3, [r4]
 4102 0090 9B68     		ldr	r3, [r3, #8]
 4103 0092 2B42     		tst	r3, r5
 4104 0094 32D0     		beq	.L372
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4105              		.loc 1 3400 0
 4106 0096 FFF7FEFF 		bl	HAL_GetTick
 4107              	.LVL368:
 4108 009a 801B     		subs	r0, r0, r6
 4109 009c 0528     		cmp	r0, #5
ARM GAS  /tmp/cceGX4yx.s 			page 306


 4110 009e F6D9     		bls	.L362
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4111              		.loc 1 3403 0
 4112 00a0 2368     		ldr	r3, [r4]
 4113 00a2 9B68     		ldr	r3, [r3, #8]
 4114 00a4 2B42     		tst	r3, r5
 4115 00a6 F2D0     		beq	.L362
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4116              		.loc 1 3406 0
 4117 00a8 E36D     		ldr	r3, [r4, #92]
 4118 00aa 43F01003 		orr	r3, r3, #16
 4119 00ae E365     		str	r3, [r4, #92]
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4120              		.loc 1 3409 0
 4121 00b0 236E     		ldr	r3, [r4, #96]
 4122 00b2 43F00103 		orr	r3, r3, #1
 4123 00b6 2366     		str	r3, [r4, #96]
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4124              		.loc 1 3411 0
 4125 00b8 0120     		movs	r0, #1
 4126 00ba 20E0     		b	.L351
 4127              	.LVL369:
 4128              	.L364:
 4129              	.LBB616:
 4130              	.LBB600:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4131              		.loc 2 6846 0
 4132 00bc 0020     		movs	r0, #0
 4133              	.LVL370:
 4134 00be A7E7     		b	.L348
 4135              	.LVL371:
 4136              	.L365:
 4137              	.LBE600:
 4138              	.LBE616:
 4139              	.LBB617:
 4140              	.LBB603:
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4141              		.loc 2 7071 0
 4142 00c0 0022     		movs	r2, #0
 4143 00c2 AAE7     		b	.L349
 4144              	.LVL372:
 4145              	.L354:
 4146              	.LBE603:
 4147              	.LBE617:
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4148              		.loc 1 3345 0
 4149 00c4 0132     		adds	r2, r2, #1
 4150              	.LVL373:
 4151              	.L353:
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4152              		.loc 1 3333 0
 4153 00c6 1968     		ldr	r1, [r3]
 4154 00c8 11F0400F 		tst	r1, #64
 4155 00cc 0ED1     		bne	.L373
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4156              		.loc 1 3335 0
 4157 00ce 0D49     		ldr	r1, .L374
ARM GAS  /tmp/cceGX4yx.s 			page 307


 4158 00d0 8A42     		cmp	r2, r1
 4159 00d2 F7D9     		bls	.L354
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4160              		.loc 1 3338 0
 4161 00d4 E36D     		ldr	r3, [r4, #92]
 4162 00d6 43F01003 		orr	r3, r3, #16
 4163 00da E365     		str	r3, [r4, #92]
3341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4164              		.loc 1 3341 0
 4165 00dc 236E     		ldr	r3, [r4, #96]
 4166 00de 43F00103 		orr	r3, r3, #1
 4167 00e2 2366     		str	r3, [r4, #96]
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4168              		.loc 1 3343 0
 4169 00e4 0120     		movs	r0, #1
 4170 00e6 0AE0     		b	.L351
 4171              	.LVL374:
 4172              	.L371:
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4173              		.loc 1 3300 0
 4174 00e8 0022     		movs	r2, #0
 4175 00ea ECE7     		b	.L353
 4176              	.LVL375:
 4177              	.L373:
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4178              		.loc 1 3349 0
 4179 00ec 4022     		movs	r2, #64
 4180              	.LVL376:
 4181 00ee 1A60     		str	r2, [r3]
 4182              	.LVL377:
3330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4183              		.loc 1 3330 0
 4184 00f0 0121     		movs	r1, #1
 4185 00f2 A0E7     		b	.L356
 4186              	.LVL378:
 4187              	.L369:
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 4188              		.loc 1 3391 0
 4189 00f4 0425     		movs	r5, #4
3392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4190              		.loc 1 3392 0
 4191 00f6 C7E7     		b	.L360
 4192              	.LVL379:
 4193              	.L368:
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 4194              		.loc 1 3387 0
 4195 00f8 0825     		movs	r5, #8
 4196 00fa C5E7     		b	.L360
 4197              	.LVL380:
 4198              	.L372:
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4199              		.loc 1 3419 0
 4200 00fc 0020     		movs	r0, #0
 4201              	.LVL381:
 4202              	.L351:
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4203              		.loc 1 3420 0
ARM GAS  /tmp/cceGX4yx.s 			page 308


 4204 00fe 70BD     		pop	{r4, r5, r6, pc}
 4205              	.LVL382:
 4206              	.L366:
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4207              		.loc 1 3419 0
 4208 0100 0020     		movs	r0, #0
 4209 0102 FCE7     		b	.L351
 4210              	.L375:
 4211              		.align	2
 4212              	.L374:
 4213 0104 FFFF3FA3 		.word	-1556086785
 4214              		.cfi_endproc
 4215              	.LFE353:
 4217              		.section	.text.ADC_Enable,"ax",%progbits
 4218              		.align	1
 4219              		.global	ADC_Enable
 4220              		.syntax unified
 4221              		.thumb
 4222              		.thumb_func
 4223              		.fpu fpv4-sp-d16
 4225              	ADC_Enable:
 4226              	.LFB354:
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 4227              		.loc 1 3430 0
 4228              		.cfi_startproc
 4229              		@ args = 0, pretend = 0, frame = 0
 4230              		@ frame_needed = 0, uses_anonymous_args = 0
 4231              	.LVL383:
 4232 0000 38B5     		push	{r3, r4, r5, lr}
 4233              	.LCFI20:
 4234              		.cfi_def_cfa_offset 16
 4235              		.cfi_offset 3, -16
 4236              		.cfi_offset 4, -12
 4237              		.cfi_offset 5, -8
 4238              		.cfi_offset 14, -4
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4239              		.loc 1 3437 0
 4240 0002 0368     		ldr	r3, [r0]
 4241              	.LVL384:
 4242              	.LBB618:
 4243              	.LBB619:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4244              		.loc 2 6724 0
 4245 0004 9A68     		ldr	r2, [r3, #8]
 4246 0006 12F0010F 		tst	r2, #1
 4247 000a 40D1     		bne	.L382
 4248              	.LVL385:
 4249              	.LBE619:
 4250              	.LBE618:
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 4251              		.loc 1 3440 0
 4252 000c 9968     		ldr	r1, [r3, #8]
 4253 000e 214A     		ldr	r2, .L385
 4254 0010 1142     		tst	r1, r2
 4255 0012 09D0     		beq	.L378
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4256              		.loc 1 3444 0
ARM GAS  /tmp/cceGX4yx.s 			page 309


 4257 0014 C36D     		ldr	r3, [r0, #92]
 4258 0016 43F01003 		orr	r3, r3, #16
 4259 001a C365     		str	r3, [r0, #92]
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4260              		.loc 1 3447 0
 4261 001c 036E     		ldr	r3, [r0, #96]
 4262 001e 43F00103 		orr	r3, r3, #1
 4263 0022 0366     		str	r3, [r0, #96]
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4264              		.loc 1 3449 0
 4265 0024 0120     		movs	r0, #1
 4266              	.LVL386:
 4267 0026 33E0     		b	.L377
 4268              	.LVL387:
 4269              	.L378:
 4270 0028 0446     		mov	r4, r0
 4271              	.LVL388:
 4272              	.LBB620:
 4273              	.LBB621:
6688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4274              		.loc 2 6688 0
 4275 002a 9A68     		ldr	r2, [r3, #8]
 4276 002c 22F00042 		bic	r2, r2, #-2147483648
 4277 0030 22F03F02 		bic	r2, r2, #63
 4278 0034 42F00102 		orr	r2, r2, #1
 4279 0038 9A60     		str	r2, [r3, #8]
 4280              	.LVL389:
 4281              	.LBE621:
 4282              	.LBE620:
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4283              		.loc 1 3456 0
 4284 003a FFF7FEFF 		bl	HAL_GetTick
 4285              	.LVL390:
 4286 003e 0546     		mov	r5, r0
 4287              	.LVL391:
 4288              	.L379:
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4289              		.loc 1 3458 0
 4290 0040 2368     		ldr	r3, [r4]
 4291 0042 1A68     		ldr	r2, [r3]
 4292 0044 12F0010F 		tst	r2, #1
 4293 0048 1FD1     		bne	.L384
 4294              	.LVL392:
 4295              	.LBB622:
 4296              	.LBB623:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4297              		.loc 2 6724 0
 4298 004a 9A68     		ldr	r2, [r3, #8]
 4299 004c 12F0010F 		tst	r2, #1
 4300 0050 07D1     		bne	.L380
 4301              	.LVL393:
 4302              	.LBE623:
 4303              	.LBE622:
 4304              	.LBB624:
 4305              	.LBB625:
6688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4306              		.loc 2 6688 0
ARM GAS  /tmp/cceGX4yx.s 			page 310


 4307 0052 9A68     		ldr	r2, [r3, #8]
 4308 0054 22F00042 		bic	r2, r2, #-2147483648
 4309 0058 22F03F02 		bic	r2, r2, #63
 4310 005c 42F00102 		orr	r2, r2, #1
 4311 0060 9A60     		str	r2, [r3, #8]
 4312              	.LVL394:
 4313              	.L380:
 4314              	.LBE625:
 4315              	.LBE624:
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4316              		.loc 1 3473 0
 4317 0062 FFF7FEFF 		bl	HAL_GetTick
 4318              	.LVL395:
 4319 0066 401B     		subs	r0, r0, r5
 4320 0068 0228     		cmp	r0, #2
 4321 006a E9D9     		bls	.L379
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4322              		.loc 1 3476 0
 4323 006c 2368     		ldr	r3, [r4]
 4324 006e 1B68     		ldr	r3, [r3]
 4325 0070 13F0010F 		tst	r3, #1
 4326 0074 E4D1     		bne	.L379
3479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4327              		.loc 1 3479 0
 4328 0076 E36D     		ldr	r3, [r4, #92]
 4329 0078 43F01003 		orr	r3, r3, #16
 4330 007c E365     		str	r3, [r4, #92]
3482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4331              		.loc 1 3482 0
 4332 007e 236E     		ldr	r3, [r4, #96]
 4333 0080 43F00103 		orr	r3, r3, #1
 4334 0084 2366     		str	r3, [r4, #96]
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4335              		.loc 1 3484 0
 4336 0086 0120     		movs	r0, #1
 4337 0088 02E0     		b	.L377
 4338              	.L384:
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4339              		.loc 1 3491 0
 4340 008a 0020     		movs	r0, #0
 4341 008c 00E0     		b	.L377
 4342              	.LVL396:
 4343              	.L382:
 4344 008e 0020     		movs	r0, #0
 4345              	.LVL397:
 4346              	.L377:
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4347              		.loc 1 3492 0
 4348 0090 38BD     		pop	{r3, r4, r5, pc}
 4349              	.L386:
 4350 0092 00BF     		.align	2
 4351              	.L385:
 4352 0094 3F000080 		.word	-2147483585
 4353              		.cfi_endproc
 4354              	.LFE354:
 4356              		.section	.text.HAL_ADC_Start,"ax",%progbits
 4357              		.align	1
ARM GAS  /tmp/cceGX4yx.s 			page 311


 4358              		.global	HAL_ADC_Start
 4359              		.syntax unified
 4360              		.thumb
 4361              		.thumb_func
 4362              		.fpu fpv4-sp-d16
 4364              	HAL_ADC_Start:
 4365              	.LFB333:
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4366              		.loc 1 1229 0
 4367              		.cfi_startproc
 4368              		@ args = 0, pretend = 0, frame = 0
 4369              		@ frame_needed = 0, uses_anonymous_args = 0
 4370              	.LVL398:
 4371 0000 38B5     		push	{r3, r4, r5, lr}
 4372              	.LCFI21:
 4373              		.cfi_def_cfa_offset 16
 4374              		.cfi_offset 3, -16
 4375              		.cfi_offset 4, -12
 4376              		.cfi_offset 5, -8
 4377              		.cfi_offset 14, -4
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4378              		.loc 1 1233 0
 4379 0002 0368     		ldr	r3, [r0]
 4380 0004 B3F1A04F 		cmp	r3, #1342177280
 4381 0008 5ED0     		beq	.L400
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4382              		.loc 1 1233 0 is_stmt 0 discriminator 2
 4383 000a 464A     		ldr	r2, .L412
 4384 000c 9342     		cmp	r3, r2
 4385 000e 58D0     		beq	.L409
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4386              		.loc 1 1233 0
 4387 0010 454A     		ldr	r2, .L412+4
 4388              	.L388:
 4389              	.LVL399:
 4390              	.LBB626:
 4391              	.LBB627:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4392              		.loc 2 6387 0 is_stmt 1 discriminator 6
 4393 0012 9568     		ldr	r5, [r2, #8]
 4394 0014 05F01F05 		and	r5, r5, #31
 4395              	.LVL400:
 4396              	.LBE627:
 4397              	.LBE626:
 4398              	.LBB628:
 4399              	.LBB629:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4400              		.loc 2 6846 0 discriminator 6
 4401 0018 9B68     		ldr	r3, [r3, #8]
 4402              	.LVL401:
 4403 001a 13F0040F 		tst	r3, #4
 4404 001e 7BD1     		bne	.L402
 4405              	.LVL402:
 4406              	.LBE629:
 4407              	.LBE628:
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4408              		.loc 1 1243 0
ARM GAS  /tmp/cceGX4yx.s 			page 312


 4409 0020 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 4410 0024 012B     		cmp	r3, #1
 4411 0026 7AD0     		beq	.L403
 4412 0028 0446     		mov	r4, r0
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4413              		.loc 1 1243 0 is_stmt 0 discriminator 2
 4414 002a 0123     		movs	r3, #1
 4415 002c 80F85830 		strb	r3, [r0, #88]
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4416              		.loc 1 1246 0 is_stmt 1 discriminator 2
 4417 0030 FFF7FEFF 		bl	ADC_Enable
 4418              	.LVL403:
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4419              		.loc 1 1249 0 discriminator 2
 4420 0034 0346     		mov	r3, r0
 4421 0036 0028     		cmp	r0, #0
 4422 0038 6AD1     		bne	.L390
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4423              		.loc 1 1254 0
 4424 003a E26D     		ldr	r2, [r4, #92]
 4425 003c 22F47062 		bic	r2, r2, #3840
 4426 0040 22F00102 		bic	r2, r2, #1
 4427 0044 42F48072 		orr	r2, r2, #256
 4428 0048 E265     		str	r2, [r4, #92]
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4429              		.loc 1 1262 0
 4430 004a 2268     		ldr	r2, [r4]
 4431 004c 3549     		ldr	r1, .L412
 4432 004e 8A42     		cmp	r2, r1
 4433 0050 3FD0     		beq	.L404
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4434              		.loc 1 1262 0 is_stmt 0 discriminator 1
 4435 0052 01F58061 		add	r1, r1, #1024
 4436 0056 8A42     		cmp	r2, r1
 4437 0058 38D0     		beq	.L410
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4438              		.loc 1 1262 0
 4439 005a 1146     		mov	r1, r2
 4440              	.L391:
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4441              		.loc 1 1262 0 discriminator 8
 4442 005c 8A42     		cmp	r2, r1
 4443 005e 00D0     		beq	.L392
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
 4444              		.loc 1 1263 0 is_stmt 1
 4445 0060 1DB9     		cbnz	r5, .L393
 4446              	.L392:
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4447              		.loc 1 1266 0
 4448 0062 E16D     		ldr	r1, [r4, #92]
 4449 0064 21F48011 		bic	r1, r1, #1048576
 4450 0068 E165     		str	r1, [r4, #92]
 4451              	.L393:
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4452              		.loc 1 1272 0
 4453 006a E16D     		ldr	r1, [r4, #92]
 4454 006c 11F4805F 		tst	r1, #4096
ARM GAS  /tmp/cceGX4yx.s 			page 313


 4455 0070 32D0     		beq	.L394
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4456              		.loc 1 1275 0
 4457 0072 216E     		ldr	r1, [r4, #96]
 4458 0074 21F00601 		bic	r1, r1, #6
 4459 0078 2166     		str	r1, [r4, #96]
 4460              	.L395:
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4461              		.loc 1 1285 0
 4462 007a 1C21     		movs	r1, #28
 4463 007c 1160     		str	r1, [r2]
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4464              		.loc 1 1290 0
 4465 007e 0022     		movs	r2, #0
 4466 0080 84F85820 		strb	r2, [r4, #88]
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4467              		.loc 1 1301 0
 4468 0084 2168     		ldr	r1, [r4]
 4469 0086 274A     		ldr	r2, .L412
 4470 0088 9142     		cmp	r1, r2
 4471 008a 2BD0     		beq	.L406
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4472              		.loc 1 1301 0 is_stmt 0 discriminator 1
 4473 008c 02F58062 		add	r2, r2, #1024
 4474 0090 9142     		cmp	r1, r2
 4475 0092 24D0     		beq	.L411
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4476              		.loc 1 1301 0
 4477 0094 0A46     		mov	r2, r1
 4478              	.L396:
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4479              		.loc 1 1301 0 discriminator 8
 4480 0096 9142     		cmp	r1, r2
 4481 0098 27D0     		beq	.L397
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4482              		.loc 1 1302 0 is_stmt 1
 4483 009a 35B3     		cbz	r5, .L397
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 4484              		.loc 1 1303 0
 4485 009c 052D     		cmp	r5, #5
 4486 009e 24D0     		beq	.L397
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
 4487              		.loc 1 1304 0
 4488 00a0 092D     		cmp	r5, #9
 4489 00a2 22D0     		beq	.L397
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
 4490              		.loc 1 1319 0
 4491 00a4 E16D     		ldr	r1, [r4, #92]
 4492 00a6 41F48011 		orr	r1, r1, #1048576
 4493 00aa E165     		str	r1, [r4, #92]
 4494              	.LVL404:
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4495              		.loc 1 1323 0
 4496 00ac D268     		ldr	r2, [r2, #12]
 4497              	.LVL405:
 4498 00ae 12F0007F 		tst	r2, #33554432
 4499 00b2 32D0     		beq	.L389
ARM GAS  /tmp/cceGX4yx.s 			page 314


1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4500              		.loc 1 1325 0
 4501 00b4 E26D     		ldr	r2, [r4, #92]
 4502 00b6 22F44052 		bic	r2, r2, #12288
 4503 00ba 42F48052 		orr	r2, r2, #4096
 4504 00be E265     		str	r2, [r4, #92]
 4505 00c0 2BE0     		b	.L389
 4506              	.LVL406:
 4507              	.L409:
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4508              		.loc 1 1233 0
 4509 00c2 02F50072 		add	r2, r2, #512
 4510 00c6 A4E7     		b	.L388
 4511              	.L400:
 4512 00c8 184A     		ldr	r2, .L412+8
 4513 00ca A2E7     		b	.L388
 4514              	.LVL407:
 4515              	.L410:
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4516              		.loc 1 1262 0
 4517 00cc A1F58071 		sub	r1, r1, #256
 4518 00d0 C4E7     		b	.L391
 4519              	.L404:
 4520 00d2 4FF0A041 		mov	r1, #1342177280
 4521 00d6 C1E7     		b	.L391
 4522              	.L394:
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4523              		.loc 1 1280 0
 4524 00d8 0021     		movs	r1, #0
 4525 00da 2166     		str	r1, [r4, #96]
 4526 00dc CDE7     		b	.L395
 4527              	.L411:
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4528              		.loc 1 1301 0
 4529 00de A2F58072 		sub	r2, r2, #256
 4530 00e2 D8E7     		b	.L396
 4531              	.L406:
 4532 00e4 4FF0A042 		mov	r2, #1342177280
 4533 00e8 D5E7     		b	.L396
 4534              	.L397:
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4535              		.loc 1 1308 0
 4536 00ea CA68     		ldr	r2, [r1, #12]
 4537 00ec 12F0007F 		tst	r2, #33554432
 4538 00f0 05D0     		beq	.L399
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4539              		.loc 1 1310 0
 4540 00f2 E26D     		ldr	r2, [r4, #92]
 4541 00f4 22F44052 		bic	r2, r2, #12288
 4542 00f8 42F48052 		orr	r2, r2, #4096
 4543 00fc E265     		str	r2, [r4, #92]
 4544              	.L399:
 4545              	.LVL408:
 4546              	.LBB630:
 4547              	.LBB631:
6813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4548              		.loc 2 6813 0
ARM GAS  /tmp/cceGX4yx.s 			page 315


 4549 00fe 8A68     		ldr	r2, [r1, #8]
 4550 0100 22F00042 		bic	r2, r2, #-2147483648
 4551 0104 22F03F02 		bic	r2, r2, #63
 4552 0108 42F00402 		orr	r2, r2, #4
 4553 010c 8A60     		str	r2, [r1, #8]
 4554 010e 04E0     		b	.L389
 4555              	.LVL409:
 4556              	.L390:
 4557              	.LBE631:
 4558              	.LBE630:
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4559              		.loc 1 1342 0
 4560 0110 0022     		movs	r2, #0
 4561 0112 84F85820 		strb	r2, [r4, #88]
 4562 0116 00E0     		b	.L389
 4563              	.LVL410:
 4564              	.L402:
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4565              		.loc 1 1347 0
 4566 0118 0223     		movs	r3, #2
 4567              	.LVL411:
 4568              	.L389:
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4569              		.loc 1 1352 0
 4570 011a 1846     		mov	r0, r3
 4571 011c 38BD     		pop	{r3, r4, r5, pc}
 4572              	.LVL412:
 4573              	.L403:
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4574              		.loc 1 1243 0
 4575 011e 0223     		movs	r3, #2
 4576 0120 FBE7     		b	.L389
 4577              	.L413:
 4578 0122 00BF     		.align	2
 4579              	.L412:
 4580 0124 00010050 		.word	1342177536
 4581 0128 00070050 		.word	1342179072
 4582 012c 00030050 		.word	1342178048
 4583              		.cfi_endproc
 4584              	.LFE333:
 4586              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 4587              		.align	1
 4588              		.global	HAL_ADC_Start_IT
 4589              		.syntax unified
 4590              		.thumb
 4591              		.thumb_func
 4592              		.fpu fpv4-sp-d16
 4594              	HAL_ADC_Start_IT:
 4595              	.LFB337:
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4596              		.loc 1 1750 0
 4597              		.cfi_startproc
 4598              		@ args = 0, pretend = 0, frame = 0
 4599              		@ frame_needed = 0, uses_anonymous_args = 0
 4600              	.LVL413:
 4601 0000 38B5     		push	{r3, r4, r5, lr}
 4602              	.LCFI22:
ARM GAS  /tmp/cceGX4yx.s 			page 316


 4603              		.cfi_def_cfa_offset 16
 4604              		.cfi_offset 3, -16
 4605              		.cfi_offset 4, -12
 4606              		.cfi_offset 5, -8
 4607              		.cfi_offset 14, -4
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4608              		.loc 1 1754 0
 4609 0002 0368     		ldr	r3, [r0]
 4610 0004 B3F1A04F 		cmp	r3, #1342177280
 4611 0008 00F08380 		beq	.L435
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4612              		.loc 1 1754 0 is_stmt 0 discriminator 2
 4613 000c 6B4A     		ldr	r2, .L450
 4614 000e 9342     		cmp	r3, r2
 4615 0010 7CD0     		beq	.L447
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4616              		.loc 1 1754 0
 4617 0012 6B4A     		ldr	r2, .L450+4
 4618              	.L415:
 4619              	.LVL414:
 4620              	.LBB632:
 4621              	.LBB633:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4622              		.loc 2 6387 0 is_stmt 1 discriminator 6
 4623 0014 9568     		ldr	r5, [r2, #8]
 4624 0016 05F01F05 		and	r5, r5, #31
 4625              	.LVL415:
 4626              	.LBE633:
 4627              	.LBE632:
 4628              	.LBB634:
 4629              	.LBB635:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4630              		.loc 2 6846 0 discriminator 6
 4631 001a 9B68     		ldr	r3, [r3, #8]
 4632              	.LVL416:
 4633 001c 13F0040F 		tst	r3, #4
 4634 0020 40F0C680 		bne	.L437
 4635              	.LVL417:
 4636              	.LBE635:
 4637              	.LBE634:
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4638              		.loc 1 1764 0
 4639 0024 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 4640 0028 012B     		cmp	r3, #1
 4641 002a 00F0C480 		beq	.L438
 4642 002e 0446     		mov	r4, r0
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4643              		.loc 1 1764 0 is_stmt 0 discriminator 2
 4644 0030 0123     		movs	r3, #1
 4645 0032 80F85830 		strb	r3, [r0, #88]
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4646              		.loc 1 1767 0 is_stmt 1 discriminator 2
 4647 0036 FFF7FEFF 		bl	ADC_Enable
 4648              	.LVL418:
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4649              		.loc 1 1770 0 discriminator 2
 4650 003a 0346     		mov	r3, r0
ARM GAS  /tmp/cceGX4yx.s 			page 317


 4651 003c 0028     		cmp	r0, #0
 4652 003e 40F0B380 		bne	.L417
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4653              		.loc 1 1775 0
 4654 0042 E26D     		ldr	r2, [r4, #92]
 4655 0044 22F47062 		bic	r2, r2, #3840
 4656 0048 22F00102 		bic	r2, r2, #1
 4657 004c 42F48072 		orr	r2, r2, #256
 4658 0050 E265     		str	r2, [r4, #92]
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4659              		.loc 1 1783 0
 4660 0052 2268     		ldr	r2, [r4]
 4661 0054 5949     		ldr	r1, .L450
 4662 0056 8A42     		cmp	r2, r1
 4663 0058 60D0     		beq	.L439
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4664              		.loc 1 1783 0 is_stmt 0 discriminator 1
 4665 005a 01F58061 		add	r1, r1, #1024
 4666 005e 8A42     		cmp	r2, r1
 4667 0060 59D0     		beq	.L448
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4668              		.loc 1 1783 0
 4669 0062 1146     		mov	r1, r2
 4670              	.L418:
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4671              		.loc 1 1783 0 discriminator 8
 4672 0064 8A42     		cmp	r2, r1
 4673 0066 00D0     		beq	.L419
1784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
 4674              		.loc 1 1784 0 is_stmt 1
 4675 0068 1DB9     		cbnz	r5, .L420
 4676              	.L419:
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4677              		.loc 1 1787 0
 4678 006a E16D     		ldr	r1, [r4, #92]
 4679 006c 21F48011 		bic	r1, r1, #1048576
 4680 0070 E165     		str	r1, [r4, #92]
 4681              	.L420:
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4682              		.loc 1 1793 0
 4683 0072 E16D     		ldr	r1, [r4, #92]
 4684 0074 11F4805F 		tst	r1, #4096
 4685 0078 53D0     		beq	.L421
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4686              		.loc 1 1796 0
 4687 007a 216E     		ldr	r1, [r4, #96]
 4688 007c 21F00601 		bic	r1, r1, #6
 4689 0080 2166     		str	r1, [r4, #96]
 4690              	.L422:
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4691              		.loc 1 1806 0
 4692 0082 1C21     		movs	r1, #28
 4693 0084 1160     		str	r1, [r2]
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4694              		.loc 1 1811 0
 4695 0086 0022     		movs	r2, #0
 4696 0088 84F85820 		strb	r2, [r4, #88]
ARM GAS  /tmp/cceGX4yx.s 			page 318


1814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4697              		.loc 1 1814 0
 4698 008c 2168     		ldr	r1, [r4]
 4699 008e 4A68     		ldr	r2, [r1, #4]
 4700 0090 22F01C02 		bic	r2, r2, #28
 4701 0094 4A60     		str	r2, [r1, #4]
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4702              		.loc 1 1817 0
 4703 0096 A269     		ldr	r2, [r4, #24]
 4704 0098 082A     		cmp	r2, #8
 4705 009a 45D1     		bne	.L443
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 4706              		.loc 1 1820 0
 4707 009c 2168     		ldr	r1, [r4]
 4708 009e 4A68     		ldr	r2, [r1, #4]
 4709 00a0 42F00802 		orr	r2, r2, #8
 4710 00a4 4A60     		str	r2, [r1, #4]
 4711              	.L425:
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4712              		.loc 1 1832 0
 4713 00a6 E26B     		ldr	r2, [r4, #60]
 4714 00a8 22B9     		cbnz	r2, .L426
1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4715              		.loc 1 1834 0
 4716 00aa 2168     		ldr	r1, [r4]
 4717 00ac 4A68     		ldr	r2, [r1, #4]
 4718 00ae 42F01002 		orr	r2, r2, #16
 4719 00b2 4A60     		str	r2, [r1, #4]
 4720              	.L426:
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4721              		.loc 1 1846 0
 4722 00b4 2268     		ldr	r2, [r4]
 4723 00b6 4149     		ldr	r1, .L450
 4724 00b8 8A42     		cmp	r2, r1
 4725 00ba 3ED0     		beq	.L441
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4726              		.loc 1 1846 0 is_stmt 0 discriminator 1
 4727 00bc 01F58061 		add	r1, r1, #1024
 4728 00c0 8A42     		cmp	r2, r1
 4729 00c2 37D0     		beq	.L449
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4730              		.loc 1 1846 0
 4731 00c4 1146     		mov	r1, r2
 4732              	.L427:
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4733              		.loc 1 1846 0 discriminator 8
 4734 00c6 8A42     		cmp	r2, r1
 4735 00c8 3AD0     		beq	.L428
1847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4736              		.loc 1 1847 0 is_stmt 1
 4737 00ca 002D     		cmp	r5, #0
 4738 00cc 38D0     		beq	.L428
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 4739              		.loc 1 1848 0
 4740 00ce 052D     		cmp	r5, #5
 4741 00d0 36D0     		beq	.L428
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
ARM GAS  /tmp/cceGX4yx.s 			page 319


 4742              		.loc 1 1849 0
 4743 00d2 092D     		cmp	r5, #9
 4744 00d4 34D0     		beq	.L428
1881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
 4745              		.loc 1 1881 0
 4746 00d6 E06D     		ldr	r0, [r4, #92]
 4747              	.LVL419:
 4748 00d8 40F48010 		orr	r0, r0, #1048576
 4749 00dc E065     		str	r0, [r4, #92]
 4750              	.LVL420:
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4751              		.loc 1 1885 0
 4752 00de C968     		ldr	r1, [r1, #12]
 4753              	.LVL421:
 4754 00e0 11F0007F 		tst	r1, #33554432
 4755 00e4 65D0     		beq	.L416
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
 4756              		.loc 1 1889 0
 4757 00e6 E16D     		ldr	r1, [r4, #92]
 4758 00e8 21F44051 		bic	r1, r1, #12288
 4759 00ec 41F48051 		orr	r1, r1, #4096
 4760 00f0 E165     		str	r1, [r4, #92]
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 4761              		.loc 1 1891 0
 4762 00f2 A169     		ldr	r1, [r4, #24]
 4763 00f4 0829     		cmp	r1, #8
 4764 00f6 4DD1     		bne	.L445
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4765              		.loc 1 1894 0
 4766 00f8 5168     		ldr	r1, [r2, #4]
 4767 00fa 21F02001 		bic	r1, r1, #32
 4768 00fe 5160     		str	r1, [r2, #4]
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4769              		.loc 1 1895 0
 4770 0100 2168     		ldr	r1, [r4]
 4771 0102 4A68     		ldr	r2, [r1, #4]
 4772 0104 42F04002 		orr	r2, r2, #64
 4773 0108 4A60     		str	r2, [r1, #4]
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 4774              		.loc 1 1896 0
 4775 010a 52E0     		b	.L416
 4776              	.LVL422:
 4777              	.L447:
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4778              		.loc 1 1754 0
 4779 010c 02F50072 		add	r2, r2, #512
 4780 0110 80E7     		b	.L415
 4781              	.L435:
 4782 0112 2C4A     		ldr	r2, .L450+8
 4783 0114 7EE7     		b	.L415
 4784              	.LVL423:
 4785              	.L448:
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4786              		.loc 1 1783 0
 4787 0116 A1F58071 		sub	r1, r1, #256
 4788 011a A3E7     		b	.L418
 4789              	.L439:
ARM GAS  /tmp/cceGX4yx.s 			page 320


 4790 011c 4FF0A041 		mov	r1, #1342177280
 4791 0120 A0E7     		b	.L418
 4792              	.L421:
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4793              		.loc 1 1801 0
 4794 0122 0021     		movs	r1, #0
 4795 0124 2166     		str	r1, [r4, #96]
 4796 0126 ACE7     		b	.L422
 4797              	.L443:
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 4798              		.loc 1 1824 0
 4799 0128 2168     		ldr	r1, [r4]
 4800 012a 4A68     		ldr	r2, [r1, #4]
 4801 012c 42F00402 		orr	r2, r2, #4
 4802 0130 4A60     		str	r2, [r1, #4]
1825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4803              		.loc 1 1825 0
 4804 0132 B8E7     		b	.L425
 4805              	.L449:
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4806              		.loc 1 1846 0
 4807 0134 A1F58071 		sub	r1, r1, #256
 4808 0138 C5E7     		b	.L427
 4809              	.L441:
 4810 013a 4FF0A041 		mov	r1, #1342177280
 4811 013e C2E7     		b	.L427
 4812              	.L428:
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4813              		.loc 1 1853 0
 4814 0140 D168     		ldr	r1, [r2, #12]
 4815 0142 11F0007F 		tst	r1, #33554432
 4816 0146 11D0     		beq	.L430
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4817              		.loc 1 1855 0
 4818 0148 E16D     		ldr	r1, [r4, #92]
 4819 014a 21F44051 		bic	r1, r1, #12288
 4820 014e 41F48051 		orr	r1, r1, #4096
 4821 0152 E165     		str	r1, [r4, #92]
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 4822              		.loc 1 1861 0
 4823 0154 A169     		ldr	r1, [r4, #24]
 4824 0156 0829     		cmp	r1, #8
 4825 0158 12D1     		bne	.L444
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4826              		.loc 1 1864 0
 4827 015a 5168     		ldr	r1, [r2, #4]
 4828 015c 21F02001 		bic	r1, r1, #32
 4829 0160 5160     		str	r1, [r2, #4]
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4830              		.loc 1 1865 0
 4831 0162 2168     		ldr	r1, [r4]
 4832 0164 4A68     		ldr	r2, [r1, #4]
 4833 0166 42F04002 		orr	r2, r2, #64
 4834 016a 4A60     		str	r2, [r1, #4]
 4835              	.L430:
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4836              		.loc 1 1876 0
ARM GAS  /tmp/cceGX4yx.s 			page 321


 4837 016c 2168     		ldr	r1, [r4]
 4838              	.LVL424:
 4839              	.LBB636:
 4840              	.LBB637:
6813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4841              		.loc 2 6813 0
 4842 016e 8A68     		ldr	r2, [r1, #8]
 4843 0170 22F00042 		bic	r2, r2, #-2147483648
 4844 0174 22F03F02 		bic	r2, r2, #63
 4845 0178 42F00402 		orr	r2, r2, #4
 4846 017c 8A60     		str	r2, [r1, #8]
 4847 017e 18E0     		b	.L416
 4848              	.LVL425:
 4849              	.L444:
 4850              	.LBE637:
 4851              	.LBE636:
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4852              		.loc 1 1869 0
 4853 0180 5168     		ldr	r1, [r2, #4]
 4854 0182 21F04001 		bic	r1, r1, #64
 4855 0186 5160     		str	r1, [r2, #4]
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4856              		.loc 1 1870 0
 4857 0188 2168     		ldr	r1, [r4]
 4858 018a 4A68     		ldr	r2, [r1, #4]
 4859 018c 42F02002 		orr	r2, r2, #32
 4860 0190 4A60     		str	r2, [r1, #4]
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4861              		.loc 1 1871 0
 4862 0192 EBE7     		b	.L430
 4863              	.LVL426:
 4864              	.L445:
1899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4865              		.loc 1 1899 0
 4866 0194 5168     		ldr	r1, [r2, #4]
 4867 0196 21F04001 		bic	r1, r1, #64
 4868 019a 5160     		str	r1, [r2, #4]
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4869              		.loc 1 1900 0
 4870 019c 2168     		ldr	r1, [r4]
 4871 019e 4A68     		ldr	r2, [r1, #4]
 4872 01a0 42F02002 		orr	r2, r2, #32
 4873 01a4 4A60     		str	r2, [r1, #4]
1901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4874              		.loc 1 1901 0
 4875 01a6 04E0     		b	.L416
 4876              	.LVL427:
 4877              	.L417:
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4878              		.loc 1 1936 0
 4879 01a8 0022     		movs	r2, #0
 4880 01aa 84F85820 		strb	r2, [r4, #88]
 4881 01ae 00E0     		b	.L416
 4882              	.LVL428:
 4883              	.L437:
1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4884              		.loc 1 1942 0
ARM GAS  /tmp/cceGX4yx.s 			page 322


 4885 01b0 0223     		movs	r3, #2
 4886              	.LVL429:
 4887              	.L416:
1947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4888              		.loc 1 1947 0
 4889 01b2 1846     		mov	r0, r3
 4890 01b4 38BD     		pop	{r3, r4, r5, pc}
 4891              	.LVL430:
 4892              	.L438:
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4893              		.loc 1 1764 0
 4894 01b6 0223     		movs	r3, #2
 4895 01b8 FBE7     		b	.L416
 4896              	.L451:
 4897 01ba 00BF     		.align	2
 4898              	.L450:
 4899 01bc 00010050 		.word	1342177536
 4900 01c0 00070050 		.word	1342179072
 4901 01c4 00030050 		.word	1342178048
 4902              		.cfi_endproc
 4903              	.LFE337:
 4905              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 4906              		.align	1
 4907              		.global	HAL_ADC_Start_DMA
 4908              		.syntax unified
 4909              		.thumb
 4910              		.thumb_func
 4911              		.fpu fpv4-sp-d16
 4913              	HAL_ADC_Start_DMA:
 4914              	.LFB339:
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4915              		.loc 1 2010 0
 4916              		.cfi_startproc
 4917              		@ args = 0, pretend = 0, frame = 0
 4918              		@ frame_needed = 0, uses_anonymous_args = 0
 4919              	.LVL431:
 4920 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4921              	.LCFI23:
 4922              		.cfi_def_cfa_offset 24
 4923              		.cfi_offset 3, -24
 4924              		.cfi_offset 4, -20
 4925              		.cfi_offset 5, -16
 4926              		.cfi_offset 6, -12
 4927              		.cfi_offset 7, -8
 4928              		.cfi_offset 14, -4
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4929              		.loc 1 2013 0
 4930 0002 0468     		ldr	r4, [r0]
 4931 0004 B4F1A04F 		cmp	r4, #1342177280
 4932 0008 1ED0     		beq	.L463
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4933              		.loc 1 2013 0 is_stmt 0 discriminator 2
 4934 000a 434B     		ldr	r3, .L472
 4935 000c 9C42     		cmp	r4, r3
 4936 000e 18D0     		beq	.L470
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4937              		.loc 1 2013 0
ARM GAS  /tmp/cceGX4yx.s 			page 323


 4938 0010 424B     		ldr	r3, .L472+4
 4939              	.L453:
 4940              	.LVL432:
 4941              	.LBB638:
 4942              	.LBB639:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4943              		.loc 2 6387 0 is_stmt 1 discriminator 6
 4944 0012 9D68     		ldr	r5, [r3, #8]
 4945 0014 05F01F05 		and	r5, r5, #31
 4946              	.LVL433:
 4947              	.LBE639:
 4948              	.LBE638:
 4949              	.LBB640:
 4950              	.LBB641:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4951              		.loc 2 6846 0 discriminator 6
 4952 0018 A368     		ldr	r3, [r4, #8]
 4953 001a 13F0040F 		tst	r3, #4
 4954 001e 75D1     		bne	.L465
 4955              	.LVL434:
 4956              	.LBE641:
 4957              	.LBE640:
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4958              		.loc 1 2023 0
 4959 0020 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 4960 0024 012B     		cmp	r3, #1
 4961 0026 74D0     		beq	.L466
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4962              		.loc 1 2023 0 is_stmt 0 discriminator 2
 4963 0028 0123     		movs	r3, #1
 4964 002a 80F85830 		strb	r3, [r0, #88]
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4965              		.loc 1 2028 0 is_stmt 1 discriminator 2
 4966 002e 6DB1     		cbz	r5, .L455
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 4967              		.loc 1 2029 0
 4968 0030 052D     		cmp	r5, #5
 4969 0032 0BD0     		beq	.L455
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 4970              		.loc 1 2030 0
 4971 0034 092D     		cmp	r5, #9
 4972 0036 09D0     		beq	.L455
 4973              	.LVL435:
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4974              		.loc 1 2124 0
 4975 0038 0023     		movs	r3, #0
 4976 003a 80F85830 		strb	r3, [r0, #88]
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
 4977              		.loc 1 2122 0
 4978 003e 0123     		movs	r3, #1
 4979 0040 65E0     		b	.L454
 4980              	.LVL436:
 4981              	.L470:
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4982              		.loc 1 2013 0
 4983 0042 03F50073 		add	r3, r3, #512
 4984 0046 E4E7     		b	.L453
ARM GAS  /tmp/cceGX4yx.s 			page 324


 4985              	.L463:
 4986 0048 354B     		ldr	r3, .L472+8
 4987 004a E2E7     		b	.L453
 4988              	.L455:
 4989 004c 1746     		mov	r7, r2
 4990 004e 0E46     		mov	r6, r1
 4991 0050 0446     		mov	r4, r0
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4992              		.loc 1 2035 0
 4993 0052 FFF7FEFF 		bl	ADC_Enable
 4994              	.LVL437:
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4995              		.loc 1 2038 0
 4996 0056 0346     		mov	r3, r0
 4997 0058 0028     		cmp	r0, #0
 4998 005a 53D1     		bne	.L457
2043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 4999              		.loc 1 2043 0
 5000 005c E36D     		ldr	r3, [r4, #92]
 5001 005e 23F47063 		bic	r3, r3, #3840
 5002 0062 23F00103 		bic	r3, r3, #1
 5003 0066 43F48073 		orr	r3, r3, #256
 5004 006a E365     		str	r3, [r4, #92]
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5005              		.loc 1 2051 0
 5006 006c 2368     		ldr	r3, [r4]
 5007 006e 2A4A     		ldr	r2, .L472
 5008 0070 9342     		cmp	r3, r2
 5009 0072 41D0     		beq	.L467
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5010              		.loc 1 2051 0 is_stmt 0 discriminator 1
 5011 0074 02F58062 		add	r2, r2, #1024
 5012 0078 9342     		cmp	r3, r2
 5013 007a 3AD0     		beq	.L471
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5014              		.loc 1 2051 0
 5015 007c 1A46     		mov	r2, r3
 5016              	.L458:
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5017              		.loc 1 2051 0 discriminator 8
 5018 007e 9342     		cmp	r3, r2
 5019 0080 00D0     		beq	.L459
2052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            )
 5020              		.loc 1 2052 0 is_stmt 1
 5021 0082 1DB9     		cbnz	r5, .L460
 5022              	.L459:
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5023              		.loc 1 2055 0
 5024 0084 E36D     		ldr	r3, [r4, #92]
 5025 0086 23F48013 		bic	r3, r3, #1048576
 5026 008a E365     		str	r3, [r4, #92]
 5027              	.L460:
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5028              		.loc 1 2060 0
 5029 008c E36D     		ldr	r3, [r4, #92]
 5030 008e 13F4805F 		tst	r3, #4096
 5031 0092 34D0     		beq	.L461
ARM GAS  /tmp/cceGX4yx.s 			page 325


2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5032              		.loc 1 2063 0
 5033 0094 236E     		ldr	r3, [r4, #96]
 5034 0096 23F00603 		bic	r3, r3, #6
 5035 009a 2366     		str	r3, [r4, #96]
 5036              	.L462:
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5037              		.loc 1 2072 0
 5038 009c 636D     		ldr	r3, [r4, #84]
 5039 009e 214A     		ldr	r2, .L472+12
 5040 00a0 DA62     		str	r2, [r3, #44]
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5041              		.loc 1 2075 0
 5042 00a2 636D     		ldr	r3, [r4, #84]
 5043 00a4 204A     		ldr	r2, .L472+16
 5044 00a6 1A63     		str	r2, [r3, #48]
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5045              		.loc 1 2078 0
 5046 00a8 636D     		ldr	r3, [r4, #84]
 5047 00aa 204A     		ldr	r2, .L472+20
 5048 00ac 5A63     		str	r2, [r3, #52]
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5049              		.loc 1 2087 0
 5050 00ae 2368     		ldr	r3, [r4]
 5051 00b0 1C22     		movs	r2, #28
 5052 00b2 1A60     		str	r2, [r3]
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5053              		.loc 1 2092 0
 5054 00b4 0023     		movs	r3, #0
 5055 00b6 84F85830 		strb	r3, [r4, #88]
2097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5056              		.loc 1 2097 0
 5057 00ba 2268     		ldr	r2, [r4]
 5058 00bc 5368     		ldr	r3, [r2, #4]
 5059 00be 43F01003 		orr	r3, r3, #16
 5060 00c2 5360     		str	r3, [r2, #4]
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5061              		.loc 1 2100 0
 5062 00c4 2268     		ldr	r2, [r4]
 5063 00c6 D368     		ldr	r3, [r2, #12]
 5064 00c8 43F00103 		orr	r3, r3, #1
 5065 00cc D360     		str	r3, [r2, #12]
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5066              		.loc 1 2103 0
 5067 00ce 2168     		ldr	r1, [r4]
 5068 00d0 3B46     		mov	r3, r7
 5069 00d2 3246     		mov	r2, r6
 5070 00d4 4031     		adds	r1, r1, #64
 5071 00d6 606D     		ldr	r0, [r4, #84]
 5072              	.LVL438:
 5073 00d8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5074              	.LVL439:
 5075 00dc 0346     		mov	r3, r0
 5076              	.LVL440:
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5077              		.loc 1 2110 0
 5078 00de 2168     		ldr	r1, [r4]
ARM GAS  /tmp/cceGX4yx.s 			page 326


 5079              	.LVL441:
 5080              	.LBB642:
 5081              	.LBB643:
6813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5082              		.loc 2 6813 0
 5083 00e0 8A68     		ldr	r2, [r1, #8]
 5084 00e2 22F00042 		bic	r2, r2, #-2147483648
 5085 00e6 22F03F02 		bic	r2, r2, #63
 5086 00ea 42F00402 		orr	r2, r2, #4
 5087 00ee 8A60     		str	r2, [r1, #8]
 5088 00f0 0DE0     		b	.L454
 5089              	.LVL442:
 5090              	.L471:
 5091              	.LBE643:
 5092              	.LBE642:
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5093              		.loc 1 2051 0
 5094 00f2 A2F58072 		sub	r2, r2, #256
 5095 00f6 C2E7     		b	.L458
 5096              	.L467:
 5097 00f8 4FF0A042 		mov	r2, #1342177280
 5098 00fc BFE7     		b	.L458
 5099              	.L461:
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5100              		.loc 1 2068 0
 5101 00fe 0023     		movs	r3, #0
 5102 0100 2366     		str	r3, [r4, #96]
 5103 0102 CBE7     		b	.L462
 5104              	.L457:
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5105              		.loc 1 2115 0
 5106 0104 0022     		movs	r2, #0
 5107 0106 84F85820 		strb	r2, [r4, #88]
 5108 010a 00E0     		b	.L454
 5109              	.LVL443:
 5110              	.L465:
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5111              		.loc 1 2130 0
 5112 010c 0223     		movs	r3, #2
 5113              	.LVL444:
 5114              	.L454:
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5115              		.loc 1 2135 0
 5116 010e 1846     		mov	r0, r3
 5117 0110 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5118              	.LVL445:
 5119              	.L466:
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5120              		.loc 1 2023 0
 5121 0112 0223     		movs	r3, #2
 5122 0114 FBE7     		b	.L454
 5123              	.L473:
 5124 0116 00BF     		.align	2
 5125              	.L472:
 5126 0118 00010050 		.word	1342177536
 5127 011c 00070050 		.word	1342179072
 5128 0120 00030050 		.word	1342178048
ARM GAS  /tmp/cceGX4yx.s 			page 327


 5129 0124 00000000 		.word	ADC_DMAConvCplt
 5130 0128 00000000 		.word	ADC_DMAHalfConvCplt
 5131 012c 00000000 		.word	ADC_DMAError
 5132              		.cfi_endproc
 5133              	.LFE339:
 5135              		.section	.text.ADC_Disable,"ax",%progbits
 5136              		.align	1
 5137              		.global	ADC_Disable
 5138              		.syntax unified
 5139              		.thumb
 5140              		.thumb_func
 5141              		.fpu fpv4-sp-d16
 5143              	ADC_Disable:
 5144              	.LFB355:
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 5145              		.loc 1 3502 0
 5146              		.cfi_startproc
 5147              		@ args = 0, pretend = 0, frame = 0
 5148              		@ frame_needed = 0, uses_anonymous_args = 0
 5149              	.LVL446:
 5150 0000 38B5     		push	{r3, r4, r5, lr}
 5151              	.LCFI24:
 5152              		.cfi_def_cfa_offset 16
 5153              		.cfi_offset 3, -16
 5154              		.cfi_offset 4, -12
 5155              		.cfi_offset 5, -8
 5156              		.cfi_offset 14, -4
3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5157              		.loc 1 3504 0
 5158 0002 0368     		ldr	r3, [r0]
 5159              	.LVL447:
 5160              	.LBB644:
 5161              	.LBB645:
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5162              		.loc 2 6735 0
 5163 0004 9A68     		ldr	r2, [r3, #8]
 5164 0006 12F0020F 		tst	r2, #2
 5165 000a 15D0     		beq	.L480
 5166 000c 0121     		movs	r1, #1
 5167              	.L475:
 5168              	.LVL448:
 5169              	.LBE645:
 5170              	.LBE644:
 5171              	.LBB647:
 5172              	.LBB648:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5173              		.loc 2 6724 0
 5174 000e 9A68     		ldr	r2, [r3, #8]
 5175 0010 12F0010F 		tst	r2, #1
 5176 0014 3CD0     		beq	.L481
 5177              	.LVL449:
 5178              	.LBE648:
 5179              	.LBE647:
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 5180              		.loc 1 3510 0
 5181 0016 0029     		cmp	r1, #0
 5182 0018 3CD1     		bne	.L482
ARM GAS  /tmp/cceGX4yx.s 			page 328


3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5183              		.loc 1 3514 0
 5184 001a 9A68     		ldr	r2, [r3, #8]
 5185 001c 02F00D02 		and	r2, r2, #13
 5186 0020 012A     		cmp	r2, #1
 5187 0022 0BD0     		beq	.L484
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5188              		.loc 1 3523 0
 5189 0024 C36D     		ldr	r3, [r0, #92]
 5190 0026 43F01003 		orr	r3, r3, #16
 5191 002a C365     		str	r3, [r0, #92]
3526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5192              		.loc 1 3526 0
 5193 002c 036E     		ldr	r3, [r0, #96]
 5194 002e 43F00103 		orr	r3, r3, #1
 5195 0032 0366     		str	r3, [r0, #96]
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5196              		.loc 1 3528 0
 5197 0034 0120     		movs	r0, #1
 5198              	.LVL450:
 5199 0036 2CE0     		b	.L476
 5200              	.LVL451:
 5201              	.L480:
 5202              	.LBB649:
 5203              	.LBB646:
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5204              		.loc 2 6735 0
 5205 0038 0021     		movs	r1, #0
 5206 003a E8E7     		b	.L475
 5207              	.LVL452:
 5208              	.L484:
 5209 003c 0446     		mov	r4, r0
 5210              	.LVL453:
 5211              	.LBE646:
 5212              	.LBE649:
 5213              	.LBB650:
 5214              	.LBB651:
6708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5215              		.loc 2 6708 0
 5216 003e 9A68     		ldr	r2, [r3, #8]
 5217 0040 22F00042 		bic	r2, r2, #-2147483648
 5218 0044 22F03F02 		bic	r2, r2, #63
 5219 0048 42F00202 		orr	r2, r2, #2
 5220 004c 9A60     		str	r2, [r3, #8]
 5221              	.LVL454:
 5222              	.LBE651:
 5223              	.LBE650:
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5224              		.loc 1 3518 0
 5225 004e 0368     		ldr	r3, [r0]
 5226 0050 0322     		movs	r2, #3
 5227 0052 1A60     		str	r2, [r3]
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5228              		.loc 1 3533 0
 5229 0054 FFF7FEFF 		bl	HAL_GetTick
 5230              	.LVL455:
 5231 0058 0546     		mov	r5, r0
ARM GAS  /tmp/cceGX4yx.s 			page 329


 5232              	.LVL456:
 5233              	.L478:
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5234              		.loc 1 3535 0
 5235 005a 2368     		ldr	r3, [r4]
 5236 005c 9B68     		ldr	r3, [r3, #8]
 5237 005e 13F0010F 		tst	r3, #1
 5238 0062 13D0     		beq	.L485
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5239              		.loc 1 3537 0
 5240 0064 FFF7FEFF 		bl	HAL_GetTick
 5241              	.LVL457:
 5242 0068 401B     		subs	r0, r0, r5
 5243 006a 0228     		cmp	r0, #2
 5244 006c F5D9     		bls	.L478
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5245              		.loc 1 3540 0
 5246 006e 2368     		ldr	r3, [r4]
 5247 0070 9B68     		ldr	r3, [r3, #8]
 5248 0072 13F0010F 		tst	r3, #1
 5249 0076 F0D0     		beq	.L478
3543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5250              		.loc 1 3543 0
 5251 0078 E36D     		ldr	r3, [r4, #92]
 5252 007a 43F01003 		orr	r3, r3, #16
 5253 007e E365     		str	r3, [r4, #92]
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5254              		.loc 1 3546 0
 5255 0080 236E     		ldr	r3, [r4, #96]
 5256 0082 43F00103 		orr	r3, r3, #1
 5257 0086 2366     		str	r3, [r4, #96]
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5258              		.loc 1 3548 0
 5259 0088 0120     		movs	r0, #1
 5260 008a 02E0     		b	.L476
 5261              	.L485:
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 5262              		.loc 1 3555 0
 5263 008c 0020     		movs	r0, #0
 5264 008e 00E0     		b	.L476
 5265              	.LVL458:
 5266              	.L481:
 5267 0090 0020     		movs	r0, #0
 5268              	.LVL459:
 5269              	.L476:
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5270              		.loc 1 3556 0
 5271 0092 38BD     		pop	{r3, r4, r5, pc}
 5272              	.LVL460:
 5273              	.L482:
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 5274              		.loc 1 3555 0
 5275 0094 0020     		movs	r0, #0
 5276              	.LVL461:
 5277 0096 FCE7     		b	.L476
 5278              		.cfi_endproc
 5279              	.LFE355:
ARM GAS  /tmp/cceGX4yx.s 			page 330


 5281              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 5282              		.align	1
 5283              		.global	HAL_ADC_DeInit
 5284              		.syntax unified
 5285              		.thumb
 5286              		.thumb_func
 5287              		.fpu fpv4-sp-d16
 5289              	HAL_ADC_DeInit:
 5290              	.LFB330:
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5291              		.loc 1 723 0
 5292              		.cfi_startproc
 5293              		@ args = 0, pretend = 0, frame = 0
 5294              		@ frame_needed = 0, uses_anonymous_args = 0
 5295              	.LVL462:
 5296 0000 38B5     		push	{r3, r4, r5, lr}
 5297              	.LCFI25:
 5298              		.cfi_def_cfa_offset 16
 5299              		.cfi_offset 3, -16
 5300              		.cfi_offset 4, -12
 5301              		.cfi_offset 5, -8
 5302              		.cfi_offset 14, -4
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5303              		.loc 1 727 0
 5304 0002 0028     		cmp	r0, #0
 5305 0004 00F00B81 		beq	.L500
 5306 0008 0446     		mov	r4, r0
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5307              		.loc 1 736 0
 5308 000a C36D     		ldr	r3, [r0, #92]
 5309 000c 43F00203 		orr	r3, r3, #2
 5310 0010 C365     		str	r3, [r0, #92]
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5311              		.loc 1 739 0
 5312 0012 0321     		movs	r1, #3
 5313 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5314              	.LVL463:
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5315              		.loc 1 747 0
 5316 0018 2268     		ldr	r2, [r4]
 5317 001a D368     		ldr	r3, [r2, #12]
 5318 001c 43F40013 		orr	r3, r3, #2097152
 5319 0020 D360     		str	r3, [r2, #12]
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5320              		.loc 1 750 0
 5321 0022 0546     		mov	r5, r0
 5322 0024 0028     		cmp	r0, #0
 5323 0026 00F0A680 		beq	.L511
 5324              	.L488:
 5325              	.LVL464:
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5326              		.loc 1 771 0
 5327 002a 2268     		ldr	r2, [r4]
 5328 002c 5368     		ldr	r3, [r2, #4]
 5329 002e 23F4FF63 		bic	r3, r3, #2040
 5330 0032 23F00703 		bic	r3, r3, #7
 5331 0036 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cceGX4yx.s 			page 331


 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 5332              		.loc 1 778 0
 5333 0038 2368     		ldr	r3, [r4]
 5334 003a 40F2FF72 		movw	r2, #2047
 5335 003e 1A60     		str	r2, [r3]
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 5336              		.loc 1 789 0
 5337 0040 2268     		ldr	r2, [r4]
 5338 0042 9368     		ldr	r3, [r2, #8]
 5339 0044 23F0A043 		bic	r3, r3, #1342177280
 5340 0048 9360     		str	r3, [r2, #8]
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5341              		.loc 1 790 0
 5342 004a 2268     		ldr	r2, [r4]
 5343 004c 9368     		ldr	r3, [r2, #8]
 5344 004e 43F00053 		orr	r3, r3, #536870912
 5345 0052 9360     		str	r3, [r2, #8]
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 5346              		.loc 1 793 0
 5347 0054 2268     		ldr	r2, [r4]
 5348 0056 D368     		ldr	r3, [r2, #12]
 5349 0058 23F0FF43 		bic	r3, r3, #2139095040
 5350 005c 23F4FF03 		bic	r3, r3, #8355840
 5351 0060 23F4FF43 		bic	r3, r3, #32640
 5352 0064 23F07B03 		bic	r3, r3, #123
 5353 0068 D360     		str	r3, [r2, #12]
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5354              		.loc 1 794 0
 5355 006a 2268     		ldr	r2, [r4]
 5356 006c D368     		ldr	r3, [r2, #12]
 5357 006e 43F00043 		orr	r3, r3, #-2147483648
 5358 0072 D360     		str	r3, [r2, #12]
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 5359              		.loc 1 797 0
 5360 0074 2268     		ldr	r2, [r4]
 5361 0076 1369     		ldr	r3, [r2, #16]
 5362 0078 23F4FF63 		bic	r3, r3, #2040
 5363 007c 23F00703 		bic	r3, r3, #7
 5364 0080 1361     		str	r3, [r2, #16]
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5365              		.loc 1 801 0
 5366 0082 2268     		ldr	r2, [r4]
 5367 0084 5369     		ldr	r3, [r2, #20]
 5368 0086 03F08043 		and	r3, r3, #1073741824
 5369 008a 5361     		str	r3, [r2, #20]
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 5370              		.loc 1 804 0
 5371 008c 2268     		ldr	r2, [r4]
 5372 008e 9369     		ldr	r3, [r2, #24]
 5373 0090 03F07843 		and	r3, r3, #-134217728
 5374 0094 9361     		str	r3, [r2, #24]
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5375              		.loc 1 809 0
 5376 0096 2268     		ldr	r2, [r4]
 5377 0098 136A     		ldr	r3, [r2, #32]
 5378 009a 03F0F023 		and	r3, r3, #-268374016
 5379 009e 1362     		str	r3, [r2, #32]
ARM GAS  /tmp/cceGX4yx.s 			page 332


 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5380              		.loc 1 812 0
 5381 00a0 2268     		ldr	r2, [r4]
 5382 00a2 536A     		ldr	r3, [r2, #36]
 5383 00a4 03F0FF23 		and	r3, r3, #-16711936
 5384 00a8 5362     		str	r3, [r2, #36]
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5385              		.loc 1 815 0
 5386 00aa 2268     		ldr	r2, [r4]
 5387 00ac 936A     		ldr	r3, [r2, #40]
 5388 00ae 03F0FF23 		and	r3, r3, #-16711936
 5389 00b2 9362     		str	r3, [r2, #40]
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 5390              		.loc 1 818 0
 5391 00b4 2268     		ldr	r2, [r4]
 5392 00b6 116B     		ldr	r1, [r2, #48]
 5393 00b8 5A4B     		ldr	r3, .L514
 5394 00ba 0B40     		ands	r3, r3, r1
 5395 00bc 1363     		str	r3, [r2, #48]
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5396              		.loc 1 822 0
 5397 00be 2368     		ldr	r3, [r4]
 5398 00c0 5A6B     		ldr	r2, [r3, #52]
 5399 00c2 5949     		ldr	r1, .L514+4
 5400 00c4 0A40     		ands	r2, r2, r1
 5401 00c6 5A63     		str	r2, [r3, #52]
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 5402              		.loc 1 826 0
 5403 00c8 2268     		ldr	r2, [r4]
 5404 00ca 936B     		ldr	r3, [r2, #56]
 5405 00cc 0B40     		ands	r3, r3, r1
 5406 00ce 9363     		str	r3, [r2, #56]
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5407              		.loc 1 830 0
 5408 00d0 2268     		ldr	r2, [r4]
 5409 00d2 D36B     		ldr	r3, [r2, #60]
 5410 00d4 23F4FB63 		bic	r3, r3, #2008
 5411 00d8 23F00703 		bic	r3, r3, #7
 5412 00dc D363     		str	r3, [r2, #60]
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR2 */
 5413              		.loc 1 838 0
 5414 00de 2168     		ldr	r1, [r4]
 5415 00e0 0A6E     		ldr	r2, [r1, #96]
 5416 00e2 524B     		ldr	r3, .L514+8
 5417 00e4 1A40     		ands	r2, r2, r3
 5418 00e6 0A66     		str	r2, [r1, #96]
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR3 */
 5419              		.loc 1 840 0
 5420 00e8 2168     		ldr	r1, [r4]
 5421 00ea 4A6E     		ldr	r2, [r1, #100]
 5422 00ec 1A40     		ands	r2, r2, r3
 5423 00ee 4A66     		str	r2, [r1, #100]
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR4 */
 5424              		.loc 1 842 0
 5425 00f0 2168     		ldr	r1, [r4]
 5426 00f2 8A6E     		ldr	r2, [r1, #104]
 5427 00f4 1A40     		ands	r2, r2, r3
ARM GAS  /tmp/cceGX4yx.s 			page 333


 5428 00f6 8A66     		str	r2, [r1, #104]
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5429              		.loc 1 844 0
 5430 00f8 2168     		ldr	r1, [r4]
 5431 00fa CA6E     		ldr	r2, [r1, #108]
 5432 00fc 1340     		ands	r3, r3, r2
 5433 00fe CB66     		str	r3, [r1, #108]
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5434              		.loc 1 850 0
 5435 0100 2268     		ldr	r2, [r4]
 5436 0102 D2F8A030 		ldr	r3, [r2, #160]
 5437 0106 DB0C     		lsrs	r3, r3, #19
 5438 0108 DB04     		lsls	r3, r3, #19
 5439 010a C2F8A030 		str	r3, [r2, #160]
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5440              		.loc 1 853 0
 5441 010e 2268     		ldr	r2, [r4]
 5442 0110 D2F8A430 		ldr	r3, [r2, #164]
 5443 0114 DB0C     		lsrs	r3, r3, #19
 5444 0116 DB04     		lsls	r3, r3, #19
 5445 0118 C2F8A430 		str	r3, [r2, #164]
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5446              		.loc 1 856 0
 5447 011c 2268     		ldr	r2, [r4]
 5448 011e D2F8B030 		ldr	r3, [r2, #176]
 5449 0122 DB0C     		lsrs	r3, r3, #19
 5450 0124 DB04     		lsls	r3, r3, #19
 5451 0126 C2F8B030 		str	r3, [r2, #176]
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5452              		.loc 1 859 0
 5453 012a 2268     		ldr	r2, [r4]
 5454 012c D2F8B430 		ldr	r3, [r2, #180]
 5455 0130 23F07F13 		bic	r3, r3, #8323199
 5456 0134 C2F8B430 		str	r3, [r2, #180]
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5457              		.loc 1 866 0
 5458 0138 2368     		ldr	r3, [r4]
 5459 013a B3F1A04F 		cmp	r3, #1342177280
 5460 013e 24D0     		beq	.L489
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5461              		.loc 1 866 0 is_stmt 0 discriminator 2
 5462 0140 3B4A     		ldr	r2, .L514+12
 5463 0142 9342     		cmp	r3, r2
 5464 0144 21D0     		beq	.L489
 5465              	.LVL465:
 5466              	.LBB652:
 5467              	.LBB653:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5468              		.loc 2 6724 0 is_stmt 1
 5469 0146 3B4A     		ldr	r2, .L514+16
 5470 0148 9268     		ldr	r2, [r2, #8]
 5471 014a 12F0010F 		tst	r2, #1
 5472 014e 56D0     		beq	.L503
 5473 0150 0120     		movs	r0, #1
 5474              	.L494:
 5475              	.LVL466:
 5476              	.LBE653:
ARM GAS  /tmp/cceGX4yx.s 			page 334


 5477              	.LBE652:
 5478              	.LBB655:
 5479              	.LBB656:
 5480 0152 3949     		ldr	r1, .L514+20
 5481 0154 8968     		ldr	r1, [r1, #8]
 5482 0156 11F0010F 		tst	r1, #1
 5483 015a 52D0     		beq	.L504
 5484 015c 0122     		movs	r2, #1
 5485              	.L495:
 5486              	.LVL467:
 5487              	.LBE656:
 5488              	.LBE655:
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5489              		.loc 1 866 0
 5490 015e 0243     		orrs	r2, r2, r0
 5491              	.LVL468:
 5492              	.LBB658:
 5493              	.LBB659:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5494              		.loc 2 6724 0
 5495 0160 3649     		ldr	r1, .L514+24
 5496 0162 8968     		ldr	r1, [r1, #8]
 5497 0164 11F0010F 		tst	r1, #1
 5498 0168 4DD0     		beq	.L505
 5499 016a 0121     		movs	r1, #1
 5500              	.L496:
 5501              	.LVL469:
 5502              	.LBE659:
 5503              	.LBE658:
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5504              		.loc 1 866 0
 5505 016c 0A43     		orrs	r2, r2, r1
 5506 016e 0CBF     		ite	eq
 5507 0170 0122     		moveq	r2, #1
 5508 0172 0022     		movne	r2, #0
 5509 0174 1AE0     		b	.L493
 5510              	.LVL470:
 5511              	.L511:
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5512              		.loc 1 753 0
 5513 0176 2046     		mov	r0, r4
 5514              	.LVL471:
 5515 0178 FFF7FEFF 		bl	ADC_Disable
 5516              	.LVL472:
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5517              		.loc 1 756 0
 5518 017c 0546     		mov	r5, r0
 5519 017e 0028     		cmp	r0, #0
 5520 0180 7FF453AF 		bne	.L488
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5521              		.loc 1 759 0
 5522 0184 0123     		movs	r3, #1
 5523 0186 E365     		str	r3, [r4, #92]
 5524 0188 4FE7     		b	.L488
 5525              	.LVL473:
 5526              	.L489:
 5527              	.LBB661:
ARM GAS  /tmp/cceGX4yx.s 			page 335


 5528              	.LBB662:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5529              		.loc 2 6724 0
 5530 018a 4FF0A042 		mov	r2, #1342177280
 5531 018e 9268     		ldr	r2, [r2, #8]
 5532 0190 12F0010F 		tst	r2, #1
 5533 0194 2FD0     		beq	.L501
 5534 0196 0122     		movs	r2, #1
 5535              	.L491:
 5536              	.LVL474:
 5537              	.LBE662:
 5538              	.LBE661:
 5539              	.LBB664:
 5540              	.LBB665:
 5541 0198 2549     		ldr	r1, .L514+12
 5542 019a 8968     		ldr	r1, [r1, #8]
 5543 019c 11F0010F 		tst	r1, #1
 5544 01a0 2BD0     		beq	.L502
 5545 01a2 0121     		movs	r1, #1
 5546              	.L492:
 5547              	.LVL475:
 5548              	.LBE665:
 5549              	.LBE664:
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5550              		.loc 1 866 0
 5551 01a4 0A43     		orrs	r2, r1, r2
 5552 01a6 0CBF     		ite	eq
 5553 01a8 0122     		moveq	r2, #1
 5554 01aa 0022     		movne	r2, #0
 5555              	.L493:
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5556              		.loc 1 866 0 is_stmt 0 discriminator 6
 5557 01ac D2B1     		cbz	r2, .L497
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5558              		.loc 1 875 0 is_stmt 1
 5559 01ae B3F1A04F 		cmp	r3, #1342177280
 5560 01b2 2DD0     		beq	.L506
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5561              		.loc 1 875 0 is_stmt 0 discriminator 2
 5562 01b4 1E4A     		ldr	r2, .L514+12
 5563 01b6 9342     		cmp	r3, r2
 5564 01b8 27D0     		beq	.L512
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5565              		.loc 1 875 0
 5566 01ba 214A     		ldr	r2, .L514+28
 5567              	.L498:
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5568              		.loc 1 875 0 discriminator 6
 5569 01bc 9268     		ldr	r2, [r2, #8]
 5570 01be B3F1A04F 		cmp	r3, #1342177280
 5571 01c2 2AD0     		beq	.L508
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5572              		.loc 1 875 0 discriminator 8
 5573 01c4 1A49     		ldr	r1, .L514+12
 5574 01c6 8B42     		cmp	r3, r1
 5575 01c8 24D0     		beq	.L513
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/cceGX4yx.s 			page 336


 5576              		.loc 1 875 0
 5577 01ca 1D49     		ldr	r1, .L514+28
 5578              	.L499:
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5579              		.loc 1 875 0 discriminator 12
 5580 01cc 22F0FF72 		bic	r2, r2, #33423360
 5581 01d0 22F4F732 		bic	r2, r2, #126464
 5582 01d4 22F48F72 		bic	r2, r2, #286
 5583 01d8 22F00102 		bic	r2, r2, #1
 5584 01dc 8A60     		str	r2, [r1, #8]
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 5585              		.loc 1 895 0 is_stmt 1 discriminator 12
 5586 01de 2046     		mov	r0, r4
 5587 01e0 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 5588              	.LVL476:
 5589              	.L497:
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5590              		.loc 1 900 0
 5591 01e4 0023     		movs	r3, #0
 5592 01e6 2366     		str	r3, [r4, #96]
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5593              		.loc 1 903 0
 5594 01e8 6366     		str	r3, [r4, #100]
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5595              		.loc 1 904 0
 5596 01ea A366     		str	r3, [r4, #104]
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5597              		.loc 1 907 0
 5598 01ec E365     		str	r3, [r4, #92]
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5599              		.loc 1 910 0
 5600 01ee 84F85830 		strb	r3, [r4, #88]
 5601              	.LVL477:
 5602              	.L487:
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5603              		.loc 1 914 0
 5604 01f2 2846     		mov	r0, r5
 5605 01f4 38BD     		pop	{r3, r4, r5, pc}
 5606              	.LVL478:
 5607              	.L501:
 5608              	.LBB667:
 5609              	.LBB663:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5610              		.loc 2 6724 0
 5611 01f6 0022     		movs	r2, #0
 5612 01f8 CEE7     		b	.L491
 5613              	.LVL479:
 5614              	.L502:
 5615              	.LBE663:
 5616              	.LBE667:
 5617              	.LBB668:
 5618              	.LBB666:
 5619 01fa 0021     		movs	r1, #0
 5620 01fc D2E7     		b	.L492
 5621              	.LVL480:
 5622              	.L503:
 5623              	.LBE666:
ARM GAS  /tmp/cceGX4yx.s 			page 337


 5624              	.LBE668:
 5625              	.LBB669:
 5626              	.LBB654:
 5627 01fe 0020     		movs	r0, #0
 5628 0200 A7E7     		b	.L494
 5629              	.LVL481:
 5630              	.L504:
 5631              	.LBE654:
 5632              	.LBE669:
 5633              	.LBB670:
 5634              	.LBB657:
 5635 0202 0022     		movs	r2, #0
 5636 0204 ABE7     		b	.L495
 5637              	.LVL482:
 5638              	.L505:
 5639              	.LBE657:
 5640              	.LBE670:
 5641              	.LBB671:
 5642              	.LBB660:
 5643 0206 0021     		movs	r1, #0
 5644 0208 B0E7     		b	.L496
 5645              	.LVL483:
 5646              	.L512:
 5647              	.LBE660:
 5648              	.LBE671:
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5649              		.loc 1 875 0
 5650 020a 02F50072 		add	r2, r2, #512
 5651 020e D5E7     		b	.L498
 5652              	.L506:
 5653 0210 0C4A     		ldr	r2, .L514+32
 5654 0212 D3E7     		b	.L498
 5655              	.L513:
 5656 0214 01F50071 		add	r1, r1, #512
 5657 0218 D8E7     		b	.L499
 5658              	.L508:
 5659 021a 0A49     		ldr	r1, .L514+32
 5660 021c D6E7     		b	.L499
 5661              	.LVL484:
 5662              	.L500:
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5663              		.loc 1 729 0
 5664 021e 0125     		movs	r5, #1
 5665 0220 E7E7     		b	.L487
 5666              	.L515:
 5667 0222 00BF     		.align	2
 5668              	.L514:
 5669 0224 300882E0 		.word	-528349136
 5670 0228 200882E0 		.word	-528349152
 5671 022c 00F0FF03 		.word	67104768
 5672 0230 00010050 		.word	1342177536
 5673 0234 00040050 		.word	1342178304
 5674 0238 00050050 		.word	1342178560
 5675 023c 00060050 		.word	1342178816
 5676 0240 00070050 		.word	1342179072
 5677 0244 00030050 		.word	1342178048
 5678              		.cfi_endproc
ARM GAS  /tmp/cceGX4yx.s 			page 338


 5679              	.LFE330:
 5681              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 5682              		.align	1
 5683              		.global	HAL_ADC_Stop
 5684              		.syntax unified
 5685              		.thumb
 5686              		.thumb_func
 5687              		.fpu fpv4-sp-d16
 5689              	HAL_ADC_Stop:
 5690              	.LFB334:
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5691              		.loc 1 1364 0
 5692              		.cfi_startproc
 5693              		@ args = 0, pretend = 0, frame = 0
 5694              		@ frame_needed = 0, uses_anonymous_args = 0
 5695              	.LVL485:
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5696              		.loc 1 1371 0
 5697 0000 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 5698 0004 012B     		cmp	r3, #1
 5699 0006 1DD0     		beq	.L519
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5700              		.loc 1 1364 0 discriminator 2
 5701 0008 10B5     		push	{r4, lr}
 5702              	.LCFI26:
 5703              		.cfi_def_cfa_offset 8
 5704              		.cfi_offset 4, -8
 5705              		.cfi_offset 14, -4
 5706 000a 0446     		mov	r4, r0
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5707              		.loc 1 1371 0 discriminator 2
 5708 000c 0123     		movs	r3, #1
 5709 000e 80F85830 		strb	r3, [r0, #88]
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5710              		.loc 1 1374 0 discriminator 2
 5711 0012 0321     		movs	r1, #3
 5712 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5713              	.LVL486:
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5714              		.loc 1 1377 0 discriminator 2
 5715 0018 0346     		mov	r3, r0
 5716 001a 20B1     		cbz	r0, .L524
 5717              	.L518:
 5718              	.LVL487:
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5719              		.loc 1 1393 0
 5720 001c 0022     		movs	r2, #0
 5721 001e 84F85820 		strb	r2, [r4, #88]
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5722              		.loc 1 1397 0
 5723 0022 1846     		mov	r0, r3
 5724 0024 10BD     		pop	{r4, pc}
 5725              	.LVL488:
 5726              	.L524:
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5727              		.loc 1 1380 0
 5728 0026 2046     		mov	r0, r4
ARM GAS  /tmp/cceGX4yx.s 			page 339


 5729              	.LVL489:
 5730 0028 FFF7FEFF 		bl	ADC_Disable
 5731              	.LVL490:
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5732              		.loc 1 1383 0
 5733 002c 0346     		mov	r3, r0
 5734 002e 0028     		cmp	r0, #0
 5735 0030 F4D1     		bne	.L518
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5736              		.loc 1 1386 0
 5737 0032 E26D     		ldr	r2, [r4, #92]
 5738 0034 22F48852 		bic	r2, r2, #4352
 5739 0038 22F00102 		bic	r2, r2, #1
 5740 003c 42F00102 		orr	r2, r2, #1
 5741 0040 E265     		str	r2, [r4, #92]
 5742 0042 EBE7     		b	.L518
 5743              	.LVL491:
 5744              	.L519:
 5745              	.LCFI27:
 5746              		.cfi_def_cfa_offset 0
 5747              		.cfi_restore 4
 5748              		.cfi_restore 14
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5749              		.loc 1 1371 0
 5750 0044 0223     		movs	r3, #2
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5751              		.loc 1 1397 0
 5752 0046 1846     		mov	r0, r3
 5753              	.LVL492:
 5754 0048 7047     		bx	lr
 5755              		.cfi_endproc
 5756              	.LFE334:
 5758              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 5759              		.align	1
 5760              		.global	HAL_ADC_Stop_IT
 5761              		.syntax unified
 5762              		.thumb
 5763              		.thumb_func
 5764              		.fpu fpv4-sp-d16
 5766              	HAL_ADC_Stop_IT:
 5767              	.LFB338:
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5768              		.loc 1 1957 0
 5769              		.cfi_startproc
 5770              		@ args = 0, pretend = 0, frame = 0
 5771              		@ frame_needed = 0, uses_anonymous_args = 0
 5772              	.LVL493:
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5773              		.loc 1 1964 0
 5774 0000 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 5775 0004 012B     		cmp	r3, #1
 5776 0006 22D0     		beq	.L528
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5777              		.loc 1 1957 0 discriminator 2
 5778 0008 10B5     		push	{r4, lr}
 5779              	.LCFI28:
 5780              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cceGX4yx.s 			page 340


 5781              		.cfi_offset 4, -8
 5782              		.cfi_offset 14, -4
 5783 000a 0446     		mov	r4, r0
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5784              		.loc 1 1964 0 discriminator 2
 5785 000c 0123     		movs	r3, #1
 5786 000e 80F85830 		strb	r3, [r0, #88]
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5787              		.loc 1 1967 0 discriminator 2
 5788 0012 0321     		movs	r1, #3
 5789 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5790              	.LVL494:
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5791              		.loc 1 1970 0 discriminator 2
 5792 0018 0346     		mov	r3, r0
 5793 001a 20B1     		cbz	r0, .L533
 5794              	.L527:
 5795              	.LVL495:
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5796              		.loc 1 1990 0
 5797 001c 0022     		movs	r2, #0
 5798 001e 84F85820 		strb	r2, [r4, #88]
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5799              		.loc 1 1994 0
 5800 0022 1846     		mov	r0, r3
 5801 0024 10BD     		pop	{r4, pc}
 5802              	.LVL496:
 5803              	.L533:
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5804              		.loc 1 1974 0
 5805 0026 2268     		ldr	r2, [r4]
 5806 0028 5368     		ldr	r3, [r2, #4]
 5807 002a 23F01C03 		bic	r3, r3, #28
 5808 002e 5360     		str	r3, [r2, #4]
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5809              		.loc 1 1977 0
 5810 0030 2046     		mov	r0, r4
 5811              	.LVL497:
 5812 0032 FFF7FEFF 		bl	ADC_Disable
 5813              	.LVL498:
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5814              		.loc 1 1980 0
 5815 0036 0346     		mov	r3, r0
 5816 0038 0028     		cmp	r0, #0
 5817 003a EFD1     		bne	.L527
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5818              		.loc 1 1983 0
 5819 003c E26D     		ldr	r2, [r4, #92]
 5820 003e 22F48852 		bic	r2, r2, #4352
 5821 0042 22F00102 		bic	r2, r2, #1
 5822 0046 42F00102 		orr	r2, r2, #1
 5823 004a E265     		str	r2, [r4, #92]
 5824 004c E6E7     		b	.L527
 5825              	.LVL499:
 5826              	.L528:
 5827              	.LCFI29:
 5828              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cceGX4yx.s 			page 341


 5829              		.cfi_restore 4
 5830              		.cfi_restore 14
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5831              		.loc 1 1964 0
 5832 004e 0223     		movs	r3, #2
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5833              		.loc 1 1994 0
 5834 0050 1846     		mov	r0, r3
 5835              	.LVL500:
 5836 0052 7047     		bx	lr
 5837              		.cfi_endproc
 5838              	.LFE338:
 5840              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 5841              		.align	1
 5842              		.global	HAL_ADC_Stop_DMA
 5843              		.syntax unified
 5844              		.thumb
 5845              		.thumb_func
 5846              		.fpu fpv4-sp-d16
 5848              	HAL_ADC_Stop_DMA:
 5849              	.LFB340:
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5850              		.loc 1 2151 0
 5851              		.cfi_startproc
 5852              		@ args = 0, pretend = 0, frame = 0
 5853              		@ frame_needed = 0, uses_anonymous_args = 0
 5854              	.LVL501:
 5855 0000 38B5     		push	{r3, r4, r5, lr}
 5856              	.LCFI30:
 5857              		.cfi_def_cfa_offset 16
 5858              		.cfi_offset 3, -16
 5859              		.cfi_offset 4, -12
 5860              		.cfi_offset 5, -8
 5861              		.cfi_offset 14, -4
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5862              		.loc 1 2158 0
 5863 0002 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 5864 0006 012B     		cmp	r3, #1
 5865 0008 39D0     		beq	.L540
 5866 000a 0446     		mov	r4, r0
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5867              		.loc 1 2158 0 is_stmt 0 discriminator 2
 5868 000c 0123     		movs	r3, #1
 5869 000e 80F85830 		strb	r3, [r0, #88]
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5870              		.loc 1 2161 0 is_stmt 1 discriminator 2
 5871 0012 0321     		movs	r1, #3
 5872 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5873              	.LVL502:
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5874              		.loc 1 2164 0 discriminator 2
 5875 0018 0546     		mov	r5, r0
 5876 001a E8B9     		cbnz	r0, .L536
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5877              		.loc 1 2167 0
 5878 001c 2268     		ldr	r2, [r4]
 5879 001e D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/cceGX4yx.s 			page 342


 5880 0020 23F00103 		bic	r3, r3, #1
 5881 0024 D360     		str	r3, [r2, #12]
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5882              		.loc 1 2171 0
 5883 0026 606D     		ldr	r0, [r4, #84]
 5884              	.LVL503:
 5885 0028 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
 5886 002c DBB2     		uxtb	r3, r3
 5887 002e 022B     		cmp	r3, #2
 5888 0030 17D0     		beq	.L542
 5889              	.L537:
 5890              	.LVL504:
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5891              		.loc 1 2184 0
 5892 0032 2268     		ldr	r2, [r4]
 5893 0034 5368     		ldr	r3, [r2, #4]
 5894 0036 23F01003 		bic	r3, r3, #16
 5895 003a 5360     		str	r3, [r2, #4]
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5896              		.loc 1 2189 0
 5897 003c DDB9     		cbnz	r5, .L538
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5898              		.loc 1 2191 0
 5899 003e 2046     		mov	r0, r4
 5900 0040 FFF7FEFF 		bl	ADC_Disable
 5901              	.LVL505:
 5902 0044 0546     		mov	r5, r0
 5903              	.LVL506:
 5904              	.L539:
2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5905              		.loc 1 2199 0
 5906 0046 3DB9     		cbnz	r5, .L536
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5907              		.loc 1 2202 0
 5908 0048 E36D     		ldr	r3, [r4, #92]
 5909 004a 23F48853 		bic	r3, r3, #4352
 5910 004e 23F00103 		bic	r3, r3, #1
 5911 0052 43F00103 		orr	r3, r3, #1
 5912 0056 E365     		str	r3, [r4, #92]
 5913              	.LVL507:
 5914              	.L536:
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5915              		.loc 1 2210 0
 5916 0058 0023     		movs	r3, #0
 5917 005a 84F85830 		strb	r3, [r4, #88]
 5918              	.LVL508:
 5919              	.L535:
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5920              		.loc 1 2214 0
 5921 005e 2846     		mov	r0, r5
 5922 0060 38BD     		pop	{r3, r4, r5, pc}
 5923              	.LVL509:
 5924              	.L542:
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5925              		.loc 1 2173 0
 5926 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 5927              	.LVL510:
ARM GAS  /tmp/cceGX4yx.s 			page 343


2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5928              		.loc 1 2176 0
 5929 0066 0546     		mov	r5, r0
 5930 0068 0028     		cmp	r0, #0
 5931 006a E2D0     		beq	.L537
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5932              		.loc 1 2179 0
 5933 006c E36D     		ldr	r3, [r4, #92]
 5934 006e 43F04003 		orr	r3, r3, #64
 5935 0072 E365     		str	r3, [r4, #92]
 5936 0074 DDE7     		b	.L537
 5937              	.LVL511:
 5938              	.L538:
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5939              		.loc 1 2195 0
 5940 0076 2046     		mov	r0, r4
 5941 0078 FFF7FEFF 		bl	ADC_Disable
 5942              	.LVL512:
 5943 007c E3E7     		b	.L539
 5944              	.LVL513:
 5945              	.L540:
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5946              		.loc 1 2158 0
 5947 007e 0225     		movs	r5, #2
 5948 0080 EDE7     		b	.L535
 5949              		.cfi_endproc
 5950              	.LFE340:
 5952              		.text
 5953              	.Letext0:
 5954              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 5955              		.file 5 "/usr/include/newlib/sys/_stdint.h"
 5956              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 5957              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 5958              		.file 8 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h"
 5959              		.file 9 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 5960              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 5961              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 5962              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 5963              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 5964              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 5965              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 5966              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc_ex.h"
ARM GAS  /tmp/cceGX4yx.s 			page 344


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_adc.c
     /tmp/cceGX4yx.s:18     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/cceGX4yx.s:25     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/cceGX4yx.s:40     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/cceGX4yx.s:47     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/cceGX4yx.s:622    .text.HAL_ADC_Init:00000000000002a8 $d
     /tmp/cceGX4yx.s:635    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/cceGX4yx.s:642    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/cceGX4yx.s:656    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/cceGX4yx.s:663    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/cceGX4yx.s:931    .text.HAL_ADC_PollForConversion:0000000000000144 $d
     /tmp/cceGX4yx.s:938    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/cceGX4yx.s:945    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/cceGX4yx.s:1108   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/cceGX4yx.s:1115   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/cceGX4yx.s:1133   .text.HAL_ADC_StartSampling:0000000000000000 $t
     /tmp/cceGX4yx.s:1140   .text.HAL_ADC_StartSampling:0000000000000000 HAL_ADC_StartSampling
     /tmp/cceGX4yx.s:1161   .text.HAL_ADC_StopSampling:0000000000000000 $t
     /tmp/cceGX4yx.s:1168   .text.HAL_ADC_StopSampling:0000000000000000 HAL_ADC_StopSampling
     /tmp/cceGX4yx.s:1189   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cceGX4yx.s:1196   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cceGX4yx.s:1210   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/cceGX4yx.s:1217   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/cceGX4yx.s:1231   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/cceGX4yx.s:1238   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/cceGX4yx.s:1262   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/cceGX4yx.s:1269   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/cceGX4yx.s:1283   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/cceGX4yx.s:1290   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/cceGX4yx.s:1304   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/cceGX4yx.s:1311   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/cceGX4yx.s:1833   .text.HAL_ADC_IRQHandler:00000000000002b4 $d
     /tmp/cceGX4yx.s:1838   .text.HAL_ADC_IRQHandler:00000000000002c0 $t
     /tmp/cceGX4yx.s:1859   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/cceGX4yx.s:1866   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/cceGX4yx.s:1973   .text.ADC_DMAError:0000000000000000 $t
     /tmp/cceGX4yx.s:1980   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/cceGX4yx.s:2012   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/cceGX4yx.s:2019   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/cceGX4yx.s:2901   .text.HAL_ADC_ConfigChannel:000000000000038c $d
     /tmp/cceGX4yx.s:2912   .text.HAL_ADC_ConfigChannel:00000000000003b4 $t
     /tmp/cceGX4yx.s:3216   .text.HAL_ADC_ConfigChannel:000000000000051c $d
     /tmp/cceGX4yx.s:3226   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/cceGX4yx.s:3233   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/cceGX4yx.s:3873   .text.HAL_ADC_AnalogWDGConfig:0000000000000324 $d
     /tmp/cceGX4yx.s:3878   .text.HAL_ADC_AnalogWDGConfig:000000000000032c $t
     /tmp/cceGX4yx.s:3899   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/cceGX4yx.s:3906   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/cceGX4yx.s:3923   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/cceGX4yx.s:3930   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/cceGX4yx.s:3947   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/cceGX4yx.s:3954   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/cceGX4yx.s:4213   .text.ADC_ConversionStop:0000000000000104 $d
     /tmp/cceGX4yx.s:4218   .text.ADC_Enable:0000000000000000 $t
     /tmp/cceGX4yx.s:4225   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/cceGX4yx.s:4352   .text.ADC_Enable:0000000000000094 $d
ARM GAS  /tmp/cceGX4yx.s 			page 345


     /tmp/cceGX4yx.s:4357   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/cceGX4yx.s:4364   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/cceGX4yx.s:4580   .text.HAL_ADC_Start:0000000000000124 $d
     /tmp/cceGX4yx.s:4587   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/cceGX4yx.s:4594   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/cceGX4yx.s:4899   .text.HAL_ADC_Start_IT:00000000000001bc $d
     /tmp/cceGX4yx.s:4906   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/cceGX4yx.s:4913   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/cceGX4yx.s:5126   .text.HAL_ADC_Start_DMA:0000000000000118 $d
     /tmp/cceGX4yx.s:5136   .text.ADC_Disable:0000000000000000 $t
     /tmp/cceGX4yx.s:5143   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/cceGX4yx.s:5282   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/cceGX4yx.s:5289   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/cceGX4yx.s:5669   .text.HAL_ADC_DeInit:0000000000000224 $d
     /tmp/cceGX4yx.s:5682   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/cceGX4yx.s:5689   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/cceGX4yx.s:5759   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/cceGX4yx.s:5766   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/cceGX4yx.s:5841   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/cceGX4yx.s:5848   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
