ARM GAS  /tmp/ccy5KBVA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"user_diskio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USER_initialize,"ax",%progbits
  18              		.align	1
  19              		.global	USER_initialize
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	USER_initialize:
  26              	.LFB329:
  27              		.file 1 "FATFS/Target/user_diskio.c"
   1:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN Header */
   2:FATFS/Target/user_diskio.c **** /**
   3:FATFS/Target/user_diskio.c ****  ******************************************************************************
   4:FATFS/Target/user_diskio.c ****   * @file    user_diskio.c
   5:FATFS/Target/user_diskio.c ****   * @brief   This file includes a diskio driver skeleton to be completed by the user.
   6:FATFS/Target/user_diskio.c ****   ******************************************************************************
   7:FATFS/Target/user_diskio.c ****   * @attention
   8:FATFS/Target/user_diskio.c ****   *
   9:FATFS/Target/user_diskio.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:FATFS/Target/user_diskio.c ****   * All rights reserved.</center></h2>
  11:FATFS/Target/user_diskio.c ****   *
  12:FATFS/Target/user_diskio.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:FATFS/Target/user_diskio.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:FATFS/Target/user_diskio.c ****   * the License. You may obtain a copy of the License at:
  15:FATFS/Target/user_diskio.c ****   *                             www.st.com/SLA0044
  16:FATFS/Target/user_diskio.c ****   *
  17:FATFS/Target/user_diskio.c ****   ******************************************************************************
  18:FATFS/Target/user_diskio.c ****   */
  19:FATFS/Target/user_diskio.c ****  /* USER CODE END Header */
  20:FATFS/Target/user_diskio.c **** 
  21:FATFS/Target/user_diskio.c **** #ifdef USE_OBSOLETE_USER_CODE_SECTION_0
  22:FATFS/Target/user_diskio.c **** /*
  23:FATFS/Target/user_diskio.c ****  * Warning: the user section 0 is no more in use (starting from CubeMx version 4.16.0)
  24:FATFS/Target/user_diskio.c ****  * To be suppressed in the future.
  25:FATFS/Target/user_diskio.c ****  * Kept to ensure backward compatibility with previous CubeMx versions when
  26:FATFS/Target/user_diskio.c ****  * migrating projects.
  27:FATFS/Target/user_diskio.c ****  * User code previously added there should be copied in the new user sections before
  28:FATFS/Target/user_diskio.c ****  * the section contents can be deleted.
  29:FATFS/Target/user_diskio.c ****  */
  30:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN 0 */
  31:FATFS/Target/user_diskio.c **** /* USER CODE END 0 */
ARM GAS  /tmp/ccy5KBVA.s 			page 2


  32:FATFS/Target/user_diskio.c **** #endif
  33:FATFS/Target/user_diskio.c **** 
  34:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN DECL */
  35:FATFS/Target/user_diskio.c **** 
  36:FATFS/Target/user_diskio.c **** /* Includes ------------------------------------------------------------------*/
  37:FATFS/Target/user_diskio.c **** #include <string.h>
  38:FATFS/Target/user_diskio.c **** #include "ff_gen_drv.h"
  39:FATFS/Target/user_diskio.c **** #include "user_diskio_spi.h"
  40:FATFS/Target/user_diskio.c **** 
  41:FATFS/Target/user_diskio.c **** /* Private typedef -----------------------------------------------------------*/
  42:FATFS/Target/user_diskio.c **** /* Private define ------------------------------------------------------------*/
  43:FATFS/Target/user_diskio.c **** 
  44:FATFS/Target/user_diskio.c **** /* Private variables ---------------------------------------------------------*/
  45:FATFS/Target/user_diskio.c **** /* Disk status */
  46:FATFS/Target/user_diskio.c **** static volatile DSTATUS Stat = STA_NOINIT;
  47:FATFS/Target/user_diskio.c **** 
  48:FATFS/Target/user_diskio.c **** /* USER CODE END DECL */
  49:FATFS/Target/user_diskio.c **** 
  50:FATFS/Target/user_diskio.c **** /* Private function prototypes -----------------------------------------------*/
  51:FATFS/Target/user_diskio.c **** DSTATUS USER_initialize (BYTE pdrv);
  52:FATFS/Target/user_diskio.c **** DSTATUS USER_status (BYTE pdrv);
  53:FATFS/Target/user_diskio.c **** DRESULT USER_read (BYTE pdrv, BYTE *buff, DWORD sector, UINT count);
  54:FATFS/Target/user_diskio.c **** #if _USE_WRITE == 1
  55:FATFS/Target/user_diskio.c ****   DRESULT USER_write (BYTE pdrv, const BYTE *buff, DWORD sector, UINT count);
  56:FATFS/Target/user_diskio.c **** #endif /* _USE_WRITE == 1 */
  57:FATFS/Target/user_diskio.c **** #if _USE_IOCTL == 1
  58:FATFS/Target/user_diskio.c ****   DRESULT USER_ioctl (BYTE pdrv, BYTE cmd, void *buff);
  59:FATFS/Target/user_diskio.c **** #endif /* _USE_IOCTL == 1 */
  60:FATFS/Target/user_diskio.c **** 
  61:FATFS/Target/user_diskio.c **** Diskio_drvTypeDef  USER_Driver =
  62:FATFS/Target/user_diskio.c **** {
  63:FATFS/Target/user_diskio.c ****   USER_initialize,
  64:FATFS/Target/user_diskio.c ****   USER_status,
  65:FATFS/Target/user_diskio.c ****   USER_read,
  66:FATFS/Target/user_diskio.c **** #if  _USE_WRITE
  67:FATFS/Target/user_diskio.c ****   USER_write,
  68:FATFS/Target/user_diskio.c **** #endif  /* _USE_WRITE == 1 */
  69:FATFS/Target/user_diskio.c **** #if  _USE_IOCTL == 1
  70:FATFS/Target/user_diskio.c ****   USER_ioctl,
  71:FATFS/Target/user_diskio.c **** #endif /* _USE_IOCTL == 1 */
  72:FATFS/Target/user_diskio.c **** };
  73:FATFS/Target/user_diskio.c **** 
  74:FATFS/Target/user_diskio.c **** /* Private functions ---------------------------------------------------------*/
  75:FATFS/Target/user_diskio.c **** 
  76:FATFS/Target/user_diskio.c **** /**
  77:FATFS/Target/user_diskio.c ****   * @brief  Initializes a Drive
  78:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
  79:FATFS/Target/user_diskio.c ****   * @retval DSTATUS: Operation status
  80:FATFS/Target/user_diskio.c ****   */
  81:FATFS/Target/user_diskio.c **** DSTATUS USER_initialize (
  82:FATFS/Target/user_diskio.c **** 	BYTE pdrv           /* Physical drive nmuber to identify the drive */
  83:FATFS/Target/user_diskio.c **** )
  84:FATFS/Target/user_diskio.c **** {
  28              		.loc 1 84 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccy5KBVA.s 			page 3


  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  85:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN INIT */
  86:FATFS/Target/user_diskio.c ****   return USER_SPI_initialize(pdrv);
  38              		.loc 1 86 0
  39 0002 FFF7FEFF 		bl	USER_SPI_initialize
  40              	.LVL1:
  87:FATFS/Target/user_diskio.c ****     //Stat = STA_NOINIT;
  88:FATFS/Target/user_diskio.c ****     //return Stat;
  89:FATFS/Target/user_diskio.c ****   /* USER CODE END INIT */
  90:FATFS/Target/user_diskio.c **** }
  41              		.loc 1 90 0
  42 0006 08BD     		pop	{r3, pc}
  43              		.cfi_endproc
  44              	.LFE329:
  46              		.section	.text.USER_status,"ax",%progbits
  47              		.align	1
  48              		.global	USER_status
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	USER_status:
  55              	.LFB330:
  91:FATFS/Target/user_diskio.c **** 
  92:FATFS/Target/user_diskio.c **** /**
  93:FATFS/Target/user_diskio.c ****   * @brief  Gets Disk Status
  94:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
  95:FATFS/Target/user_diskio.c ****   * @retval DSTATUS: Operation status
  96:FATFS/Target/user_diskio.c ****   */
  97:FATFS/Target/user_diskio.c **** DSTATUS USER_status (
  98:FATFS/Target/user_diskio.c **** 	BYTE pdrv       /* Physical drive number to identify the drive */
  99:FATFS/Target/user_diskio.c **** )
 100:FATFS/Target/user_diskio.c **** {
  56              		.loc 1 100 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              	.LVL2:
  61 0000 08B5     		push	{r3, lr}
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 3, -8
  65              		.cfi_offset 14, -4
 101:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN STATUS */
 102:FATFS/Target/user_diskio.c ****     return USER_SPI_status(pdrv);
  66              		.loc 1 102 0
  67 0002 FFF7FEFF 		bl	USER_SPI_status
  68              	.LVL3:
 103:FATFS/Target/user_diskio.c ****     //Stat = STA_NOINIT;
 104:FATFS/Target/user_diskio.c ****     //return Stat;
 105:FATFS/Target/user_diskio.c ****   /* USER CODE END STATUS */
 106:FATFS/Target/user_diskio.c **** }
ARM GAS  /tmp/ccy5KBVA.s 			page 4


  69              		.loc 1 106 0
  70 0006 08BD     		pop	{r3, pc}
  71              		.cfi_endproc
  72              	.LFE330:
  74              		.section	.text.USER_read,"ax",%progbits
  75              		.align	1
  76              		.global	USER_read
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	USER_read:
  83              	.LFB331:
 107:FATFS/Target/user_diskio.c **** 
 108:FATFS/Target/user_diskio.c **** /**
 109:FATFS/Target/user_diskio.c ****   * @brief  Reads Sector(s)
 110:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 111:FATFS/Target/user_diskio.c ****   * @param  *buff: Data buffer to store read data
 112:FATFS/Target/user_diskio.c ****   * @param  sector: Sector address (LBA)
 113:FATFS/Target/user_diskio.c ****   * @param  count: Number of sectors to read (1..128)
 114:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 115:FATFS/Target/user_diskio.c ****   */
 116:FATFS/Target/user_diskio.c **** DRESULT USER_read (
 117:FATFS/Target/user_diskio.c **** 	BYTE pdrv,      /* Physical drive nmuber to identify the drive */
 118:FATFS/Target/user_diskio.c **** 	BYTE *buff,     /* Data buffer to store read data */
 119:FATFS/Target/user_diskio.c **** 	DWORD sector,   /* Sector address in LBA */
 120:FATFS/Target/user_diskio.c **** 	UINT count      /* Number of sectors to read */
 121:FATFS/Target/user_diskio.c **** )
 122:FATFS/Target/user_diskio.c **** {
  84              		.loc 1 122 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              	.LVL4:
  89 0000 08B5     		push	{r3, lr}
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 3, -8
  93              		.cfi_offset 14, -4
 123:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN READ */
 124:FATFS/Target/user_diskio.c ****   return USER_SPI_read(pdrv, buff, sector, count);
  94              		.loc 1 124 0
  95 0002 FFF7FEFF 		bl	USER_SPI_read
  96              	.LVL5:
 125:FATFS/Target/user_diskio.c ****     //return RES_OK;
 126:FATFS/Target/user_diskio.c ****   /* USER CODE END READ */
 127:FATFS/Target/user_diskio.c **** }
  97              		.loc 1 127 0
  98 0006 08BD     		pop	{r3, pc}
  99              		.cfi_endproc
 100              	.LFE331:
 102              		.section	.text.USER_write,"ax",%progbits
 103              		.align	1
 104              		.global	USER_write
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
ARM GAS  /tmp/ccy5KBVA.s 			page 5


 108              		.fpu fpv4-sp-d16
 110              	USER_write:
 111              	.LFB332:
 128:FATFS/Target/user_diskio.c **** 
 129:FATFS/Target/user_diskio.c **** /**
 130:FATFS/Target/user_diskio.c ****   * @brief  Writes Sector(s)
 131:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 132:FATFS/Target/user_diskio.c ****   * @param  *buff: Data to be written
 133:FATFS/Target/user_diskio.c ****   * @param  sector: Sector address (LBA)
 134:FATFS/Target/user_diskio.c ****   * @param  count: Number of sectors to write (1..128)
 135:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 136:FATFS/Target/user_diskio.c ****   */
 137:FATFS/Target/user_diskio.c **** #if _USE_WRITE == 1
 138:FATFS/Target/user_diskio.c **** DRESULT USER_write (
 139:FATFS/Target/user_diskio.c **** 	BYTE pdrv,          /* Physical drive nmuber to identify the drive */
 140:FATFS/Target/user_diskio.c **** 	const BYTE *buff,   /* Data to be written */
 141:FATFS/Target/user_diskio.c **** 	DWORD sector,       /* Sector address in LBA */
 142:FATFS/Target/user_diskio.c **** 	UINT count          /* Number of sectors to write */
 143:FATFS/Target/user_diskio.c **** )
 144:FATFS/Target/user_diskio.c **** {
 112              		.loc 1 144 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL6:
 117 0000 08B5     		push	{r3, lr}
 118              	.LCFI3:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 3, -8
 121              		.cfi_offset 14, -4
 145:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN WRITE */
 146:FATFS/Target/user_diskio.c ****   /* USER CODE HERE */
 147:FATFS/Target/user_diskio.c ****     //return RES_OK;
 148:FATFS/Target/user_diskio.c ****     return USER_SPI_write(pdrv, buff, sector, count);
 122              		.loc 1 148 0
 123 0002 FFF7FEFF 		bl	USER_SPI_write
 124              	.LVL7:
 149:FATFS/Target/user_diskio.c ****   /* USER CODE END WRITE */
 150:FATFS/Target/user_diskio.c **** }
 125              		.loc 1 150 0
 126 0006 08BD     		pop	{r3, pc}
 127              		.cfi_endproc
 128              	.LFE332:
 130              		.section	.text.USER_ioctl,"ax",%progbits
 131              		.align	1
 132              		.global	USER_ioctl
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	USER_ioctl:
 139              	.LFB333:
 151:FATFS/Target/user_diskio.c **** #endif /* _USE_WRITE == 1 */
 152:FATFS/Target/user_diskio.c **** 
 153:FATFS/Target/user_diskio.c **** /**
 154:FATFS/Target/user_diskio.c ****   * @brief  I/O control operation
 155:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
ARM GAS  /tmp/ccy5KBVA.s 			page 6


 156:FATFS/Target/user_diskio.c ****   * @param  cmd: Control code
 157:FATFS/Target/user_diskio.c ****   * @param  *buff: Buffer to send/receive control data
 158:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 159:FATFS/Target/user_diskio.c ****   */
 160:FATFS/Target/user_diskio.c **** #if _USE_IOCTL == 1
 161:FATFS/Target/user_diskio.c **** DRESULT USER_ioctl (
 162:FATFS/Target/user_diskio.c **** 	BYTE pdrv,      /* Physical drive nmuber (0..) */
 163:FATFS/Target/user_diskio.c **** 	BYTE cmd,       /* Control code */
 164:FATFS/Target/user_diskio.c **** 	void *buff      /* Buffer to send/receive control data */
 165:FATFS/Target/user_diskio.c **** )
 166:FATFS/Target/user_diskio.c **** {
 140              		.loc 1 166 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              	.LVL8:
 145 0000 08B5     		push	{r3, lr}
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
 167:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN IOCTL */
 168:FATFS/Target/user_diskio.c ****     //DRESULT res = RES_ERROR;
 169:FATFS/Target/user_diskio.c ****     //return res;
 170:FATFS/Target/user_diskio.c ****     return USER_SPI_ioctl(pdrv, cmd, buff);
 150              		.loc 1 170 0
 151 0002 FFF7FEFF 		bl	USER_SPI_ioctl
 152              	.LVL9:
 171:FATFS/Target/user_diskio.c ****   /* USER CODE END IOCTL */
 172:FATFS/Target/user_diskio.c **** }
 153              		.loc 1 172 0
 154 0006 08BD     		pop	{r3, pc}
 155              		.cfi_endproc
 156              	.LFE333:
 158              		.global	USER_Driver
 159              		.section	.data.Stat,"aw",%progbits
 162              	Stat:
 163 0000 01       		.byte	1
 164              		.section	.data.USER_Driver,"aw",%progbits
 165              		.align	2
 168              	USER_Driver:
 169 0000 00000000 		.word	USER_initialize
 170 0004 00000000 		.word	USER_status
 171 0008 00000000 		.word	USER_read
 172 000c 00000000 		.word	USER_write
 173 0010 00000000 		.word	USER_ioctl
 174              		.text
 175              	.Letext0:
 176              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 177              		.file 3 "/usr/include/newlib/sys/lock.h"
 178              		.file 4 "/usr/include/newlib/sys/_types.h"
 179              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 180              		.file 6 "/usr/include/newlib/sys/reent.h"
 181              		.file 7 "Middlewares/Third_Party/FatFs/src/integer.h"
 182              		.file 8 "Middlewares/Third_Party/FatFs/src/diskio.h"
 183              		.file 9 "/usr/include/newlib/sys/_stdint.h"
 184              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccy5KBVA.s 			page 7


 185              		.file 11 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 186              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 187              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 188              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 189              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 190              		.file 16 "/usr/include/newlib/stdlib.h"
 191              		.file 17 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 192              		.file 18 "Core/Inc/user_diskio_spi.h"
ARM GAS  /tmp/ccy5KBVA.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 user_diskio.c
     /tmp/ccy5KBVA.s:18     .text.USER_initialize:0000000000000000 $t
     /tmp/ccy5KBVA.s:25     .text.USER_initialize:0000000000000000 USER_initialize
     /tmp/ccy5KBVA.s:47     .text.USER_status:0000000000000000 $t
     /tmp/ccy5KBVA.s:54     .text.USER_status:0000000000000000 USER_status
     /tmp/ccy5KBVA.s:75     .text.USER_read:0000000000000000 $t
     /tmp/ccy5KBVA.s:82     .text.USER_read:0000000000000000 USER_read
     /tmp/ccy5KBVA.s:103    .text.USER_write:0000000000000000 $t
     /tmp/ccy5KBVA.s:110    .text.USER_write:0000000000000000 USER_write
     /tmp/ccy5KBVA.s:131    .text.USER_ioctl:0000000000000000 $t
     /tmp/ccy5KBVA.s:138    .text.USER_ioctl:0000000000000000 USER_ioctl
     /tmp/ccy5KBVA.s:168    .data.USER_Driver:0000000000000000 USER_Driver
     /tmp/ccy5KBVA.s:162    .data.Stat:0000000000000000 Stat
     /tmp/ccy5KBVA.s:165    .data.USER_Driver:0000000000000000 $d

UNDEFINED SYMBOLS
USER_SPI_initialize
USER_SPI_status
USER_SPI_read
USER_SPI_write
USER_SPI_ioctl
