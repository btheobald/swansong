ARM GAS  /tmp/ccJz23SP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ld_word,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	ld_word:
  25              	.LFB329:
  26              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - Generic FAT file system module  R0.12c                             /
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** /
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:Middlewares/Third_Party/FatFs/src/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / that the following condition is met:
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /
  11:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  13:Middlewares/Third_Party/FatFs/src/ff.c **** /
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /----------------------------------------------------------------------------*/
  19:Middlewares/Third_Party/FatFs/src/ff.c **** 
  20:Middlewares/Third_Party/FatFs/src/ff.c **** 
  21:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  22:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  23:Middlewares/Third_Party/FatFs/src/ff.c **** 
  24:Middlewares/Third_Party/FatFs/src/ff.c **** 
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
  26:Middlewares/Third_Party/FatFs/src/ff.c **** 
  27:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
  28:Middlewares/Third_Party/FatFs/src/ff.c **** 
  29:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
  30:Middlewares/Third_Party/FatFs/src/ff.c **** 
  31:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 68300	/* Revision ID */
  32:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
ARM GAS  /tmp/ccJz23SP.s 			page 2


  33:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
  34:Middlewares/Third_Party/FatFs/src/ff.c **** 
  35:Middlewares/Third_Party/FatFs/src/ff.c **** 
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS upper conversion tables */
  37:Middlewares/Third_Party/FatFs/src/ff.c **** 
  38:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
  39:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
  40:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
  41:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
  42:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
  43:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
  44:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
  45:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
  46:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
  47:Middlewares/Third_Party/FatFs/src/ff.c **** 
  48:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
  49:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  50:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  51:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  52:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  53:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
  54:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  55:Middlewares/Third_Party/FatFs/src/ff.c **** 
  56:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
  57:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  58:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  59:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
  60:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
  61:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
  62:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
  63:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
  64:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
  65:Middlewares/Third_Party/FatFs/src/ff.c **** 
  66:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
  67:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  68:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  69:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  70:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  71:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
  72:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  73:Middlewares/Third_Party/FatFs/src/ff.c **** 
  74:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. */
  75:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  76:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
  77:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  78:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  79:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  80:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  81:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  82:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  83:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  84:Middlewares/Third_Party/FatFs/src/ff.c **** 
  85:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic */
  86:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  87:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  88:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  89:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
ARM GAS  /tmp/ccJz23SP.s 			page 3


  90:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  91:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  92:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  93:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  94:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  95:Middlewares/Third_Party/FatFs/src/ff.c **** 
  96:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek */
  97:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  98:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  99:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 100:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 101:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 102:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 103:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 104:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 105:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 106:Middlewares/Third_Party/FatFs/src/ff.c **** 
 107:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 771	/* KBL */
 108:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 109:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 110:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 111:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 112:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 113:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 114:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 115:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 116:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 118:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic */
 119:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 120:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F, \
 121:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 122:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 123:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 124:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 126:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 127:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Latin 1 */
 130:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 131:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41, \
 132:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 134:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 136:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 137:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 138:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 */
 141:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F, \
 143:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 144:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 145:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 146:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
ARM GAS  /tmp/ccJz23SP.s 			page 4


 147:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 148:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 149:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 150:Middlewares/Third_Party/FatFs/src/ff.c **** 
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic */
 152:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F, \
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 156:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 157:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 158:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 159:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 160:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 161:Middlewares/Third_Party/FatFs/src/ff.c **** 
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish */
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, \
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 167:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 168:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 169:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 170:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 171:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 172:Middlewares/Third_Party/FatFs/src/ff.c **** 
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 860	/* Portuguese */
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F, \
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 178:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 179:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 180:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 181:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 182:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 183:Middlewares/Third_Party/FatFs/src/ff.c **** 
 184:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 861	/* Icelandic */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 186:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F, \
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 188:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 189:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 193:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 198:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 199:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 200:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 201:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 202:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 203:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
ARM GAS  /tmp/ccJz23SP.s 			page 5


 204:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 205:Middlewares/Third_Party/FatFs/src/ff.c **** 
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 863	/* Canadian-French */
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F, \
 209:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 210:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 211:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 213:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 214:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 215:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 216:Middlewares/Third_Party/FatFs/src/ff.c **** 
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 864	/* Arabic */
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 220:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 221:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 223:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 224:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 225:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 226:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 227:Middlewares/Third_Party/FatFs/src/ff.c **** 
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 865	/* Nordic */
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 230:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 231:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 232:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 233:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 238:Middlewares/Third_Party/FatFs/src/ff.c **** 
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian */
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 241:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 245:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 246:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 247:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 
 250:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 869	/* Greek 2 */
 251:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 253:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 254:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 259:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 260:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 6


 261:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 262:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 263:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot enable LFN without valid code page.
 264:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 265:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 266:Middlewares/Third_Party/FatFs/src/ff.c **** 
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 270:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 276:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 
 278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S != 0	/* Code page is DBCS */
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 283:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 284:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 
 286:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 
 292:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** 
 297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 300:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file attribute bits for internal use */
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #define	AM_VOL		0x08	/* Volume label */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 
 306:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file access control and file status flags for internal use */
 307:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
 310:Middlewares/Third_Party/FatFs/src/ff.c **** 
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 
 312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags in fn[] */
 313:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
 314:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
ARM GAS  /tmp/ccJz23SP.s 			page 7


 318:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 319:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 320:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
 321:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NONAME	0x80	/* Not followed */
 322:Middlewares/Third_Party/FatFs/src/ff.c **** 
 323:Middlewares/Third_Party/FatFs/src/ff.c **** 
 324:Middlewares/Third_Party/FatFs/src/ff.c **** /* Limits and boundaries */
 325:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
 326:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
 327:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but correct for real DOS/Windo
 328:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but correct for real DOS/Wind
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
 331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 
 333:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
 334:Middlewares/Third_Party/FatFs/src/ff.c **** / because the C structure is not binary compatible between different platforms */
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
 339:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
 340:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
 341:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
 342:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT12/16 [entry] (WORD) */
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 346:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size for int13h [sector] (WORD) */
 347:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 348:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 349:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres			37		/* Error flag (BYTE) */
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 353:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 354:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 355:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type string (8-byte) */
 356:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 360:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 361:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer32			42		/* FAT32: File system version (WORD) */
 362:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 363:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 367:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 368:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 369:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 370:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* FAT32: File system type string (8-byte) */
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** 
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 374:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
ARM GAS  /tmp/ccJz23SP.s 			page 8


 375:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 376:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 377:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVerEx			104		/* exFAT: File system version (WORD) */
 383:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (BYTE) */
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ActFatEx		107		/* exFAT: Active FAT flags (BYTE) */
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 386:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 388:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 389:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 390:Middlewares/Third_Party/FatFs/src/ff.c **** #define	BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 392:Middlewares/Third_Party/FatFs/src/ff.c **** 
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11-byte) */
 394:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (BYTE) */
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (BYTE) */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (DWORD) */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_ModTime			22		/* Modified time (DWORD) */
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 402:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (DWORD) */
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN: Entry type (BYTE) */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 408:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 413:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 416:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 417:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_GenFlags		33		/* exFAT: General secondary flags (WORD) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 426:Middlewares/Third_Party/FatFs/src/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 427:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** 
 430:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZDIRE				32		/* Size of a directory entry */
 431:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
ARM GAS  /tmp/ccJz23SP.s 			page 9


 432:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 433:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 434:Middlewares/Third_Party/FatFs/src/ff.c **** 
 435:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** 
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** 
 453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Post process after fatal error on file operation */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 456:Middlewares/Third_Party/FatFs/src/ff.c **** 
 457:Middlewares/Third_Party/FatFs/src/ff.c **** 
 458:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 469:Middlewares/Third_Party/FatFs/src/ff.c **** 
 470:Middlewares/Third_Party/FatFs/src/ff.c **** 
 471:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of volume - partition conversion */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
 473:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 479:Middlewares/Third_Party/FatFs/src/ff.c **** 
 480:Middlewares/Third_Party/FatFs/src/ff.c **** 
 481:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
ARM GAS  /tmp/ccJz23SP.s 			page 10


 489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 490:Middlewares/Third_Party/FatFs/src/ff.c **** 
 491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 492:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 495:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 496:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 497:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 498:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 499:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 501:Middlewares/Third_Party/FatFs/src/ff.c **** 
 502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock controls */
 504:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 505:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 506:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 508:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 509:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 510:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 513:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 514:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 515:Middlewares/Third_Party/FatFs/src/ff.c **** 
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** 
 518:Middlewares/Third_Party/FatFs/src/ff.c **** 
 519:Middlewares/Third_Party/FatFs/src/ff.c **** 
 520:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 521:Middlewares/Third_Party/FatFs/src/ff.c **** 
 522:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Work Area
 523:Middlewares/Third_Party/FatFs/src/ff.c **** 
 524:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 526:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 527:Middlewares/Third_Party/FatFs/src/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 528:Middlewares/Third_Party/FatFs/src/ff.c **** /  not compliance with C standard. */
 529:Middlewares/Third_Party/FatFs/src/ff.c **** 
 530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 10
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 533:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 534:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
 537:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 541:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 543:Middlewares/Third_Party/FatFs/src/ff.c **** 
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0		/* Non-LFN configuration */
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
ARM GAS  /tmp/ccJz23SP.s 			page 11


 546:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 548:Middlewares/Third_Party/FatFs/src/ff.c **** 
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #else					/* LFN configuration */
 550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 551:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN value
 552:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 553:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1		/* LFN enabled with static working buffer */
 556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 557:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE	DirBuf[MAXDIRB(_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 559:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];	/* LFN enabled with static working buffer */
 560:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 561:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 562:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1]; BYTE dbuf[MAXDIRB(_MAX_LFN)];
 567:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 569:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1];
 571:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 572:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 574:Middlewares/Third_Party/FatFs/src/ff.c **** 
 575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 577:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 578:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2 + MAXDIRB(_MAX_LFN)); if (!lfn) LEAVE_FF
 579:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 580:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 581:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH_C
 583:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 586:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 587:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 
 589:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* else _USE_LFN == 0 */
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 592:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 593:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for SBCS extended characters */
 594:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 595:Middlewares/Third_Party/FatFs/src/ff.c **** 
 596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 597:Middlewares/Third_Party/FatFs/src/ff.c **** 
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 601:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 602:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 12


 603:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 605:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 
 608:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 609:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 610:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 612:Middlewares/Third_Party/FatFs/src/ff.c **** static
 613:Middlewares/Third_Party/FatFs/src/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 614:Middlewares/Third_Party/FatFs/src/ff.c **** {
  27              		.loc 1 614 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 615:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD rv;
 616:Middlewares/Third_Party/FatFs/src/ff.c **** 
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[1];
  33              		.loc 1 617 0
  34 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  35              	.LVL1:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  36              		.loc 1 618 0
  37 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  38              	.LVL2:
 619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 620:Middlewares/Third_Party/FatFs/src/ff.c **** }
  39              		.loc 1 620 0
  40 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  41              	.LVL3:
  42 0008 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE329:
  46              		.section	.text.ld_dword,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	ld_dword:
  54              	.LFB330:
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** static
 623:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 624:Middlewares/Third_Party/FatFs/src/ff.c **** {
  55              		.loc 1 624 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL4:
 625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rv;
 626:Middlewares/Third_Party/FatFs/src/ff.c **** 
 627:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[3];
ARM GAS  /tmp/ccJz23SP.s 			page 13


  61              		.loc 1 627 0
  62 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  63              	.LVL5:
 628:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
  64              		.loc 1 628 0
  65 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  66 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  67              	.LVL6:
 629:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
  68              		.loc 1 629 0
  69 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  70 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  71              	.LVL7:
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  72              		.loc 1 630 0
  73 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  74              	.LVL8:
 631:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 632:Middlewares/Third_Party/FatFs/src/ff.c **** }
  75              		.loc 1 632 0
  76 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  77              	.LVL9:
  78 0014 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE330:
  82              		.section	.text.st_word,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	st_word:
  90              	.LFB331:
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 
 634:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 635:Middlewares/Third_Party/FatFs/src/ff.c **** static
 636:Middlewares/Third_Party/FatFs/src/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 637:Middlewares/Third_Party/FatFs/src/ff.c **** {
 638:Middlewares/Third_Party/FatFs/src/ff.c **** 	QWORD rv;
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[7];
 641:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[6];
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[5];
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[4];
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[3];
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 651:Middlewares/Third_Party/FatFs/src/ff.c **** 
 652:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 653:Middlewares/Third_Party/FatFs/src/ff.c **** static
 654:Middlewares/Third_Party/FatFs/src/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 655:Middlewares/Third_Party/FatFs/src/ff.c **** {
  91              		.loc 1 655 0
ARM GAS  /tmp/ccJz23SP.s 			page 14


  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL10:
 656:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
  97              		.loc 1 656 0
  98 0000 0170     		strb	r1, [r0]
  99              	.LVL11:
 657:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 100              		.loc 1 657 0
 101 0002 090A     		lsrs	r1, r1, #8
 102              	.LVL12:
 103 0004 4170     		strb	r1, [r0, #1]
 658:Middlewares/Third_Party/FatFs/src/ff.c **** }
 104              		.loc 1 658 0
 105 0006 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE331:
 109              		.section	.text.st_dword,"ax",%progbits
 110              		.align	1
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	st_dword:
 117              	.LFB332:
 659:Middlewares/Third_Party/FatFs/src/ff.c **** 
 660:Middlewares/Third_Party/FatFs/src/ff.c **** static
 661:Middlewares/Third_Party/FatFs/src/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 662:Middlewares/Third_Party/FatFs/src/ff.c **** {
 118              		.loc 1 662 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL13:
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 124              		.loc 1 663 0
 125 0000 0170     		strb	r1, [r0]
 126              	.LVL14:
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 127              		.loc 1 664 0
 128 0002 C1F30723 		ubfx	r3, r1, #8, #8
 129 0006 4370     		strb	r3, [r0, #1]
 130              	.LVL15:
 665:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 131              		.loc 1 665 0
 132 0008 C1F30743 		ubfx	r3, r1, #16, #8
 133 000c 8370     		strb	r3, [r0, #2]
 134              	.LVL16:
 666:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 135              		.loc 1 666 0
 136 000e 090E     		lsrs	r1, r1, #24
 137              	.LVL17:
 138 0010 C170     		strb	r1, [r0, #3]
 667:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccJz23SP.s 			page 15


 139              		.loc 1 667 0
 140 0012 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE332:
 144              		.section	.text.mem_cpy,"ax",%progbits
 145              		.align	1
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	mem_cpy:
 152              	.LFB333:
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 670:Middlewares/Third_Party/FatFs/src/ff.c **** static
 671:Middlewares/Third_Party/FatFs/src/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** {
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 681:Middlewares/Third_Party/FatFs/src/ff.c **** }
 682:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 683:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
 684:Middlewares/Third_Party/FatFs/src/ff.c **** 
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 688:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 
 691:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 692:Middlewares/Third_Party/FatFs/src/ff.c **** static
 693:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
 153              		.loc 1 693 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158              	.LVL18:
 694:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cnt) {
 159              		.loc 1 697 0
 160 0000 1346     		mov	r3, r2
 161 0002 2AB1     		cbz	r2, .L5
 162              	.LVL19:
 163              	.L7:
 698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 			*d++ = *s++;
 164              		.loc 1 699 0 discriminator 1
 165 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
ARM GAS  /tmp/ccJz23SP.s 			page 16


 166 0006 0270     		strb	r2, [r0]
 167              	.LVL20:
 168 0008 0130     		adds	r0, r0, #1
 169              	.LVL21:
 170 000a 0131     		adds	r1, r1, #1
 171              	.LVL22:
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (--cnt);
 172              		.loc 1 700 0 discriminator 1
 173 000c 013B     		subs	r3, r3, #1
 174              	.LVL23:
 175 000e F9D1     		bne	.L7
 176              	.L5:
 701:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 702:Middlewares/Third_Party/FatFs/src/ff.c **** }
 177              		.loc 1 702 0
 178 0010 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE333:
 182              		.section	.text.mem_set,"ax",%progbits
 183              		.align	1
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	mem_set:
 190              	.LFB334:
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 
 704:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory block */
 705:Middlewares/Third_Party/FatFs/src/ff.c **** static
 706:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 191              		.loc 1 706 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL24:
 197              	.L9:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
 198              		.loc 1 710 0 discriminator 1
 199 0000 0170     		strb	r1, [r0]
 200              	.LVL25:
 201 0002 0130     		adds	r0, r0, #1
 202              	.LVL26:
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt);
 203              		.loc 1 711 0 discriminator 1
 204 0004 013A     		subs	r2, r2, #1
 205              	.LVL27:
 206 0006 FBD1     		bne	.L9
 712:Middlewares/Third_Party/FatFs/src/ff.c **** }
 207              		.loc 1 712 0
 208 0008 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE334:
 212              		.section	.text.mem_cmp,"ax",%progbits
ARM GAS  /tmp/ccJz23SP.s 			page 17


 213              		.align	1
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	mem_cmp:
 220              	.LFB335:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 
 714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory block */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** static
 716:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 221              		.loc 1 716 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL28:
 227 0000 30B4     		push	{r4, r5}
 228              	.LCFI0:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 4, -8
 231              		.cfi_offset 5, -4
 232              	.LVL29:
 233              	.L12:
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 		r = *d++ - *s++;
 234              		.loc 1 721 0 discriminator 2
 235 0002 451C     		adds	r5, r0, #1
 236              	.LVL30:
 237 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 238              	.LVL31:
 239 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 240 0008 1B1A     		subs	r3, r3, r0
 241              	.LVL32:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 242              		.loc 1 722 0 discriminator 2
 243 000a 013A     		subs	r2, r2, #1
 244              	.LVL33:
 245 000c 04D0     		beq	.L10
 246 000e 4C1C     		adds	r4, r1, #1
 247              	.LVL34:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 248              		.loc 1 721 0 discriminator 1
 249 0010 2846     		mov	r0, r5
 250 0012 2146     		mov	r1, r4
 251              		.loc 1 722 0 discriminator 1
 252 0014 002B     		cmp	r3, #0
 253 0016 F4D0     		beq	.L12
 254              	.LVL35:
 255              	.L10:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 725:Middlewares/Third_Party/FatFs/src/ff.c **** }
 256              		.loc 1 725 0
ARM GAS  /tmp/ccJz23SP.s 			page 18


 257 0018 1846     		mov	r0, r3
 258 001a 30BC     		pop	{r4, r5}
 259              	.LCFI1:
 260              		.cfi_restore 5
 261              		.cfi_restore 4
 262              		.cfi_def_cfa_offset 0
 263              	.LVL36:
 264 001c 7047     		bx	lr
 265              		.cfi_endproc
 266              	.LFE335:
 268              		.section	.text.chk_chr,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	chk_chr:
 276              	.LFB336:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** 
 727:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 728:Middlewares/Third_Party/FatFs/src/ff.c **** static
 729:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 277              		.loc 1 729 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282              	.LVL37:
 730:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 283              		.loc 1 730 0
 284 0000 00E0     		b	.L15
 285              	.L17:
 286              		.loc 1 730 0 is_stmt 0 discriminator 3
 287 0002 0130     		adds	r0, r0, #1
 288              	.LVL38:
 289              	.L15:
 290              		.loc 1 730 0 discriminator 1
 291 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 292 0006 0BB1     		cbz	r3, .L16
 293              		.loc 1 730 0 discriminator 2
 294 0008 8B42     		cmp	r3, r1
 295 000a FAD1     		bne	.L17
 296              	.L16:
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 732:Middlewares/Third_Party/FatFs/src/ff.c **** }
 297              		.loc 1 732 0 is_stmt 1
 298 000c 1846     		mov	r0, r3
 299              	.LVL39:
 300 000e 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE336:
 304              		.section	.text.chk_lock,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccJz23SP.s 			page 19


 311              	chk_lock:
 312              	.LFB337:
 733:Middlewares/Third_Party/FatFs/src/ff.c **** 
 734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 738:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 739:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 740:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 741:Middlewares/Third_Party/FatFs/src/ff.c **** static
 742:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** )
 745:Middlewares/Third_Party/FatFs/src/ff.c **** {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 747:Middlewares/Third_Party/FatFs/src/ff.c **** }
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 
 749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 750:Middlewares/Third_Party/FatFs/src/ff.c **** static
 751:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 752:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 753:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** )
 755:Middlewares/Third_Party/FatFs/src/ff.c **** {
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 759:Middlewares/Third_Party/FatFs/src/ff.c **** }
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 
 761:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 762:Middlewares/Third_Party/FatFs/src/ff.c **** 
 763:Middlewares/Third_Party/FatFs/src/ff.c **** 
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 766:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 767:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** 
 770:Middlewares/Third_Party/FatFs/src/ff.c **** static
 771:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 772:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 773:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 774:Middlewares/Third_Party/FatFs/src/ff.c **** )
 775:Middlewares/Third_Party/FatFs/src/ff.c **** {
 313              		.loc 1 775 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL40:
 319 0000 30B4     		push	{r4, r5}
 320              	.LCFI2:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 5, -4
 324              	.LVL41:
ARM GAS  /tmp/ccJz23SP.s 			page 20


 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 325              		.loc 1 779 0
 326 0002 0025     		movs	r5, #0
 327 0004 2B46     		mov	r3, r5
 328 0006 01E0     		b	.L19
 329              	.LVL42:
 330              	.L25:
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 331              		.loc 1 785 0
 332 0008 0125     		movs	r5, #1
 333              	.LVL43:
 334              	.L20:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 335              		.loc 1 779 0 discriminator 2
 336 000a 0133     		adds	r3, r3, #1
 337              	.LVL44:
 338              	.L19:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 339              		.loc 1 779 0 is_stmt 0 discriminator 1
 340 000c 012B     		cmp	r3, #1
 341 000e 15D8     		bhi	.L21
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 342              		.loc 1 780 0 is_stmt 1
 343 0010 1A01     		lsls	r2, r3, #4
 344 0012 174C     		ldr	r4, .L33
 345 0014 A258     		ldr	r2, [r4, r2]
 346 0016 002A     		cmp	r2, #0
 347 0018 F6D0     		beq	.L25
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 348              		.loc 1 781 0
 349 001a 0468     		ldr	r4, [r0]
 350 001c A242     		cmp	r2, r4
 351 001e F4D1     		bne	.L20
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 352              		.loc 1 782 0 discriminator 1
 353 0020 134A     		ldr	r2, .L33
 354 0022 02EB0312 		add	r2, r2, r3, lsl #4
 355 0026 5468     		ldr	r4, [r2, #4]
 356 0028 8268     		ldr	r2, [r0, #8]
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 357              		.loc 1 781 0 discriminator 1
 358 002a 9442     		cmp	r4, r2
 359 002c EDD1     		bne	.L20
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 360              		.loc 1 783 0
 361 002e 104A     		ldr	r2, .L33
 362 0030 02EB0312 		add	r2, r2, r3, lsl #4
 363 0034 9468     		ldr	r4, [r2, #8]
 364 0036 4269     		ldr	r2, [r0, #20]
ARM GAS  /tmp/ccJz23SP.s 			page 21


 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 365              		.loc 1 782 0
 366 0038 9442     		cmp	r4, r2
 367 003a E6D1     		bne	.L20
 368              	.L21:
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {	/* The object is not opened */
 369              		.loc 1 788 0
 370 003c 022B     		cmp	r3, #2
 371 003e 0AD0     		beq	.L31
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 372              		.loc 1 793 0
 373 0040 A1B9     		cbnz	r1, .L28
 374              		.loc 1 793 0 is_stmt 0 discriminator 2
 375 0042 0B4A     		ldr	r2, .L33
 376 0044 02EB0313 		add	r3, r2, r3, lsl #4
 377              	.LVL45:
 378 0048 9B89     		ldrh	r3, [r3, #12]
 379 004a B3F5807F 		cmp	r3, #256
 380 004e 07D0     		beq	.L32
 381              		.loc 1 793 0
 382 0050 0020     		movs	r0, #0
 383              	.LVL46:
 384              	.L24:
 794:Middlewares/Third_Party/FatFs/src/ff.c **** }
 385              		.loc 1 794 0 is_stmt 1
 386 0052 30BC     		pop	{r4, r5}
 387              	.LCFI3:
 388              		.cfi_remember_state
 389              		.cfi_restore 5
 390              		.cfi_restore 4
 391              		.cfi_def_cfa_offset 0
 392              	.LVL47:
 393 0054 7047     		bx	lr
 394              	.LVL48:
 395              	.L31:
 396              	.LCFI4:
 397              		.cfi_restore_state
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 398              		.loc 1 789 0
 399 0056 2DB9     		cbnz	r5, .L26
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 400              		.loc 1 789 0 is_stmt 0 discriminator 2
 401 0058 0229     		cmp	r1, #2
 402 005a 05D1     		bne	.L27
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 403              		.loc 1 789 0
 404 005c 0020     		movs	r0, #0
 405              	.LVL49:
 406 005e F8E7     		b	.L24
 407              	.LVL50:
 408              	.L32:
ARM GAS  /tmp/ccJz23SP.s 			page 22


 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 409              		.loc 1 793 0 is_stmt 1
 410 0060 1020     		movs	r0, #16
 411              	.LVL51:
 412 0062 F6E7     		b	.L24
 413              	.LVL52:
 414              	.L26:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 415              		.loc 1 789 0
 416 0064 0020     		movs	r0, #0
 417              	.LVL53:
 418 0066 F4E7     		b	.L24
 419              	.LVL54:
 420              	.L27:
 421 0068 1220     		movs	r0, #18
 422              	.LVL55:
 423 006a F2E7     		b	.L24
 424              	.LVL56:
 425              	.L28:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 426              		.loc 1 793 0
 427 006c 1020     		movs	r0, #16
 428              	.LVL57:
 429 006e F0E7     		b	.L24
 430              	.L34:
 431              		.align	2
 432              	.L33:
 433 0070 00000000 		.word	.LANCHOR0
 434              		.cfi_endproc
 435              	.LFE337:
 437              		.section	.text.enq_lock,"ax",%progbits
 438              		.align	1
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	enq_lock:
 445              	.LFB338:
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 797:Middlewares/Third_Party/FatFs/src/ff.c **** static
 798:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 799:Middlewares/Third_Party/FatFs/src/ff.c **** {
 446              		.loc 1 799 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451              	.LVL58:
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 801:Middlewares/Third_Party/FatFs/src/ff.c **** 
 802:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 452              		.loc 1 802 0
 453 0000 0020     		movs	r0, #0
 454 0002 00E0     		b	.L36
 455              	.LVL59:
 456              	.L38:
ARM GAS  /tmp/ccJz23SP.s 			page 23


 457              		.loc 1 802 0 is_stmt 0 discriminator 4
 458 0004 0130     		adds	r0, r0, #1
 459              	.LVL60:
 460              	.L36:
 461              		.loc 1 802 0 discriminator 1
 462 0006 0128     		cmp	r0, #1
 463 0008 04D8     		bhi	.L37
 464              		.loc 1 802 0 discriminator 3
 465 000a 0301     		lsls	r3, r0, #4
 466 000c 034A     		ldr	r2, .L39
 467 000e D358     		ldr	r3, [r2, r3]
 468 0010 002B     		cmp	r3, #0
 469 0012 F7D1     		bne	.L38
 470              	.L37:
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 804:Middlewares/Third_Party/FatFs/src/ff.c **** }
 471              		.loc 1 804 0 is_stmt 1
 472 0014 0238     		subs	r0, r0, #2
 473              	.LVL61:
 474 0016 18BF     		it	ne
 475 0018 0120     		movne	r0, #1
 476              	.LVL62:
 477 001a 7047     		bx	lr
 478              	.L40:
 479              		.align	2
 480              	.L39:
 481 001c 00000000 		.word	.LANCHOR0
 482              		.cfi_endproc
 483              	.LFE338:
 485              		.section	.text.inc_lock,"ax",%progbits
 486              		.align	1
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv4-sp-d16
 492              	inc_lock:
 493              	.LFB339:
 805:Middlewares/Third_Party/FatFs/src/ff.c **** 
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 
 807:Middlewares/Third_Party/FatFs/src/ff.c **** static
 808:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** )
 812:Middlewares/Third_Party/FatFs/src/ff.c **** {
 494              		.loc 1 812 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499              	.LVL63:
 500 0000 70B4     		push	{r4, r5, r6}
 501              	.LCFI5:
 502              		.cfi_def_cfa_offset 12
 503              		.cfi_offset 4, -12
 504              		.cfi_offset 5, -8
 505              		.cfi_offset 6, -4
ARM GAS  /tmp/ccJz23SP.s 			page 24


 506              	.LVL64:
 813:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 507              		.loc 1 816 0
 508 0002 0023     		movs	r3, #0
 509 0004 00E0     		b	.L42
 510              	.LVL65:
 511              	.L43:
 512              		.loc 1 816 0 is_stmt 0 discriminator 2
 513 0006 0133     		adds	r3, r3, #1
 514              	.LVL66:
 515              	.L42:
 516              		.loc 1 816 0 discriminator 1
 517 0008 012B     		cmp	r3, #1
 518 000a 13D8     		bhi	.L44
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 519              		.loc 1 817 0 is_stmt 1
 520 000c 1A01     		lsls	r2, r3, #4
 521 000e 244C     		ldr	r4, .L59
 522 0010 A458     		ldr	r4, [r4, r2]
 523 0012 0268     		ldr	r2, [r0]
 524 0014 9442     		cmp	r4, r2
 525 0016 F6D1     		bne	.L43
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 526              		.loc 1 818 0 discriminator 1
 527 0018 214A     		ldr	r2, .L59
 528 001a 02EB0312 		add	r2, r2, r3, lsl #4
 529 001e 5468     		ldr	r4, [r2, #4]
 530 0020 8268     		ldr	r2, [r0, #8]
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 531              		.loc 1 817 0 discriminator 1
 532 0022 9442     		cmp	r4, r2
 533 0024 EFD1     		bne	.L43
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 534              		.loc 1 819 0
 535 0026 1E4A     		ldr	r2, .L59
 536 0028 02EB0312 		add	r2, r2, r3, lsl #4
 537 002c 9468     		ldr	r4, [r2, #8]
 538 002e 4269     		ldr	r2, [r0, #20]
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 539              		.loc 1 818 0
 540 0030 9442     		cmp	r4, r2
 541 0032 E8D1     		bne	.L43
 542              	.L44:
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 543              		.loc 1 822 0
 544 0034 022B     		cmp	r3, #2
 545 0036 29D0     		beq	.L58
 546              	.LVL67:
 547              	.L47:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
ARM GAS  /tmp/ccJz23SP.s 			page 25


 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 829:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 830:Middlewares/Third_Party/FatFs/src/ff.c **** 
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 548              		.loc 1 831 0
 549 0038 21B1     		cbz	r1, .L51
 550              		.loc 1 831 0 is_stmt 0 discriminator 1
 551 003a 194A     		ldr	r2, .L59
 552 003c 02EB0312 		add	r2, r2, r3, lsl #4
 553 0040 9289     		ldrh	r2, [r2, #12]
 554 0042 52BB     		cbnz	r2, .L55
 555              	.L51:
 832:Middlewares/Third_Party/FatFs/src/ff.c **** 
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 556              		.loc 1 833 0 is_stmt 1
 557 0044 21BB     		cbnz	r1, .L56
 558              		.loc 1 833 0 is_stmt 0 discriminator 1
 559 0046 164A     		ldr	r2, .L59
 560 0048 02EB0312 		add	r2, r2, r3, lsl #4
 561 004c 9189     		ldrh	r1, [r2, #12]
 562              	.LVL68:
 563 004e 0131     		adds	r1, r1, #1
 564 0050 89B2     		uxth	r1, r1
 565              	.L52:
 566              		.loc 1 833 0 discriminator 4
 567 0052 134A     		ldr	r2, .L59
 568 0054 02EB0312 		add	r2, r2, r3, lsl #4
 569 0058 9181     		strh	r1, [r2, #12]	@ movhi
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 
 835:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 570              		.loc 1 835 0 is_stmt 1 discriminator 4
 571 005a 581C     		adds	r0, r3, #1
 572              	.L41:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** }
 573              		.loc 1 836 0
 574 005c 70BC     		pop	{r4, r5, r6}
 575              	.LCFI6:
 576              		.cfi_remember_state
 577              		.cfi_restore 6
 578              		.cfi_restore 5
 579              		.cfi_restore 4
 580              		.cfi_def_cfa_offset 0
 581 005e 7047     		bx	lr
 582              	.LVL69:
 583              	.L49:
 584              	.LCFI7:
 585              		.cfi_restore_state
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 586              		.loc 1 823 0 discriminator 4
 587 0060 0133     		adds	r3, r3, #1
 588              	.LVL70:
 589              	.L46:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 590              		.loc 1 823 0 is_stmt 0 discriminator 1
 591 0062 012B     		cmp	r3, #1
ARM GAS  /tmp/ccJz23SP.s 			page 26


 592 0064 04D8     		bhi	.L48
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 593              		.loc 1 823 0 discriminator 3
 594 0066 1A01     		lsls	r2, r3, #4
 595 0068 0D4C     		ldr	r4, .L59
 596 006a A258     		ldr	r2, [r4, r2]
 597 006c 002A     		cmp	r2, #0
 598 006e F7D1     		bne	.L49
 599              	.L48:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 600              		.loc 1 824 0 is_stmt 1
 601 0070 022B     		cmp	r3, #2
 602 0072 10D0     		beq	.L54
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 603              		.loc 1 825 0
 604 0074 0668     		ldr	r6, [r0]
 605 0076 0A4D     		ldr	r5, .L59
 606 0078 1C01     		lsls	r4, r3, #4
 607 007a 2A19     		adds	r2, r5, r4
 608 007c 2E51     		str	r6, [r5, r4]
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 609              		.loc 1 826 0
 610 007e 8468     		ldr	r4, [r0, #8]
 611 0080 5460     		str	r4, [r2, #4]
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 612              		.loc 1 827 0
 613 0082 4069     		ldr	r0, [r0, #20]
 614              	.LVL71:
 615 0084 9060     		str	r0, [r2, #8]
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 616              		.loc 1 828 0
 617 0086 0020     		movs	r0, #0
 618 0088 9081     		strh	r0, [r2, #12]	@ movhi
 619 008a D5E7     		b	.L47
 620              	.LVL72:
 621              	.L58:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 622              		.loc 1 823 0
 623 008c 0023     		movs	r3, #0
 624              	.LVL73:
 625 008e E8E7     		b	.L46
 626              	.LVL74:
 627              	.L56:
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 
 628              		.loc 1 833 0
 629 0090 4FF48071 		mov	r1, #256
 630              	.LVL75:
 631 0094 DDE7     		b	.L52
 632              	.LVL76:
 633              	.L54:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 634              		.loc 1 824 0
 635 0096 0020     		movs	r0, #0
 636              	.LVL77:
 637 0098 E0E7     		b	.L41
 638              	.L55:
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 27


 639              		.loc 1 831 0
 640 009a 0020     		movs	r0, #0
 641 009c DEE7     		b	.L41
 642              	.L60:
 643 009e 00BF     		.align	2
 644              	.L59:
 645 00a0 00000000 		.word	.LANCHOR0
 646              		.cfi_endproc
 647              	.LFE339:
 649              		.section	.text.dec_lock,"ax",%progbits
 650              		.align	1
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu fpv4-sp-d16
 656              	dec_lock:
 657              	.LFB340:
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** static
 840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 842:Middlewares/Third_Party/FatFs/src/ff.c **** )
 843:Middlewares/Third_Party/FatFs/src/ff.c **** {
 658              		.loc 1 843 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663              	.LVL78:
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 664              		.loc 1 848 0
 665 0000 0138     		subs	r0, r0, #1
 666              	.LVL79:
 667 0002 0128     		cmp	r0, #1
 668 0004 15D8     		bhi	.L64
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 669              		.loc 1 849 0
 670 0006 0D4B     		ldr	r3, .L67
 671 0008 03EB0013 		add	r3, r3, r0, lsl #4
 672 000c 9B89     		ldrh	r3, [r3, #12]
 673              	.LVL80:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 674              		.loc 1 850 0
 675 000e B3F5807F 		cmp	r3, #256
 676 0012 03D0     		beq	.L65
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 677              		.loc 1 851 0
 678 0014 1BB1     		cbz	r3, .L63
 679              		.loc 1 851 0 is_stmt 0 discriminator 1
 680 0016 013B     		subs	r3, r3, #1
 681              	.LVL81:
 682 0018 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccJz23SP.s 			page 28


 683              	.LVL82:
 684 001a 00E0     		b	.L63
 685              	.L65:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 686              		.loc 1 850 0 is_stmt 1
 687 001c 0023     		movs	r3, #0
 688              	.LVL83:
 689              	.L63:
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 690              		.loc 1 852 0
 691 001e 074A     		ldr	r2, .L67
 692 0020 02EB0012 		add	r2, r2, r0, lsl #4
 693 0024 9381     		strh	r3, [r2, #12]	@ movhi
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 694              		.loc 1 853 0
 695 0026 33B9     		cbnz	r3, .L66
 696              		.loc 1 853 0 is_stmt 0 discriminator 1
 697 0028 0301     		lsls	r3, r0, #4
 698              	.LVL84:
 699 002a 0020     		movs	r0, #0
 700              	.LVL85:
 701 002c 034A     		ldr	r2, .L67
 702              	.LVL86:
 703 002e D050     		str	r0, [r2, r3]
 704 0030 7047     		bx	lr
 705              	.LVL87:
 706              	.L64:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 707              		.loc 1 856 0 is_stmt 1
 708 0032 0220     		movs	r0, #2
 709              	.LVL88:
 710 0034 7047     		bx	lr
 711              	.LVL89:
 712              	.L66:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 713              		.loc 1 854 0
 714 0036 0020     		movs	r0, #0
 715              	.LVL90:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 716              		.loc 1 859 0
 717 0038 7047     		bx	lr
 718              	.L68:
 719 003a 00BF     		.align	2
 720              	.L67:
 721 003c 00000000 		.word	.LANCHOR0
 722              		.cfi_endproc
 723              	.LFE340:
 725              		.section	.text.clear_lock,"ax",%progbits
 726              		.align	1
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccJz23SP.s 			page 29


 732              	clear_lock:
 733              	.LFB341:
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 
 862:Middlewares/Third_Party/FatFs/src/ff.c **** static
 863:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 865:Middlewares/Third_Party/FatFs/src/ff.c **** )
 866:Middlewares/Third_Party/FatFs/src/ff.c **** {
 734              		.loc 1 866 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739              	.LVL91:
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 868:Middlewares/Third_Party/FatFs/src/ff.c **** 
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 740              		.loc 1 869 0
 741 0000 0023     		movs	r3, #0
 742 0002 03E0     		b	.L74
 743              	.LVL92:
 744              	.L81:
 745              	.LCFI8:
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 4, -4
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 871:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 748              		.loc 1 872 0
 749 0004 5DF8044B 		ldr	r4, [sp], #4
 750              	.LCFI9:
 751              		.cfi_restore 4
 752              		.cfi_def_cfa_offset 0
 753 0008 7047     		bx	lr
 754              	.L80:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 755              		.loc 1 869 0
 756 000a 0133     		adds	r3, r3, #1
 757              	.LVL93:
 758              	.L74:
 759 000c 012B     		cmp	r3, #1
 760 000e 11D8     		bhi	.L79
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 761              		.loc 1 870 0
 762 0010 1A01     		lsls	r2, r3, #4
 763 0012 0949     		ldr	r1, .L82
 764 0014 8A58     		ldr	r2, [r1, r2]
 765 0016 8242     		cmp	r2, r0
 766 0018 F7D1     		bne	.L80
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 767              		.loc 1 866 0
 768 001a 10B4     		push	{r4}
 769              	.LCFI10:
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 4, -4
 772              	.L75:
ARM GAS  /tmp/ccJz23SP.s 			page 30


 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 773              		.loc 1 870 0 discriminator 1
 774 001c 1A01     		lsls	r2, r3, #4
 775 001e 0024     		movs	r4, #0
 776 0020 8C50     		str	r4, [r1, r2]
 777              	.L71:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 778              		.loc 1 869 0 discriminator 2
 779 0022 0133     		adds	r3, r3, #1
 780              	.LVL94:
 781 0024 012B     		cmp	r3, #1
 782 0026 EDD8     		bhi	.L81
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 783              		.loc 1 870 0
 784 0028 1A01     		lsls	r2, r3, #4
 785 002a 0349     		ldr	r1, .L82
 786 002c 8A58     		ldr	r2, [r1, r2]
 787 002e 8242     		cmp	r2, r0
 788 0030 F7D1     		bne	.L71
 789 0032 F3E7     		b	.L75
 790              	.L79:
 791              	.LCFI11:
 792              		.cfi_def_cfa_offset 0
 793              		.cfi_restore 4
 794 0034 7047     		bx	lr
 795              	.L83:
 796 0036 00BF     		.align	2
 797              	.L82:
 798 0038 00000000 		.word	.LANCHOR0
 799              		.cfi_endproc
 800              	.LFE341:
 802              		.section	.text.clust2sect,"ax",%progbits
 803              		.align	1
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu fpv4-sp-d16
 809              	clust2sect:
 810              	.LFB345:
 873:Middlewares/Third_Party/FatFs/src/ff.c **** 
 874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_LOCK != 0 */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 
 876:Middlewares/Third_Party/FatFs/src/ff.c **** 
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 
 878:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 879:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 881:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 882:Middlewares/Third_Party/FatFs/src/ff.c **** static
 883:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs			/* File system object */
 885:Middlewares/Third_Party/FatFs/src/ff.c **** )
 886:Middlewares/Third_Party/FatFs/src/ff.c **** {
 887:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 888:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 31


 891:Middlewares/Third_Party/FatFs/src/ff.c **** 
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 907:Middlewares/Third_Party/FatFs/src/ff.c **** }
 908:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 
 911:Middlewares/Third_Party/FatFs/src/ff.c **** static
 912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
 915:Middlewares/Third_Party/FatFs/src/ff.c **** )
 916:Middlewares/Third_Party/FatFs/src/ff.c **** {
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 921:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 933:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 939:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 942:Middlewares/Third_Party/FatFs/src/ff.c **** 
 943:Middlewares/Third_Party/FatFs/src/ff.c **** static
 944:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
 945:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 946:Middlewares/Third_Party/FatFs/src/ff.c **** )
 947:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/ccJz23SP.s 			page 32


 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 
 950:Middlewares/Third_Party/FatFs/src/ff.c **** 
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 972:Middlewares/Third_Party/FatFs/src/ff.c **** }
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 974:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 
 978:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 979:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 980:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 
 982:Middlewares/Third_Party/FatFs/src/ff.c **** static
 983:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 986:Middlewares/Third_Party/FatFs/src/ff.c **** )
 987:Middlewares/Third_Party/FatFs/src/ff.c **** {
 811              		.loc 1 987 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816              	.LVL95:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 817              		.loc 1 988 0
 818 0000 0239     		subs	r1, r1, #2
 819              	.LVL96:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 820              		.loc 1 989 0
 821 0002 4369     		ldr	r3, [r0, #20]
 822 0004 023B     		subs	r3, r3, #2
 823 0006 8B42     		cmp	r3, r1
 824 0008 04D9     		bls	.L86
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
ARM GAS  /tmp/ccJz23SP.s 			page 33


 825              		.loc 1 990 0
 826 000a 4389     		ldrh	r3, [r0, #10]
 827 000c 806A     		ldr	r0, [r0, #40]
 828              	.LVL97:
 829 000e 01FB0300 		mla	r0, r1, r3, r0
 830 0012 7047     		bx	lr
 831              	.LVL98:
 832              	.L86:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 833              		.loc 1 989 0
 834 0014 0020     		movs	r0, #0
 835              	.LVL99:
 991:Middlewares/Third_Party/FatFs/src/ff.c **** }
 836              		.loc 1 991 0
 837 0016 7047     		bx	lr
 838              		.cfi_endproc
 839              	.LFE345:
 841              		.section	.text.clmt_clust,"ax",%progbits
 842              		.align	1
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv4-sp-d16
 848              	clmt_clust:
 849              	.LFB350:
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 
 996:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 997:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 999:Middlewares/Third_Party/FatFs/src/ff.c **** 
1000:Middlewares/Third_Party/FatFs/src/ff.c **** static
1001:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Corresponding object */
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* Cluster number to get the value */
1004:Middlewares/Third_Party/FatFs/src/ff.c **** )
1005:Middlewares/Third_Party/FatFs/src/ff.c **** {
1006:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
1007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1009:Middlewares/Third_Party/FatFs/src/ff.c **** 
1010:Middlewares/Third_Party/FatFs/src/ff.c **** 
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** 
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
ARM GAS  /tmp/ccJz23SP.s 			page 34


1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1037:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->objsize) {
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 2) {	/* Is there no valid chain on the FAT? */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cofs <= clen) {
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* Generate the value */
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 						break;
1046:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = clst + 1; 	/* Generate the value */
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1053:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1058:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1059:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1060:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1061:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1062:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* go to default */
1063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** }
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 
1075:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1076:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1077:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 
1080:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  /tmp/ccJz23SP.s 			page 35


1081:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val		/* New value to be set to the entry */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** )
1086:Middlewares/Third_Party/FatFs/src/ff.c **** {
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INT_ERR;
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :	/* WORD aligned items */
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1113:Middlewares/Third_Party/FatFs/src/ff.c **** 
1114:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :	/* DWORD aligned items */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1117:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1120:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1128:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1129:Middlewares/Third_Party/FatFs/src/ff.c **** }
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 
1131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 
1136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
1137:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccJz23SP.s 			page 36


1138:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1139:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 
1141:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1142:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find a contiguous free cluster block */
1143:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** static
1146:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1149:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** )
1151:Middlewares/Third_Party/FatFs/src/ff.c **** {
1152:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm, bv;
1153:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val, scl, ctr;
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 
1156:Middlewares/Third_Party/FatFs/src/ff.c **** 
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	scl = val = clst; ctr = 0;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!bv) {	/* Is it a free cluster? */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm);
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1179:Middlewares/Third_Party/FatFs/src/ff.c **** }
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 
1182:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set/Clear a block of allocation bitmap */
1184:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 
1186:Middlewares/Third_Party/FatFs/src/ff.c **** static
1187:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT change_bitmap (
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1192:Middlewares/Third_Party/FatFs/src/ff.c **** )
1193:Middlewares/Third_Party/FatFs/src/ff.c **** {
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm;
ARM GAS  /tmp/ccJz23SP.s 			page 37


1195:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1196:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect;
1197:Middlewares/Third_Party/FatFs/src/ff.c **** 
1198:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1201:Middlewares/Third_Party/FatFs/src/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1204:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1208:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1210:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1215:Middlewares/Third_Party/FatFs/src/ff.c **** }
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 
1218:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1219:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the first fragment of the FAT chain    */
1220:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 
1222:Middlewares/Third_Party/FatFs/src/ff.c **** static
1223:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_first_frag (
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj	/* Pointer to the corresponding object */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** )
1226:Middlewares/Third_Party/FatFs/src/ff.c **** {
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, n;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 
1230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented'? */
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1238:Middlewares/Third_Party/FatFs/src/ff.c **** }
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 
1241:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1242:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the last fragment of the FAT chain     */
1243:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 
1245:Middlewares/Third_Party/FatFs/src/ff.c **** static
1246:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_last_frag (
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Pointer to the corresponding object */
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD lcl,	/* Last cluster of the fragment */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD term	/* Value to set the last FAT entry */
1250:Middlewares/Third_Party/FatFs/src/ff.c **** )
1251:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/ccJz23SP.s 			page 38


1252:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (obj->n_frag > 0) {	/* Create the last chain on the FAT */
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->n_frag--;
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
1262:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT && !_FS_READONLY */
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1269:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1270:Middlewares/Third_Party/FatFs/src/ff.c **** static
1271:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1272:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1280:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst;
1282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1283:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rt[2];
1285:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Remove the chain */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1304:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/ccJz23SP.s 			page 39


1309:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** 			ecl = nxt;
1312:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* End of contiguous cluster block */
1313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) return res;
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1318:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1319:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1320:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[0] = clust2sect(fs, scl);					/* Start sector */
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1324:Middlewares/Third_Party/FatFs/src/ff.c **** 			scl = ecl = nxt;
1325:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1326:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = nxt;					/* Next cluster */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1329:Middlewares/Third_Party/FatFs/src/ff.c **** 
1330:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1332:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pclst == 0) {	/* Does the object have no chain? */
1333:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 0;		/* Change the object status 'initial' */
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Did the c
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 2;	/* Change the object status 'contiguous' */
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1340:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1342:Middlewares/Third_Party/FatFs/src/ff.c **** }
1343:Middlewares/Third_Party/FatFs/src/ff.c **** 
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** 
1347:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1348:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1350:Middlewares/Third_Party/FatFs/src/ff.c **** static
1351:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1354:Middlewares/Third_Party/FatFs/src/ff.c **** )
1355:Middlewares/Third_Party/FatFs/src/ff.c **** {
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Stretch current chain */
ARM GAS  /tmp/ccJz23SP.s 			page 40


1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 
1373:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1377:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_INT_ERR) return 1;
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1382:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {									/* It is a stretched chain */
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* New fragment */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
1398:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = scl;	/* Start cluster */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl++;							/* Next cluster */
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
1406:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			cs = get_fat(obj, ncl);			/* Get the cluster status */
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
1411:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1416:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1417:Middlewares/Third_Party/FatFs/src/ff.c **** 
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
ARM GAS  /tmp/ccJz23SP.s 			page 41


1423:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1427:Middlewares/Third_Party/FatFs/src/ff.c **** }
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 
1429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 
1434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1435:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1436:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1437:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1438:Middlewares/Third_Party/FatFs/src/ff.c **** 
1439:Middlewares/Third_Party/FatFs/src/ff.c **** static
1440:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1443:Middlewares/Third_Party/FatFs/src/ff.c **** )
1444:Middlewares/Third_Party/FatFs/src/ff.c **** {
 850              		.loc 1 1444 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL100:
1445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = fp->obj.fs;
 856              		.loc 1 1446 0
 857 0000 0268     		ldr	r2, [r0]
 858              	.LVL101:
1447:Middlewares/Third_Party/FatFs/src/ff.c **** 
1448:Middlewares/Third_Party/FatFs/src/ff.c **** 
1449:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 859              		.loc 1 1449 0
 860 0002 C36A     		ldr	r3, [r0, #44]
 861 0004 0433     		adds	r3, r3, #4
 862              	.LVL102:
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 863              		.loc 1 1450 0
 864 0006 490A     		lsrs	r1, r1, #9
 865              	.LVL103:
 866 0008 5289     		ldrh	r2, [r2, #10]
 867              	.LVL104:
 868 000a B1FBF2F1 		udiv	r1, r1, r2
 869              	.LVL105:
 870              	.L90:
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 871              		.loc 1 1452 0
 872 000e 1868     		ldr	r0, [r3]
 873              	.LVL106:
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 874              		.loc 1 1453 0
 875 0010 30B1     		cbz	r0, .L87
ARM GAS  /tmp/ccJz23SP.s 			page 42


1454:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 876              		.loc 1 1454 0
 877 0012 8142     		cmp	r1, r0
 878 0014 02D3     		bcc	.L89
1455:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 879              		.loc 1 1455 0
 880 0016 091A     		subs	r1, r1, r0
 881              	.LVL107:
 882 0018 0833     		adds	r3, r3, #8
 883              	.LVL108:
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 884              		.loc 1 1452 0
 885 001a F8E7     		b	.L90
 886              	.LVL109:
 887              	.L89:
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 888              		.loc 1 1457 0
 889 001c 5868     		ldr	r0, [r3, #4]
 890              	.LVL110:
 891 001e 0844     		add	r0, r0, r1
 892              	.L87:
1458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 893              		.loc 1 1458 0
 894 0020 7047     		bx	lr
 895              		.cfi_endproc
 896              	.LFE350:
 898              		.section	.text.ld_clust,"ax",%progbits
 899              		.align	1
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv4-sp-d16
 905              	ld_clust:
 906              	.LFB354:
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 
1460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 
1465:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1466:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 
1469:Middlewares/Third_Party/FatFs/src/ff.c **** static
1470:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* Offset of directory table */
1473:Middlewares/Third_Party/FatFs/src/ff.c **** )
1474:Middlewares/Third_Party/FatFs/src/ff.c **** {
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE)
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
ARM GAS  /tmp/ccJz23SP.s 			page 43


1481:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = clust2sect(fs, clst);
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1507:Middlewares/Third_Party/FatFs/src/ff.c **** 
1508:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1509:Middlewares/Third_Party/FatFs/src/ff.c **** }
1510:Middlewares/Third_Party/FatFs/src/ff.c **** 
1511:Middlewares/Third_Party/FatFs/src/ff.c **** 
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 
1514:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1515:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1516:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1517:Middlewares/Third_Party/FatFs/src/ff.c **** 
1518:Middlewares/Third_Party/FatFs/src/ff.c **** static
1519:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1522:Middlewares/Third_Party/FatFs/src/ff.c **** )
1523:Middlewares/Third_Party/FatFs/src/ff.c **** {
1524:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
1525:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1526:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1527:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
ARM GAS  /tmp/ccJz23SP.s 			page 44


1538:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1541:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
1547:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1550:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect -= n;							/* Restore window offset */
1564:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
1571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1578:Middlewares/Third_Party/FatFs/src/ff.c **** }
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** 
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  /tmp/ccJz23SP.s 			page 45


1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 
1598:Middlewares/Third_Party/FatFs/src/ff.c **** 
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1605:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1608:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** }
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 
1622:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 
1626:Middlewares/Third_Party/FatFs/src/ff.c **** 
1627:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1628:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1629:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 
1631:Middlewares/Third_Party/FatFs/src/ff.c **** static
1632:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1635:Middlewares/Third_Party/FatFs/src/ff.c **** )
1636:Middlewares/Third_Party/FatFs/src/ff.c **** {
 907              		.loc 1 1636 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              	.LVL111:
 912 0000 70B5     		push	{r4, r5, r6, lr}
 913              	.LCFI12:
 914              		.cfi_def_cfa_offset 16
 915              		.cfi_offset 4, -16
 916              		.cfi_offset 5, -12
 917              		.cfi_offset 6, -8
 918              		.cfi_offset 14, -4
 919 0002 0646     		mov	r6, r0
 920 0004 0D46     		mov	r5, r1
1637:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
ARM GAS  /tmp/ccJz23SP.s 			page 46


1638:Middlewares/Third_Party/FatFs/src/ff.c **** 
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 921              		.loc 1 1639 0
 922 0006 01F11A00 		add	r0, r1, #26
 923              	.LVL112:
 924 000a FFF7FEFF 		bl	ld_word
 925              	.LVL113:
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 926              		.loc 1 1640 0
 927 000e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 928 0010 032B     		cmp	r3, #3
 929 0012 00D0     		beq	.L94
 930              	.LVL114:
 931              	.L91:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1643:Middlewares/Third_Party/FatFs/src/ff.c **** 
1644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 932              		.loc 1 1645 0
 933 0014 70BD     		pop	{r4, r5, r6, pc}
 934              	.LVL115:
 935              	.L94:
 936 0016 0446     		mov	r4, r0
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 937              		.loc 1 1641 0
 938 0018 05F11400 		add	r0, r5, #20
 939              	.LVL116:
 940 001c FFF7FEFF 		bl	ld_word
 941              	.LVL117:
 942 0020 44EA0040 		orr	r0, r4, r0, lsl #16
 943              	.LVL118:
1644:Middlewares/Third_Party/FatFs/src/ff.c **** }
 944              		.loc 1 1644 0
 945 0024 F6E7     		b	.L91
 946              		.cfi_endproc
 947              	.LFE354:
 949              		.section	.text.st_clust,"ax",%progbits
 950              		.align	1
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu fpv4-sp-d16
 956              	st_clust:
 957              	.LFB355:
1646:Middlewares/Third_Party/FatFs/src/ff.c **** 
1647:Middlewares/Third_Party/FatFs/src/ff.c **** 
1648:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1649:Middlewares/Third_Party/FatFs/src/ff.c **** static
1650:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1653:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** )
1655:Middlewares/Third_Party/FatFs/src/ff.c **** {
 958              		.loc 1 1655 0
 959              		.cfi_startproc
ARM GAS  /tmp/ccJz23SP.s 			page 47


 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962              	.LVL119:
 963 0000 70B5     		push	{r4, r5, r6, lr}
 964              	.LCFI13:
 965              		.cfi_def_cfa_offset 16
 966              		.cfi_offset 4, -16
 967              		.cfi_offset 5, -12
 968              		.cfi_offset 6, -8
 969              		.cfi_offset 14, -4
 970 0002 0646     		mov	r6, r0
 971 0004 0C46     		mov	r4, r1
 972 0006 1546     		mov	r5, r2
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 973              		.loc 1 1656 0
 974 0008 91B2     		uxth	r1, r2
 975              	.LVL120:
 976 000a 04F11A00 		add	r0, r4, #26
 977              	.LVL121:
 978 000e FFF7FEFF 		bl	st_word
 979              	.LVL122:
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 980              		.loc 1 1657 0
 981 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 982 0014 032B     		cmp	r3, #3
 983 0016 00D0     		beq	.L98
 984              	.L95:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1660:Middlewares/Third_Party/FatFs/src/ff.c **** }
 985              		.loc 1 1660 0
 986 0018 70BD     		pop	{r4, r5, r6, pc}
 987              	.LVL123:
 988              	.L98:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 989              		.loc 1 1658 0
 990 001a 290C     		lsrs	r1, r5, #16
 991 001c 04F11400 		add	r0, r4, #20
 992 0020 FFF7FEFF 		bl	st_word
 993              	.LVL124:
 994              		.loc 1 1660 0
 995 0024 F8E7     		b	.L95
 996              		.cfi_endproc
 997              	.LFE355:
 999              		.section	.text.get_fileinfo,"ax",%progbits
 1000              		.align	1
 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1004              		.fpu fpv4-sp-d16
 1006              	get_fileinfo:
 1007              	.LFB360:
1661:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
ARM GAS  /tmp/ccJz23SP.s 			page 48


1666:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1667:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: LFN handling                                                  */
1668:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1669:Middlewares/Third_Party/FatFs/src/ff.c **** static
1670:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 
1673:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1674:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
1675:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1676:Middlewares/Third_Party/FatFs/src/ff.c **** static
1677:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1680:Middlewares/Third_Party/FatFs/src/ff.c **** )
1681:Middlewares/Third_Party/FatFs/src/ff.c **** {
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = uc;
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1700:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN matched */
1705:Middlewares/Third_Party/FatFs/src/ff.c **** }
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 
1707:Middlewares/Third_Party/FatFs/src/ff.c **** 
1708:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
1709:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1710:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1711:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1712:Middlewares/Third_Party/FatFs/src/ff.c **** static
1713:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1715:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1716:Middlewares/Third_Party/FatFs/src/ff.c **** )
1717:Middlewares/Third_Party/FatFs/src/ff.c **** {
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** 
1722:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
ARM GAS  /tmp/ccJz23SP.s 			page 49


1723:Middlewares/Third_Party/FatFs/src/ff.c **** 
1724:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1725:Middlewares/Third_Party/FatFs/src/ff.c **** 
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1731:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN is valid */
1742:Middlewares/Third_Party/FatFs/src/ff.c **** }
1743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 
1746:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1747:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1748:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1749:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1750:Middlewares/Third_Party/FatFs/src/ff.c **** static
1751:Middlewares/Third_Party/FatFs/src/ff.c **** void put_lfn (
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1756:Middlewares/Third_Party/FatFs/src/ff.c **** )
1757:Middlewares/Third_Party/FatFs/src/ff.c **** {
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1759:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 
1762:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1763:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1768:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
1769:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1773:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** }
1777:Middlewares/Third_Party/FatFs/src/ff.c **** 
1778:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1779:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
ARM GAS  /tmp/ccJz23SP.s 			page 50


1780:Middlewares/Third_Party/FatFs/src/ff.c **** 
1781:Middlewares/Third_Party/FatFs/src/ff.c **** 
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && !_FS_READONLY
1784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1785:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1786:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 
1788:Middlewares/Third_Party/FatFs/src/ff.c **** static
1789:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1794:Middlewares/Third_Party/FatFs/src/ff.c **** )
1795:Middlewares/Third_Party/FatFs/src/ff.c **** {
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1797:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 
1802:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
1803:Middlewares/Third_Party/FatFs/src/ff.c **** 
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1813:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1819:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)((seq % 16) + '0');
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1824:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1831:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1832:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1833:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
ARM GAS  /tmp/ccJz23SP.s 			page 51


1837:Middlewares/Third_Party/FatFs/src/ff.c **** }
1838:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 && !_FS_READONLY */
1839:Middlewares/Third_Party/FatFs/src/ff.c **** 
1840:Middlewares/Third_Party/FatFs/src/ff.c **** 
1841:Middlewares/Third_Party/FatFs/src/ff.c **** 
1842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1843:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1844:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1846:Middlewares/Third_Party/FatFs/src/ff.c **** 
1847:Middlewares/Third_Party/FatFs/src/ff.c **** static
1848:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1849:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1850:Middlewares/Third_Party/FatFs/src/ff.c **** )
1851:Middlewares/Third_Party/FatFs/src/ff.c **** {
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** 
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1856:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
1857:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--n);
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1859:Middlewares/Third_Party/FatFs/src/ff.c **** }
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 
1861:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** 
1865:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1866:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1867:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Checksum                                                       */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 
1870:Middlewares/Third_Party/FatFs/src/ff.c **** static
1871:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly block */
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
1873:Middlewares/Third_Party/FatFs/src/ff.c **** )
1874:Middlewares/Third_Party/FatFs/src/ff.c **** {
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, szblk;
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum;
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 			i++;
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1888:Middlewares/Third_Party/FatFs/src/ff.c **** }
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 
1892:Middlewares/Third_Party/FatFs/src/ff.c **** static
1893:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
ARM GAS  /tmp/ccJz23SP.s 			page 52


1894:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* name	/* File name to be calculated */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** )
1896:Middlewares/Third_Party/FatFs/src/ff.c **** {
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum = 0;
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	while ((chr = *name++) != 0) {
1902:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = ff_wtoupper(chr);		/* File name needs to be ignored case */
1903:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1907:Middlewares/Third_Party/FatFs/src/ff.c **** }
1908:Middlewares/Third_Party/FatFs/src/ff.c **** 
1909:Middlewares/Third_Party/FatFs/src/ff.c **** 
1910:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _USE_MKFS
1911:Middlewares/Third_Party/FatFs/src/ff.c **** static
1912:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD xsum32 (
1913:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE  dat,	/* Data to be sumed */
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sum	/* Previous value */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** )
1916:Middlewares/Third_Party/FatFs/src/ff.c **** {
1917:Middlewares/Third_Party/FatFs/src/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
1918:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1919:Middlewares/Third_Party/FatFs/src/ff.c **** }
1920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 
1923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1924:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1925:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get object information from a directory block */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 
1928:Middlewares/Third_Party/FatFs/src/ff.c **** static
1929:Middlewares/Third_Party/FatFs/src/ff.c **** void get_xdir_info (
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** )
1933:Middlewares/Third_Party/FatFs/src/ff.c **** {
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT di, si;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nc;
1938:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get file name */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** 	di = 0;
1942:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2; di < dirb[XDIR_NumName]; si += 2, di++) {
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ld_word(dirb + si);					/* Get a character */
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) { di = 0; break; }	/* Buffer overflow --> inaccessible object name */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di] = w;						/* Store it */
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2, nc = 0; nc < dirb[XDIR_NumName]; si += 2, nc++) {
ARM GAS  /tmp/ccJz23SP.s 			page 53


1951:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(ld_word(dirb + si), 0);	/* Get a character and Unicode -> OEM */
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {				/* Is it a double byte char? (always false at SBCS cfg) */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[di++] = (char)(w >> 8);	/* Put 1st byte of the DBC */
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == 0 || di >= _MAX_LFN) { di = 0; break; }	/* Invalid char or buffer overflow --> inaccessi
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di++] = (char)w;
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
1961:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[di] = 0;						/* Terminate file name */
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[0] = 0;							/* No SFN */
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];					/* Attribute */
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** }
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 
1970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 
1973:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1974:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get a directry entry block */
1975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** static
1978:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the reading direcotry object pointing the 85 entry */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** )
1981:Middlewares/Third_Party/FatFs/src/ff.c **** {
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, sz_ent;
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load 85 entry */
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + 0, dp->dir, SZDIRE);
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C0 entry */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_next(dp, 0);
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;
2001:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + SZDIRE, dp->dir, SZDIRE);
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C1 entries */
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SZDIRE * 2;	/* C1 offset */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
ARM GAS  /tmp/ccJz23SP.s 			page 54


2008:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < MAXDIRB(_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Sanity check (do it when accessible object name) */
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i <= MAXDIRB(_MAX_LFN)) {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2020:Middlewares/Third_Party/FatFs/src/ff.c **** }
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 
2023:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY || _FS_RPATH != 0
2024:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2025:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Load the object's directory entry block */
2026:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2027:Middlewares/Third_Party/FatFs/src/ff.c **** static
2028:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_obj_dir (
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 	const _FDID* obj	/* Object with its containing directory information */
2031:Middlewares/Third_Party/FatFs/src/ff.c **** )
2032:Middlewares/Third_Party/FatFs/src/ff.c **** {
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Open object containing directory */
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.fs = obj->fs;
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.sclust = obj->c_scl;
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2041:Middlewares/Third_Party/FatFs/src/ff.c **** 
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2047:Middlewares/Third_Party/FatFs/src/ff.c **** }
2048:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2052:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2053:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Store the directory block to the media */
2054:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2055:Middlewares/Third_Party/FatFs/src/ff.c **** static
2056:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT store_xdir (
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2058:Middlewares/Third_Party/FatFs/src/ff.c **** )
2059:Middlewares/Third_Party/FatFs/src/ff.c **** {
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2063:Middlewares/Third_Party/FatFs/src/ff.c **** 
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create set sum */
ARM GAS  /tmp/ccJz23SP.s 			page 55


2065:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Store the set of directory to the volume */
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (res == FR_OK) {
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2074:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.fs->wflag = 1;
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (--nent == 0) break;
2076:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb += SZDIRE;
2077:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2079:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2080:Middlewares/Third_Party/FatFs/src/ff.c **** }
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 
2084:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2085:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Create a new directory enrty block */
2086:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 
2088:Middlewares/Third_Party/FatFs/src/ff.c **** static
2089:Middlewares/Third_Party/FatFs/src/ff.c **** void create_xdir (
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn	/* Pointer to the nul terminated file name */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** )
2093:Middlewares/Third_Party/FatFs/src/ff.c **** {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE nb, nc;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create 85+C0 entry */
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type] = 0x85;
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type + SZDIRE] = 0xC0;
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create C1 entries */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	nc = 0; nb = 1; chr = 1; i = SZDIRE * 2;
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill name field */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chr && (chr = lfn[nc]) != 0) nc++;	/* Get a character if exist */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirb + i, chr); 		/* Store it */
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while ((i += 2) % SZDIRE != 0);
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb++;
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (lfn[nc]);	/* Fill next entry if any char follows */
2114:Middlewares/Third_Party/FatFs/src/ff.c **** 
2115:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumName] = nc;	/* Set name length */
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumSec] = nb;		/* Set block length */
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2118:Middlewares/Third_Party/FatFs/src/ff.c **** }
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
2121:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
ARM GAS  /tmp/ccJz23SP.s 			page 56


2122:Middlewares/Third_Party/FatFs/src/ff.c **** 
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** 
2125:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
2126:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2127:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 
2130:Middlewares/Third_Party/FatFs/src/ff.c **** static
2131:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2134:Middlewares/Third_Party/FatFs/src/ff.c **** )
2135:Middlewares/Third_Party/FatFs/src/ff.c **** {
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
2139:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2141:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2150:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_USE_LABEL && vol) {
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else
2165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 		{	/* On the FAT12/16/32 volume */
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check LFN validity and capture it */
ARM GAS  /tmp/ccJz23SP.s 			page 57


2179:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2183:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2184:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2186:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2187:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2189:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2191:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** }
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 
2205:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2206:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
2207:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 
2209:Middlewares/Third_Party/FatFs/src/ff.c **** static
2210:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2212:Middlewares/Third_Party/FatFs/src/ff.c **** )
2213:Middlewares/Third_Party/FatFs/src/ff.c **** {
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
2217:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
2219:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2223:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE nc;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT di, ni;
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2228:Middlewares/Third_Party/FatFs/src/ff.c **** 
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((res = dir_read(dp, 0)) == FR_OK) {	/* Read an item */
2230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 255
2231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > _MAX_LFN) continue;			/* Skip comparison if inaccessible object n
2232:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2235:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
ARM GAS  /tmp/ccJz23SP.s 			page 58


2236:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2238:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return res;
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2243:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2244:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2245:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2247:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
2251:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2252:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2266:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2271:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2272:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2273:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2275:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2276:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 
2280:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2281:Middlewares/Third_Party/FatFs/src/ff.c **** }
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 
2286:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2287:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2288:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
2289:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** static
2292:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
ARM GAS  /tmp/ccJz23SP.s 			page 59


2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
2294:Middlewares/Third_Party/FatFs/src/ff.c **** )
2295:Middlewares/Third_Party/FatFs/src/ff.c **** {
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2298:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nlen, nent;
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], sum;
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 
2306:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.sclust != 0 && (dp->obj.stat & 4)) {	/* Has the sub-directory been stretched? */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.objsize += (DWORD)fs->csize * SS(fs);	/* Increase the directory size by cluster size */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_first_frag(&dp->obj);				/* Fill first fragment on the FAT if needed */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if neede
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = load_obj_dir(&dj, &dp->obj);				/* Load the object status */
2322:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);		/* Update the allocation status */
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2325:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = store_xdir(&dj);							/* Store the object status */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create an SFN with/without LFNs. */
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
ARM GAS  /tmp/ccJz23SP.s 			page 60


2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dp->sect);
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
2365:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
2368:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set SFN entry */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2384:Middlewares/Third_Party/FatFs/src/ff.c **** }
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 
2386:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 
2390:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE == 0
2391:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2392:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 
2395:Middlewares/Third_Party/FatFs/src/ff.c **** static
2396:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2398:Middlewares/Third_Party/FatFs/src/ff.c **** )
2399:Middlewares/Third_Party/FatFs/src/ff.c **** {
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD last = dp->dptr;
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
ARM GAS  /tmp/ccJz23SP.s 			page 61


2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* On the FAT12/16/32 volume */
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[DIR_Name] = DDEM;
2415:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
2423:Middlewares/Third_Party/FatFs/src/ff.c **** 
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(fs, dp->sect);
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** 
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2432:Middlewares/Third_Party/FatFs/src/ff.c **** }
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY && _FS_MINIMIZE == 0 */
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
2439:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2442:Middlewares/Third_Party/FatFs/src/ff.c **** 
2443:Middlewares/Third_Party/FatFs/src/ff.c **** static
2444:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
2445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1008              		.loc 1 2448 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012              	.LVL125:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c;
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, lfv;
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2455:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 
2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[0] = 0;		/* Invaidate file info */
ARM GAS  /tmp/ccJz23SP.s 			page 62


 1013              		.loc 1 2458 0
 1014 0000 0023     		movs	r3, #0
 1015 0002 4B72     		strb	r3, [r1, #9]
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 1016              		.loc 1 2459 0
 1017 0004 C369     		ldr	r3, [r0, #28]
 1018 0006 73B3     		cbz	r3, .L108
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
 1019              		.loc 1 2448 0
 1020 0008 70B5     		push	{r4, r5, r6, lr}
 1021              	.LCFI14:
 1022              		.cfi_def_cfa_offset 16
 1023              		.cfi_offset 4, -16
 1024              		.cfi_offset 5, -12
 1025              		.cfi_offset 6, -8
 1026              		.cfi_offset 14, -4
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2462:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2463:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_xdir_info(fs->dirbuf, fno);
2465:Middlewares/Third_Party/FatFs/src/ff.c **** 		return;
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2467:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
2471:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
2472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
2475:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 					fno->fname[i++] = (char)(w >> 8);
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
2480:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[i] = 0;	/* Terminate the LFN */
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
2495:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2496:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
2497:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dp->dir[i])) {
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = c << 8 | dp->dir[i++];
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
ARM GAS  /tmp/ccJz23SP.s 			page 63


2501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
2502:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->altname[j] = c;
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[j] = c;
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 		j++;
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!lfv) {
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[j] = 0;	/* Terminate the SFN */
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2519:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
 1027              		.loc 1 2519 0
 1028 000a 0022     		movs	r2, #0
 1029 000c 1346     		mov	r3, r2
 1030 000e 05E0     		b	.L101
 1031              	.LVL126:
 1032              	.L103:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1033              		.loc 1 2524 0
 1034 0010 092C     		cmp	r4, #9
 1035 0012 0ED0     		beq	.L111
 1036              	.L104:
 1037              	.LVL127:
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1038              		.loc 1 2525 0
 1039 0014 8D18     		adds	r5, r1, r2
 1040 0016 6B72     		strb	r3, [r5, #9]
 1041 0018 0132     		adds	r2, r2, #1
 1042              	.LVL128:
 1043              	.L102:
 1044 001a 2346     		mov	r3, r4
 1045              	.LVL129:
 1046              	.L101:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
 1047              		.loc 1 2520 0
 1048 001c 0A2B     		cmp	r3, #10
 1049 001e 0DD8     		bhi	.L112
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 1050              		.loc 1 2521 0
 1051 0020 056A     		ldr	r5, [r0, #32]
 1052 0022 5C1C     		adds	r4, r3, #1
 1053              	.LVL130:
 1054 0024 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 1055              	.LVL131:
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
ARM GAS  /tmp/ccJz23SP.s 			page 64


 1056              		.loc 1 2522 0
 1057 0026 202B     		cmp	r3, #32
 1058 0028 F7D0     		beq	.L102
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1059              		.loc 1 2523 0
 1060 002a 052B     		cmp	r3, #5
 1061 002c F0D1     		bne	.L103
 1062 002e E523     		movs	r3, #229
 1063              	.LVL132:
 1064 0030 EEE7     		b	.L103
 1065              	.LVL133:
 1066              	.L111:
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1067              		.loc 1 2524 0 discriminator 1
 1068 0032 8D18     		adds	r5, r1, r2
 1069 0034 2E26     		movs	r6, #46
 1070 0036 6E72     		strb	r6, [r5, #9]
 1071 0038 0132     		adds	r2, r2, #1
 1072              	.LVL134:
 1073 003a EBE7     		b	.L104
 1074              	.LVL135:
 1075              	.L112:
 1076 003c 0D46     		mov	r5, r1
 1077 003e 0446     		mov	r4, r0
2526:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2527:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[j] = 0;
 1078              		.loc 1 2527 0
 1079 0040 0A44     		add	r2, r2, r1
 1080              	.LVL136:
 1081 0042 0023     		movs	r3, #0
 1082              	.LVL137:
 1083 0044 5372     		strb	r3, [r2, #9]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
 1084              		.loc 1 2530 0
 1085 0046 036A     		ldr	r3, [r0, #32]
 1086 0048 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1087 004a 0B72     		strb	r3, [r1, #8]
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 1088              		.loc 1 2531 0
 1089 004c 006A     		ldr	r0, [r0, #32]
 1090              	.LVL138:
 1091 004e 1C30     		adds	r0, r0, #28
 1092 0050 FFF7FEFF 		bl	ld_dword
 1093              	.LVL139:
 1094 0054 2860     		str	r0, [r5]
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 1095              		.loc 1 2532 0
 1096 0056 206A     		ldr	r0, [r4, #32]
 1097 0058 1630     		adds	r0, r0, #22
 1098 005a FFF7FEFF 		bl	ld_dword
 1099              	.LVL140:
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 1100              		.loc 1 2533 0
 1101 005e E880     		strh	r0, [r5, #6]	@ movhi
 1102 0060 000C     		lsrs	r0, r0, #16
ARM GAS  /tmp/ccJz23SP.s 			page 65


 1103              	.LVL141:
 1104 0062 A880     		strh	r0, [r5, #4]	@ movhi
2534:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1105              		.loc 1 2534 0
 1106 0064 70BD     		pop	{r4, r5, r6, pc}
 1107              	.LVL142:
 1108              	.L108:
 1109              	.LCFI15:
 1110              		.cfi_def_cfa_offset 0
 1111              		.cfi_restore 4
 1112              		.cfi_restore 5
 1113              		.cfi_restore 6
 1114              		.cfi_restore 14
 1115 0066 7047     		bx	lr
 1116              		.cfi_endproc
 1117              	.LFE360:
 1119              		.section	.text.create_name,"ax",%progbits
 1120              		.align	1
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu fpv4-sp-d16
 1126              	create_name:
 1127              	.LFB361:
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
2541:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2542:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
2543:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2544:Middlewares/Third_Party/FatFs/src/ff.c **** 
2545:Middlewares/Third_Party/FatFs/src/ff.c **** static
2546:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
2547:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
2548:Middlewares/Third_Party/FatFs/src/ff.c **** )
2549:Middlewares/Third_Party/FatFs/src/ff.c **** {
2550:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** 
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2556:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr)) {		/* Get DBC 2nd byte if needed */
2559:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
2563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
2565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2566:Middlewares/Third_Party/FatFs/src/ff.c **** }
2567:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 66


2568:Middlewares/Third_Party/FatFs/src/ff.c **** 
2569:Middlewares/Third_Party/FatFs/src/ff.c **** static
2570:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** )
2576:Middlewares/Third_Party/FatFs/src/ff.c **** {
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
2607:Middlewares/Third_Party/FatFs/src/ff.c **** }
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 
2609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 
2613:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a top segment and create the object name in directory form       */
2615:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 
2617:Middlewares/Third_Party/FatFs/src/ff.c **** static
2618:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2620:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** )
2622:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1128              		.loc 1 2622 0
 1129              		.cfi_startproc
ARM GAS  /tmp/ccJz23SP.s 			page 67


 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132              	.LVL143:
 1133 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1134              	.LCFI16:
 1135              		.cfi_def_cfa_offset 40
 1136              		.cfi_offset 3, -40
 1137              		.cfi_offset 4, -36
 1138              		.cfi_offset 5, -32
 1139              		.cfi_offset 6, -28
 1140              		.cfi_offset 7, -24
 1141              		.cfi_offset 8, -20
 1142              		.cfi_offset 9, -16
 1143              		.cfi_offset 10, -12
 1144              		.cfi_offset 11, -8
 1145              		.cfi_offset 14, -4
 1146 0004 8246     		mov	r10, r0
 1147 0006 8B46     		mov	fp, r1
2623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2640:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
2648:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2654:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
ARM GAS  /tmp/ccJz23SP.s 			page 68


2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2663:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = b = 0; ni = 8;
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
2697:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Is this DBC? (always false at SBCS cfg) */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2717:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
ARM GAS  /tmp/ccJz23SP.s 			page 69


2719:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** 
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 
2741:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* _USE_LFN != 0 : Non-LFN configuration */
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, d, *sfn;
2743:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2745:Middlewares/Third_Party/FatFs/src/ff.c **** 
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; sfn = dp->fn;
 1148              		.loc 1 2747 0
 1149 0008 0F68     		ldr	r7, [r1]
 1150              	.LVL144:
 1151 000a 00F12409 		add	r9, r0, #36
 1152              	.LVL145:
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
 1153              		.loc 1 2748 0
 1154 000e 0B22     		movs	r2, #11
 1155 0010 2021     		movs	r1, #32
 1156              	.LVL146:
 1157 0012 4846     		mov	r0, r9
 1158              	.LVL147:
 1159 0014 FFF7FEFF 		bl	mem_set
 1160              	.LVL148:
2749:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = 0; ni = 8;
 1161              		.loc 1 2749 0
 1162 0018 0026     		movs	r6, #0
 1163 001a 3346     		mov	r3, r6
 1164 001c 4FF00808 		mov	r8, #8
 1165 0020 2CE0     		b	.L114
 1166              	.LVL149:
 1167              	.L119:
2750:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2754:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2755:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
ARM GAS  /tmp/ccJz23SP.s 			page 70


2756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2757:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2759:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1168              		.loc 1 2767 0 discriminator 4
 1169 0022 0135     		adds	r5, r5, #1
 1170              	.LVL150:
 1171              	.L118:
 1172              		.loc 1 2767 0 is_stmt 0 discriminator 1
 1173 0024 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 1174 0026 2F2B     		cmp	r3, #47
 1175 0028 FBD0     		beq	.L119
 1176              		.loc 1 2767 0 discriminator 3
 1177 002a 5C2B     		cmp	r3, #92
 1178 002c F9D0     		beq	.L119
 1179              	.L115:
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or over size? */
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2776:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2778:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2779:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII only cfg) */
2781:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2782:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false at SBCS cfg.) */
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2793:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
 1180              		.loc 1 2795 0 is_stmt 1
 1181 002e 3D44     		add	r5, r5, r7
 1182              	.LVL151:
 1183 0030 CBF80050 		str	r5, [fp]
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
ARM GAS  /tmp/ccJz23SP.s 			page 71


 1184              		.loc 1 2796 0
 1185 0034 002E     		cmp	r6, #0
 1186 0036 43D0     		beq	.L131
2797:Middlewares/Third_Party/FatFs/src/ff.c **** 
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
 1187              		.loc 1 2798 0
 1188 0038 9AF82430 		ldrb	r3, [r10, #36]	@ zero_extendqisi2
 1189 003c E52B     		cmp	r3, #229
 1190 003e 35D0     		beq	.L135
 1191              	.L126:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1192              		.loc 1 2799 0
 1193 0040 202C     		cmp	r4, #32
 1194 0042 37D8     		bhi	.L132
 1195 0044 0423     		movs	r3, #4
 1196              	.L127:
 1197              		.loc 1 2799 0 is_stmt 0 discriminator 4
 1198 0046 8AF82F30 		strb	r3, [r10, #47]
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
 1199              		.loc 1 2801 0 is_stmt 1 discriminator 4
 1200 004a 0020     		movs	r0, #0
 1201 004c 28E0     		b	.L122
 1202              	.LVL152:
 1203              	.L137:
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 1204              		.loc 1 2772 0
 1205 004e 0826     		movs	r6, #8
 1206              	.LVL153:
 1207 0050 4FF00B08 		mov	r8, #11
 1208              	.LVL154:
 1209 0054 11E0     		b	.L123
 1210              	.LVL155:
 1211              	.L121:
2775:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 1212              		.loc 1 2775 0
 1213 0056 14F0800F 		tst	r4, #128
 1214 005a 23D1     		bne	.L136
 1215              	.L124:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1216              		.loc 1 2790 0
 1217 005c 2146     		mov	r1, r4
 1218 005e 1948     		ldr	r0, .L138
 1219 0060 FFF7FEFF 		bl	chk_chr
 1220              	.LVL156:
 1221 0064 50BB     		cbnz	r0, .L130
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1222              		.loc 1 2791 0
 1223 0066 A4F16103 		sub	r3, r4, #97
 1224 006a DBB2     		uxtb	r3, r3
 1225 006c 192B     		cmp	r3, #25
 1226 006e 01D8     		bhi	.L125
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1227              		.loc 1 2791 0 is_stmt 0 discriminator 1
 1228 0070 203C     		subs	r4, r4, #32
 1229              	.LVL157:
 1230 0072 E4B2     		uxtb	r4, r4
ARM GAS  /tmp/ccJz23SP.s 			page 72


 1231              	.LVL158:
 1232              	.L125:
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1233              		.loc 1 2792 0 is_stmt 1
 1234 0074 09F80640 		strb	r4, [r9, r6]
 1235 0078 0136     		adds	r6, r6, #1
 1236              	.LVL159:
 1237              	.L123:
 1238 007a 2B46     		mov	r3, r5
 1239              	.LVL160:
 1240              	.L114:
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 1241              		.loc 1 2764 0
 1242 007c 5D1C     		adds	r5, r3, #1
 1243              	.LVL161:
 1244 007e FC5C     		ldrb	r4, [r7, r3]	@ zero_extendqisi2
 1245              	.LVL162:
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 1246              		.loc 1 2765 0
 1247 0080 202C     		cmp	r4, #32
 1248 0082 D4D9     		bls	.L115
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1249              		.loc 1 2766 0
 1250 0084 2F2C     		cmp	r4, #47
 1251 0086 CDD0     		beq	.L118
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1252              		.loc 1 2766 0 is_stmt 0 discriminator 1
 1253 0088 5C2C     		cmp	r4, #92
 1254 008a CBD0     		beq	.L118
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 1255              		.loc 1 2770 0 is_stmt 1
 1256 008c 2E2C     		cmp	r4, #46
 1257 008e 01D0     		beq	.L120
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 1258              		.loc 1 2770 0 is_stmt 0 discriminator 1
 1259 0090 B045     		cmp	r8, r6
 1260 0092 E0D8     		bhi	.L121
 1261              	.L120:
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1262              		.loc 1 2771 0 is_stmt 1
 1263 0094 B8F10B0F 		cmp	r8, #11
 1264 0098 0ED0     		beq	.L128
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1265              		.loc 1 2771 0 is_stmt 0 discriminator 2
 1266 009a 2E2C     		cmp	r4, #46
 1267 009c D7D0     		beq	.L137
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1268              		.loc 1 2771 0
 1269 009e 0620     		movs	r0, #6
 1270              	.LVL163:
 1271              	.L122:
2802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
2803:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1272              		.loc 1 2803 0 is_stmt 1
 1273 00a0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1274              	.LVL164:
 1275              	.L136:
ARM GAS  /tmp/ccJz23SP.s 			page 73


2777:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 1276              		.loc 1 2777 0
 1277 00a4 803C     		subs	r4, r4, #128
 1278              	.LVL165:
 1279 00a6 084B     		ldr	r3, .L138+4
 1280 00a8 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
 1281              	.LVL166:
 1282 00aa D7E7     		b	.L124
 1283              	.LVL167:
 1284              	.L135:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1285              		.loc 1 2798 0 discriminator 1
 1286 00ac 0523     		movs	r3, #5
 1287 00ae 8AF82430 		strb	r3, [r10, #36]
 1288 00b2 C5E7     		b	.L126
 1289              	.L132:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1290              		.loc 1 2799 0
 1291 00b4 0023     		movs	r3, #0
 1292 00b6 C6E7     		b	.L127
 1293              	.LVL168:
 1294              	.L128:
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1295              		.loc 1 2771 0
 1296 00b8 0620     		movs	r0, #6
 1297 00ba F1E7     		b	.L122
 1298              	.L130:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1299              		.loc 1 2790 0
 1300 00bc 0620     		movs	r0, #6
 1301 00be EFE7     		b	.L122
 1302              	.LVL169:
 1303              	.L131:
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1304              		.loc 1 2796 0
 1305 00c0 0620     		movs	r0, #6
 1306 00c2 EDE7     		b	.L122
 1307              	.L139:
 1308              		.align	2
 1309              	.L138:
 1310 00c4 00000000 		.word	.LC0
 1311 00c8 00000000 		.word	.LANCHOR1
 1312              		.cfi_endproc
 1313              	.LFE361:
 1315              		.section	.text.get_ldnumber,"ax",%progbits
 1316              		.align	1
 1317              		.syntax unified
 1318              		.thumb
 1319              		.thumb_func
 1320              		.fpu fpv4-sp-d16
 1322              	get_ldnumber:
 1323              	.LFB363:
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 
2806:Middlewares/Third_Party/FatFs/src/ff.c **** 
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 
2808:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccJz23SP.s 			page 74


2809:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 
2812:Middlewares/Third_Party/FatFs/src/ff.c **** static
2813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2816:Middlewares/Third_Party/FatFs/src/ff.c **** )
2817:Middlewares/Third_Party/FatFs/src/ff.c **** {
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns;
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj = &dp->obj;
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 
2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2825:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
2826:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2828:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 	{										/* With heading separator */
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj->n_frag = 0;	/* Invalidate last fragment counter of the object */
2835:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2836:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT && obj->sclust) {	/* Retrieve the sub-directory status if needed */
2837:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_scl = fs->cdc_scl;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_size = fs->cdc_size;
2841:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_ofs = fs->cdc_ofs;
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_obj_dir(&dj, obj);
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2846:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2847:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2848:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
ARM GAS  /tmp/ccJz23SP.s 			page 75


2866:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2877:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2878:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_scl = obj->sclust;
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
2881:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_ofs = dp->blk_ofs;
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Open next directory */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
2886:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2894:Middlewares/Third_Party/FatFs/src/ff.c **** }
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 
2899:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2900:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2901:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 
2903:Middlewares/Third_Party/FatFs/src/ff.c **** static
2904:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** )
2907:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1324              		.loc 1 2907 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328              		@ link register save eliminated.
 1329              	.LVL170:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2911:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const volid[] = {_VOLUME_STRS};
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2916:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccJz23SP.s 			page 76


2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1330              		.loc 1 2919 0
 1331 0000 0168     		ldr	r1, [r0]
 1332 0002 09B1     		cbz	r1, .L154
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1333              		.loc 1 2920 0
 1334 0004 0A46     		mov	r2, r1
 1335 0006 03E0     		b	.L141
 1336              	.L154:
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1337              		.loc 1 2910 0
 1338 0008 4FF0FF33 		mov	r3, #-1
 1339 000c 08E0     		b	.L151
 1340              	.LVL171:
 1341              	.L144:
 1342              		.loc 1 2920 0 discriminator 4
 1343 000e 0132     		adds	r2, r2, #1
 1344              	.LVL172:
 1345              	.L141:
 1346              		.loc 1 2920 0 is_stmt 0 discriminator 1
 1347 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1348 0012 202B     		cmp	r3, #32
 1349 0014 01D9     		bls	.L143
 1350              		.loc 1 2920 0 discriminator 3
 1351 0016 3A2B     		cmp	r3, #58
 1352 0018 F9D1     		bne	.L144
 1353              	.L143:
2921:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1354              		.loc 1 2921 0 is_stmt 1
 1355 001a 3A2B     		cmp	r3, #58
 1356 001c 02D0     		beq	.L155
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0';
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2926:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
2928:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2930:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = volid[i]; tp = *path;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2937:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2940:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2944:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccJz23SP.s 			page 77


2946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2947:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2948:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 1357              		.loc 1 2951 0
 1358 001e 0023     		movs	r3, #0
 1359              	.LVL173:
 1360              	.L151:
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2954:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2955:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1361              		.loc 1 2955 0
 1362 0020 1846     		mov	r0, r3
 1363              	.LVL174:
 1364 0022 7047     		bx	lr
 1365              	.LVL175:
 1366              	.L155:
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1367              		.loc 1 2907 0
 1368 0024 10B4     		push	{r4}
 1369              	.LCFI17:
 1370              		.cfi_def_cfa_offset 4
 1371              		.cfi_offset 4, -4
 1372              	.LVL176:
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1373              		.loc 1 2923 0
 1374 0026 4C1C     		adds	r4, r1, #1
 1375              	.LVL177:
 1376 0028 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1377 002a 303B     		subs	r3, r3, #48
 1378              	.LVL178:
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1379              		.loc 1 2924 0
 1380 002c 092B     		cmp	r3, #9
 1381 002e 08D8     		bhi	.L147
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1382              		.loc 1 2924 0 is_stmt 0 discriminator 1
 1383 0030 A242     		cmp	r2, r4
 1384 0032 09D1     		bne	.L148
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 1385              		.loc 1 2925 0 is_stmt 1
 1386 0034 5BB9     		cbnz	r3, .L149
 1387              	.LVL179:
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1388              		.loc 1 2927 0
 1389 0036 0132     		adds	r2, r2, #1
 1390              	.LVL180:
 1391 0038 0260     		str	r2, [r0]
 1392              	.LVL181:
 1393              	.L140:
 1394              		.loc 1 2955 0
 1395 003a 1846     		mov	r0, r3
 1396              	.LVL182:
 1397 003c 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  /tmp/ccJz23SP.s 			page 78


 1398              	.LCFI18:
 1399              		.cfi_remember_state
 1400              		.cfi_restore 4
 1401              		.cfi_def_cfa_offset 0
 1402              	.LVL183:
 1403 0040 7047     		bx	lr
 1404              	.LVL184:
 1405              	.L147:
 1406              	.LCFI19:
 1407              		.cfi_restore_state
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1408              		.loc 1 2910 0
 1409 0042 4FF0FF33 		mov	r3, #-1
 1410              	.LVL185:
 1411 0046 F8E7     		b	.L140
 1412              	.LVL186:
 1413              	.L148:
 1414 0048 4FF0FF33 		mov	r3, #-1
 1415              	.LVL187:
 1416 004c F5E7     		b	.L140
 1417              	.LVL188:
 1418              	.L149:
 1419 004e 4FF0FF33 		mov	r3, #-1
 1420              	.LVL189:
 1421 0052 F2E7     		b	.L140
 1422              		.cfi_endproc
 1423              	.LFE363:
 1425              		.section	.text.putc_init,"ax",%progbits
 1426              		.align	1
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1430              		.fpu fpv4-sp-d16
 1432              	putc_init:
 1433              	.LFB387:
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2961:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2962:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2963:Middlewares/Third_Party/FatFs/src/ff.c **** 
2964:Middlewares/Third_Party/FatFs/src/ff.c **** static
2965:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2967:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
2968:Middlewares/Third_Party/FatFs/src/ff.c **** )
2969:Middlewares/Third_Party/FatFs/src/ff.c **** {
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
2972:Middlewares/Third_Party/FatFs/src/ff.c **** 
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
ARM GAS  /tmp/ccJz23SP.s 			page 79


2978:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2979:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
2981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 2;
2983:Middlewares/Third_Party/FatFs/src/ff.c **** }
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** 
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 
2988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2989:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2990:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 
2992:Middlewares/Third_Party/FatFs/src/ff.c **** static
2993:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
2997:Middlewares/Third_Party/FatFs/src/ff.c **** )
2998:Middlewares/Third_Party/FatFs/src/ff.c **** {
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
3019:Middlewares/Third_Party/FatFs/src/ff.c **** 
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
ARM GAS  /tmp/ccJz23SP.s 			page 80


3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3043:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3056:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {							/* Find an FAT volume */
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the file system object */
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 
3068:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1) {
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 		QWORD maxlba;
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3074:Middlewares/Third_Party/FatFs/src/ff.c **** 
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT revision (Mu
3076:Middlewares/Third_Party/FatFs/src/ff.c **** 
3077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_NO_FILESYSTEM;
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3091:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 81


3092:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3097:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;
3098:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3099:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3100:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3102:Middlewares/Third_Party/FatFs/src/ff.c **** 
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, clust2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3105:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine the FAT sub type */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
ARM GAS  /tmp/ccJz23SP.s 			page 82


3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3157:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3166:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get FSINFO if available */
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
3169:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3181:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3182:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3184:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3187:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* (_FS_NOFSINFO & 3) != 3 */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3197:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3198:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3199:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
3200:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3202:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0			/* Clear file lock semaphores */
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3205:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
ARM GAS  /tmp/ccJz23SP.s 			page 83


3206:Middlewares/Third_Party/FatFs/src/ff.c **** }
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 
3211:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3212:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
3213:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 
3215:Middlewares/Third_Party/FatFs/src/ff.c **** static
3216:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
3219:Middlewares/Third_Party/FatFs/src/ff.c **** )
3220:Middlewares/Third_Party/FatFs/src/ff.c **** {
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid
3225:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialize
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3230:Middlewares/Third_Party/FatFs/src/ff.c **** 				unlock_fs(obj->fs, FR_OK);
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_TIMEOUT;
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3235:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3239:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	*fs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
3242:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3243:Middlewares/Third_Party/FatFs/src/ff.c **** }
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 
3246:Middlewares/Third_Party/FatFs/src/ff.c **** 
3247:Middlewares/Third_Party/FatFs/src/ff.c **** 
3248:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------------------------------------
3249:Middlewares/Third_Party/FatFs/src/ff.c **** 
3250:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions (FatFs API)
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 
3252:Middlewares/Third_Party/FatFs/src/ff.c **** ----------------------------------------------------------------------------*/
3253:Middlewares/Third_Party/FatFs/src/ff.c **** 
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 
3255:Middlewares/Third_Party/FatFs/src/ff.c **** 
3256:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3257:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3258:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
ARM GAS  /tmp/ccJz23SP.s 			page 84


3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3264:Middlewares/Third_Party/FatFs/src/ff.c **** )
3265:Middlewares/Third_Party/FatFs/src/ff.c **** {
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
3267:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3269:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 
3272:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
3278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
3280:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3281:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3283:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
3289:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3291:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 
3297:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3299:Middlewares/Third_Party/FatFs/src/ff.c **** }
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 
3301:Middlewares/Third_Party/FatFs/src/ff.c **** 
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 
3304:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3305:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
3306:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 
3308:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
3309:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3312:Middlewares/Third_Party/FatFs/src/ff.c **** )
3313:Middlewares/Third_Party/FatFs/src/ff.c **** {
3314:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3317:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs;
ARM GAS  /tmp/ccJz23SP.s 			page 85


3320:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3322:Middlewares/Third_Party/FatFs/src/ff.c **** 
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3327:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_A
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3331:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3332:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3333:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3339:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3341:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3342:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3344:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
3345:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
3348:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3350:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3351:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
3352:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3354:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
3361:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
3365:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get current allocation info */
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.fs = fs;
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.n_frag = 0;
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Initialize directory entry block */
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, dw);	/* Set created time */
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_CrtTime10] = 0;
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, dw);	/* Set modified time */
ARM GAS  /tmp/ccJz23SP.s 			page 86


3377:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_ModTime10] = 0;
3378:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;				/* Reset attribute */
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, 0);		/* Reset file allocation info */
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_FileSize, 0);
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_ValidFileSize, 0);
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK && fp->obj.sclust) {		/* Remove the cluster chain if exist */
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3388:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
3389:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean directory info */
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cl) {							/* Remove the cluster chain if exist */
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3408:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Following succeeded */
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3418:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3419:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
3427:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
3430:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3431:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3432:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* R/O configuration */
3433:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
ARM GAS  /tmp/ccJz23SP.s 			page 87


3434:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3437:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3438:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3439:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3440:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3442:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3443:Middlewares/Third_Party/FatFs/src/ff.c **** 
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3445:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3448:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3450:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3454:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
3458:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3460:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3461:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
3468:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3469:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
3471:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
3478:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
3487:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
3489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  /tmp/ccJz23SP.s 			page 88


3491:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3493:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3497:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3498:Middlewares/Third_Party/FatFs/src/ff.c **** 
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3502:Middlewares/Third_Party/FatFs/src/ff.c **** }
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 
3507:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3508:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
3509:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 
3511:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,	/* Pointer to data buffer */
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,	/* Number of bytes to read */
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3516:Middlewares/Third_Party/FatFs/src/ff.c **** )
3517:Middlewares/Third_Party/FatFs/src/ff.c **** {
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc, csect;
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
3534:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
3541:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3545:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3546:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
ARM GAS  /tmp/ccJz23SP.s 			page 89


3548:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3561:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3563:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
3564:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3568:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3572:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3576:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3577:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3578:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
3579:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
3586:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3587:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3589:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
3592:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3595:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3596:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3597:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3598:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3601:Middlewares/Third_Party/FatFs/src/ff.c **** }
3602:Middlewares/Third_Party/FatFs/src/ff.c **** 
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 90


3605:Middlewares/Third_Party/FatFs/src/ff.c **** 
3606:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3607:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3608:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
3609:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 
3611:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** )
3617:Middlewares/Third_Party/FatFs/src/ff.c **** {
3618:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc, csect;
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 
3635:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* On the middle or end of the file */
3646:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3661:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
ARM GAS  /tmp/ccJz23SP.s 			page 91


3662:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3663:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3667:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3668:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
3673:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3678:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3679:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 0;
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3684:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3689:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3690:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3694:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->winsect = sect;
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3699:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3705:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
3710:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
3714:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
3717:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccJz23SP.s 			page 92


3719:Middlewares/Third_Party/FatFs/src/ff.c **** 
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
3721:Middlewares/Third_Party/FatFs/src/ff.c **** 
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3723:Middlewares/Third_Party/FatFs/src/ff.c **** }
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 
3728:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3729:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
3730:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 
3732:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3734:Middlewares/Third_Party/FatFs/src/ff.c **** )
3735:Middlewares/Third_Party/FatFs/src/ff.c **** {
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3737:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3740:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3741:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3742:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 
3745:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3747:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
3748:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3753:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3760:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 					INIT_NAMBUF(fs);
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_obj_dir(&dj, &fp->obj);	/* Load directory entry block */
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive bit */
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation info */
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3772:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
ARM GAS  /tmp/ccJz23SP.s 			page 93


3776:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = sync_fs(fs);
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					FREE_NAMBUF();
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3783:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, fp->dir_sect);
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
3793:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3798:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3800:Middlewares/Third_Party/FatFs/src/ff.c **** 
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3802:Middlewares/Third_Party/FatFs/src/ff.c **** }
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 
3804:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 
3806:Middlewares/Third_Party/FatFs/src/ff.c **** 
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 
3808:Middlewares/Third_Party/FatFs/src/ff.c **** 
3809:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3810:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3812:Middlewares/Third_Party/FatFs/src/ff.c **** 
3813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** )
3816:Middlewares/Third_Party/FatFs/src/ff.c **** {
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 
3820:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3823:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3827:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
3830:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.fs = 0;			/* Invalidate file object */
ARM GAS  /tmp/ccJz23SP.s 			page 94


3833:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
3836:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3839:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3840:Middlewares/Third_Party/FatFs/src/ff.c **** }
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 
3845:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
3846:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3847:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
3848:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 
3850:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3851:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
3853:Middlewares/Third_Party/FatFs/src/ff.c **** )
3854:Middlewares/Third_Party/FatFs/src/ff.c **** {
3855:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
3860:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3861:Middlewares/Third_Party/FatFs/src/ff.c **** 
3862:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 
3864:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3865:Middlewares/Third_Party/FatFs/src/ff.c **** }
3866:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3867:Middlewares/Third_Party/FatFs/src/ff.c **** 
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 
3869:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3871:Middlewares/Third_Party/FatFs/src/ff.c **** )
3872:Middlewares/Third_Party/FatFs/src/ff.c **** {
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3882:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
3887:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
ARM GAS  /tmp/ccJz23SP.s 			page 95


3890:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_size = dj.obj.c_size;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
3892:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3893:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
3896:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
3899:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
3900:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3903:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
3906:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3907:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3908:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3909:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3910:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3912:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3913:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3914:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 
3916:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3917:Middlewares/Third_Party/FatFs/src/ff.c **** }
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 
3920:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3921:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3923:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3924:Middlewares/Third_Party/FatFs/src/ff.c **** )
3925:Middlewares/Third_Party/FatFs/src/ff.c **** {
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 
3936:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
3944:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3946:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
ARM GAS  /tmp/ccJz23SP.s 			page 96


3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dj.sect);
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 0);
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {							/* Find the entry links to the child directory */
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_read(&dj, 0);
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_next(&dj, 0);
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (res == FR_OK);
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3961:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
3964:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3970:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3972:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3974:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3975:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3976:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3977:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3978:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3979:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3980:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3981:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3982:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3985:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3986:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3987:Middlewares/Third_Party/FatFs/src/ff.c **** 
3988:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3989:Middlewares/Third_Party/FatFs/src/ff.c **** }
3990:Middlewares/Third_Party/FatFs/src/ff.c **** 
3991:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3993:Middlewares/Third_Party/FatFs/src/ff.c **** 
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 
3996:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3997:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3998:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3999:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 
4001:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
4002:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
ARM GAS  /tmp/ccJz23SP.s 			page 97


4004:Middlewares/Third_Party/FatFs/src/ff.c **** )
4005:Middlewares/Third_Party/FatFs/src/ff.c **** {
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4008:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect;
4009:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ifptr;
4010:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
4016:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4020:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 
4023:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4048:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4049:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
4054:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4059:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4060:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
ARM GAS  /tmp/ccJz23SP.s 			page 98


4061:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4065:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4066:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fs->drv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current sec
4067:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4068:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sect = dsc;
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
4073:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4077:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4GiB-1 if at FATx
4079:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->obj.objsize && (_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, cl
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4083:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
4090:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
4094:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
4096:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4101:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
4107:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->obj.objsize = fp->fptr;
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag |= FA_MODIFIED;
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
ARM GAS  /tmp/ccJz23SP.s 			page 99


4118:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
4128:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4133:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4134:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_READONLY && fp->fptr > fp->obj.objsize) {		/* Set file change flag if the file size is e
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
4136:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4138:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
4139:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4140:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4146:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
4147:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4148:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = nsect;
4149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4151:Middlewares/Third_Party/FatFs/src/ff.c **** 
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4153:Middlewares/Third_Party/FatFs/src/ff.c **** }
4154:Middlewares/Third_Party/FatFs/src/ff.c **** 
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 
4156:Middlewares/Third_Party/FatFs/src/ff.c **** 
4157:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
4158:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4159:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
4160:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 
4162:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4165:Middlewares/Third_Party/FatFs/src/ff.c **** )
4166:Middlewares/Third_Party/FatFs/src/ff.c **** {
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj;
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
4174:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 100


4175:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4176:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj = &dp->obj;
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
4183:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
4185:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_scl = obj->sclust;							/* Get containing directory inforamation */
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_ofs = dp->blk_ofs;
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4194:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* This object is a file */
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4203:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
4205:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = 0;	/* Root directory need not to be locked */
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4214:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4219:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
4221:Middlewares/Third_Party/FatFs/src/ff.c **** 
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4223:Middlewares/Third_Party/FatFs/src/ff.c **** }
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 
4228:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4229:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 101


4232:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4234:Middlewares/Third_Party/FatFs/src/ff.c **** )
4235:Middlewares/Third_Party/FatFs/src/ff.c **** {
4236:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4242:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
4247:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.fs = 0;			/* Invalidate directory object */
4250:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
4252:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4253:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4254:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4256:Middlewares/Third_Party/FatFs/src/ff.c **** }
4257:Middlewares/Third_Party/FatFs/src/ff.c **** 
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 
4261:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4262:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
4263:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 
4265:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** )
4269:Middlewares/Third_Party/FatFs/src/ff.c **** {
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_NAMBUF(fs);
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
4287:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_NAMBUF();
ARM GAS  /tmp/ccJz23SP.s 			page 102


4289:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4292:Middlewares/Third_Party/FatFs/src/ff.c **** }
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 
4296:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
4297:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4298:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find Next File                                                        */
4299:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 
4301:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4304:Middlewares/Third_Party/FatFs/src/ff.c **** )
4305:Middlewares/Third_Party/FatFs/src/ff.c **** {
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4315:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4318:Middlewares/Third_Party/FatFs/src/ff.c **** }
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 
4322:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4323:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find First File                                                       */
4324:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 
4326:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4331:Middlewares/Third_Party/FatFs/src/ff.c **** )
4332:Middlewares/Third_Party/FatFs/src/ff.c **** {
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4338:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4339:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4342:Middlewares/Third_Party/FatFs/src/ff.c **** }
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 
4344:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
4345:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 103


4346:Middlewares/Third_Party/FatFs/src/ff.c **** 
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 
4348:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
4349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4350:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
4351:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 
4353:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4356:Middlewares/Third_Party/FatFs/src/ff.c **** )
4357:Middlewares/Third_Party/FatFs/src/ff.c **** {
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
4373:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4374:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4375:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4377:Middlewares/Third_Party/FatFs/src/ff.c **** 
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4379:Middlewares/Third_Party/FatFs/src/ff.c **** }
4380:Middlewares/Third_Party/FatFs/src/ff.c **** 
4381:Middlewares/Third_Party/FatFs/src/ff.c **** 
4382:Middlewares/Third_Party/FatFs/src/ff.c **** 
4383:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4384:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4385:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
4386:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4387:Middlewares/Third_Party/FatFs/src/ff.c **** 
4388:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
4389:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
4392:Middlewares/Third_Party/FatFs/src/ff.c **** )
4393:Middlewares/Third_Party/FatFs/src/ff.c **** {
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nfree, clst, sect, stat;
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
ARM GAS  /tmp/ccJz23SP.s 			page 104


4403:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 			nfree = 0;
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(&obj, clst);
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4421:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan bitmap table */
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 					BYTE bm;
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 					UINT b;
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent - 2;
4427:Middlewares/Third_Party/FatFs/src/ff.c **** 					sect = fs->database;
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0;
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0 && (res = move_window(fs, sect++)) != FR_OK) break;
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!(bm & 1)) nfree++;
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							bm >>= 1;
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = (i + 1) % SS(fs);
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (clst);
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4438:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 				{	/* FAT16/32: Sector alighed FAT entries */
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent; sect = fs->fatbase;
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0) {
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_FAT16) {
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
4452:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 							if ((ld_dword(p) & 0x0FFFFFFF) == 0) nfree++;
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
4455:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (--clst);
4457:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
ARM GAS  /tmp/ccJz23SP.s 			page 105


4460:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
4461:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
4462:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4466:Middlewares/Third_Party/FatFs/src/ff.c **** }
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 
4470:Middlewares/Third_Party/FatFs/src/ff.c **** 
4471:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4472:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
4473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 
4475:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4477:Middlewares/Third_Party/FatFs/src/ff.c **** )
4478:Middlewares/Third_Party/FatFs/src/ff.c **** {
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
4492:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current R/W point */
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
4503:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4510:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4511:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4512:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
4513:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4516:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccJz23SP.s 			page 106


4517:Middlewares/Third_Party/FatFs/src/ff.c **** 
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 
4521:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4522:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File/Directory                                               */
4523:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4524:Middlewares/Third_Party/FatFs/src/ff.c **** 
4525:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4527:Middlewares/Third_Party/FatFs/src/ff.c **** )
4528:Middlewares/Third_Party/FatFs/src/ff.c **** {
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4533:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4535:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4536:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4537:Middlewares/Third_Party/FatFs/src/ff.c **** 
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 
4539:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4543:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4547:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4548:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4549:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4550:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_RDO) {
4556:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4559:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4561:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj.fs = fs;
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.sclust = dclst = ld_dword(fs->dirbuf + XDIR_FstClus);
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4565:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4569:Middlewares/Third_Party/FatFs/src/ff.c **** 					dclst = ld_clust(fs, dj.dir);
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
4572:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == fs->cdir) {		 		/* Is it the current directory? */
ARM GAS  /tmp/ccJz23SP.s 			page 107


4574:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4576:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.fs = fs;						/* Open the sub-directory */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
4580:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.objsize = obj.objsize;
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.stat = obj.stat;
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 0);
4587:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
4591:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
4598:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4599:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4600:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
4602:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
4605:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4606:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4607:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4609:Middlewares/Third_Party/FatFs/src/ff.c **** 
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4611:Middlewares/Third_Party/FatFs/src/ff.c **** }
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 
4616:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4617:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
4618:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 
4620:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4622:Middlewares/Third_Party/FatFs/src/ff.c **** )
4623:Middlewares/Third_Party/FatFs/src/ff.c **** {
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
ARM GAS  /tmp/ccJz23SP.s 			page 108


4631:Middlewares/Third_Party/FatFs/src/ff.c **** 
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4678:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4679:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag (contiguous) */
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
ARM GAS  /tmp/ccJz23SP.s 			page 109


4688:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4689:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = dj.dir;
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4703:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4706:Middlewares/Third_Party/FatFs/src/ff.c **** 
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4708:Middlewares/Third_Party/FatFs/src/ff.c **** }
4709:Middlewares/Third_Party/FatFs/src/ff.c **** 
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 
4713:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename a File/Directory                                               */
4715:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 
4717:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4720:Middlewares/Third_Party/FatFs/src/ff.c **** )
4721:Middlewares/Third_Party/FatFs/src/ff.c **** {
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
4726:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 	get_ldnumber(&path_new);						/* Snip drive number of new name off */
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
4737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4741:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
4743:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT */
ARM GAS  /tmp/ccJz23SP.s 			page 110


4745:Middlewares/Third_Party/FatFs/src/ff.c **** 				BYTE nf, nn;
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 				WORD nh;
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4749:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
4750:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4751:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4752:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4753:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4754:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4755:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4756:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4757:Middlewares/Third_Party/FatFs/src/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4762:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4763:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&djn);
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4767:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 			{	/* At FAT12/FAT16/FAT32 */
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about the object except name */
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4776:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
4786:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
4787:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(fs, dw);
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
4793:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
4794:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
4795:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4797:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4798:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4800:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
ARM GAS  /tmp/ccJz23SP.s 			page 111


4802:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4803:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4804:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4805:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of the critical section */
4806:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4807:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4808:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4809:Middlewares/Third_Party/FatFs/src/ff.c **** 
4810:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4811:Middlewares/Third_Party/FatFs/src/ff.c **** }
4812:Middlewares/Third_Party/FatFs/src/ff.c **** 
4813:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4814:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
4815:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
4816:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
4817:Middlewares/Third_Party/FatFs/src/ff.c **** 
4818:Middlewares/Third_Party/FatFs/src/ff.c **** 
4819:Middlewares/Third_Party/FatFs/src/ff.c **** 
4820:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_CHMOD && !_FS_READONLY
4821:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4822:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
4823:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4824:Middlewares/Third_Party/FatFs/src/ff.c **** 
4825:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
4826:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4827:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
4828:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
4829:Middlewares/Third_Party/FatFs/src/ff.c **** )
4830:Middlewares/Third_Party/FatFs/src/ff.c **** {
4831:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4832:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4833:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4834:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4835:Middlewares/Third_Party/FatFs/src/ff.c **** 
4836:Middlewares/Third_Party/FatFs/src/ff.c **** 
4837:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4838:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4839:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4840:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4841:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4842:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4844:Middlewares/Third_Party/FatFs/src/ff.c **** 			mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
4845:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4846:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4847:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->dirbuf[XDIR_Attr] = (attr & mask) | (fs->dirbuf[XDIR_Attr] & (BYTE)~mask);	/* Apply attribu
4848:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4849:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4850:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4851:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4852:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[DIR_Attr] = (attr & mask) | (dj.dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change 
4853:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4854:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4855:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4856:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4857:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4858:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/ccJz23SP.s 			page 112


4859:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4860:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4861:Middlewares/Third_Party/FatFs/src/ff.c **** 
4862:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4863:Middlewares/Third_Party/FatFs/src/ff.c **** }
4864:Middlewares/Third_Party/FatFs/src/ff.c **** 
4865:Middlewares/Third_Party/FatFs/src/ff.c **** 
4866:Middlewares/Third_Party/FatFs/src/ff.c **** 
4867:Middlewares/Third_Party/FatFs/src/ff.c **** 
4868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4869:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
4870:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4871:Middlewares/Third_Party/FatFs/src/ff.c **** 
4872:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
4873:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
4874:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
4875:Middlewares/Third_Party/FatFs/src/ff.c **** )
4876:Middlewares/Third_Party/FatFs/src/ff.c **** {
4877:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4878:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4879:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4880:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4881:Middlewares/Third_Party/FatFs/src/ff.c **** 
4882:Middlewares/Third_Party/FatFs/src/ff.c **** 
4883:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4884:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4885:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4886:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4887:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4888:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4889:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4890:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4891:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4892:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(fs->dirbuf + XDIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4893:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4894:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4895:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4896:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4897:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(dj.dir + DIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4898:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4900:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4901:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4902:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4903:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4904:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4906:Middlewares/Third_Party/FatFs/src/ff.c **** 
4907:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4908:Middlewares/Third_Party/FatFs/src/ff.c **** }
4909:Middlewares/Third_Party/FatFs/src/ff.c **** 
4910:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_CHMOD && !_FS_READONLY */
4911:Middlewares/Third_Party/FatFs/src/ff.c **** 
4912:Middlewares/Third_Party/FatFs/src/ff.c **** 
4913:Middlewares/Third_Party/FatFs/src/ff.c **** 
4914:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
4915:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccJz23SP.s 			page 113


4916:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Volume Label                                                      */
4917:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4918:Middlewares/Third_Party/FatFs/src/ff.c **** 
4919:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
4920:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4921:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
4922:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
4923:Middlewares/Third_Party/FatFs/src/ff.c **** )
4924:Middlewares/Third_Party/FatFs/src/ff.c **** {
4925:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4927:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4928:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT si, di;
4929:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE || _FS_EXFAT
4930:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
4931:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4932:Middlewares/Third_Party/FatFs/src/ff.c **** 
4933:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4934:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4935:Middlewares/Third_Party/FatFs/src/ff.c **** 
4936:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
4937:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
4938:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
4939:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
4940:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4941:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
4942:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	if (res == FR_OK) {
4943:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4944:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4945:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (si = di = 0; si < dj.dir[XDIR_NumLabel]; si++) {	/* Extract volume label from 83 entry */
4946:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ld_word(dj.dir + XDIR_Label + si * 2);
4947:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4948:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = w;
4949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4950:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ff_convert(w, 0);	/* Unicode -> OEM */
4951:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (w == 0) w = '?';	/* Replace wrong character */
4952:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_DF1S && w >= 0x100) label[di++] = (char)(w >> 8);
4953:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = (char)w;
4954:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4955:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4956:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[di] = 0;
4957:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4958:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4959:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4960:Middlewares/Third_Party/FatFs/src/ff.c **** 					si = di = 0;		/* Extract volume label from AM_VOL entry with code comversion */
4961:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4962:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4963:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = (si < 11) ? dj.dir[si++] : ' ';
4964:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsDBCS1(w) && si < 11 && IsDBCS2(dj.dir[si])) {
4965:Middlewares/Third_Party/FatFs/src/ff.c **** 							w = w << 8 | dj.dir[si++];
4966:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4967:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = ff_convert(w, 1);	/* OEM -> Unicode */
4968:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4969:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = dj.dir[si++];
4970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4971:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (di < 11);
4972:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {				/* Truncate trailing spaces */
ARM GAS  /tmp/ccJz23SP.s 			page 114


4973:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di] = 0;
4974:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (di == 0) break;
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (label[--di] == ' ');
4976:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4977:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4978:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4979:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {	/* No label entry and return nul string */
4980:Middlewares/Third_Party/FatFs/src/ff.c **** 			label[0] = 0;
4981:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4982:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4983:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4984:Middlewares/Third_Party/FatFs/src/ff.c **** 
4985:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
4986:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
4987:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
4988:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4989:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (fs->fs_type) {
4990:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_EXFAT:
4991:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BPB_VolIDEx; break;
4992:Middlewares/Third_Party/FatFs/src/ff.c **** 
4993:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_FAT32:
4994:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID32; break;
4995:Middlewares/Third_Party/FatFs/src/ff.c **** 
4996:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
4997:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID;
4998:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4999:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = ld_dword(fs->win + di);
5000:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5001:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5002:Middlewares/Third_Party/FatFs/src/ff.c **** 
5003:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5004:Middlewares/Third_Party/FatFs/src/ff.c **** }
5005:Middlewares/Third_Party/FatFs/src/ff.c **** 
5006:Middlewares/Third_Party/FatFs/src/ff.c **** 
5007:Middlewares/Third_Party/FatFs/src/ff.c **** 
5008:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5009:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5010:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set Volume Label                                                      */
5011:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5012:Middlewares/Third_Party/FatFs/src/ff.c **** 
5013:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
5014:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
5015:Middlewares/Third_Party/FatFs/src/ff.c **** )
5016:Middlewares/Third_Party/FatFs/src/ff.c **** {
5017:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5018:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
5019:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5020:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE dirvn[22];
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, slen;
5022:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
5023:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char badchr[] = "\"*+,.:;<=>\?[]|\x7F";
5024:Middlewares/Third_Party/FatFs/src/ff.c **** 
5025:Middlewares/Third_Party/FatFs/src/ff.c **** 
5026:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
5027:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&label, &fs, FA_WRITE);
5028:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
5029:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
ARM GAS  /tmp/ccJz23SP.s 			page 115


5030:Middlewares/Third_Party/FatFs/src/ff.c **** 
5031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get length of given volume label */
5032:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (slen = 0; (UINT)label[slen] >= ' '; slen++) ;	/* Get name length */
5033:Middlewares/Third_Party/FatFs/src/ff.c **** 
5034:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5035:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
5036:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = j = 0; i < slen; ) {	/* Create volume label in directory form */
5037:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = label[i++];
5038:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
5039:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w)) {
5040:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5041:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5042:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 1);
5043:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w == 0 || chk_chr(badchr, w) || j == 22) {	/* Check validity check validity of the volume la
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(fs, FR_INVALID_NAME);
5046:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5047:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirvn + j, w); j += 2;
5048:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5049:Middlewares/Third_Party/FatFs/src/ff.c **** 		slen = j;
5050:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5051:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
5053:Middlewares/Third_Party/FatFs/src/ff.c **** 		for ( ; slen && label[slen - 1] == ' '; slen--) ;	/* Remove trailing spaces */
5054:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
5055:Middlewares/Third_Party/FatFs/src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
5056:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
5057:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5058:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(label[i++]), 0);
5059:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5060:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (BYTE)label[i++];
5061:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
5062:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (j < 10 && i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5063:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5064:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
5065:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
5066:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
5068:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
5069:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
5070:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5071:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
5072:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5073:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5074:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5075:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0 || chk_chr(badchr, w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) {	/* Reject invalid ch
5076:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
5077:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5078:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x100) dirvn[j++] = (BYTE)(w >> 8);
5079:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
5080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (i < slen);
5081:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
5083:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5084:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5085:Middlewares/Third_Party/FatFs/src/ff.c **** 
5086:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
ARM GAS  /tmp/ccJz23SP.s 			page 116


5087:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.sclust = 0;		/* Open root directory */
5088:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
5089:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5090:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
5091:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
5092:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5093:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);	/* Change the volume label */
5094:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5095:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5096:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {
5097:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
5098:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5099:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Name] = DDEM;	/* Remove the volume label */
5100:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5101:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5102:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
5103:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(fs);
5104:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* No volume label entry is found or error */
5105:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
5106:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
5107:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {	/* Create a volume label entry */
5108:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
5109:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
5110:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
5111:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5112:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_Type] = 0x83;		/* Create 83 entry */
5113:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);
5114:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5115:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
5116:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[DIR_Attr] = AM_VOL;		/* Create volume label entry */
5117:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
5118:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
5119:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
5120:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(fs);
5121:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5122:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5123:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5124:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5125:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5126:Middlewares/Third_Party/FatFs/src/ff.c **** 
5127:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5128:Middlewares/Third_Party/FatFs/src/ff.c **** }
5129:Middlewares/Third_Party/FatFs/src/ff.c **** 
5130:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
5131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
5132:Middlewares/Third_Party/FatFs/src/ff.c **** 
5133:Middlewares/Third_Party/FatFs/src/ff.c **** 
5134:Middlewares/Third_Party/FatFs/src/ff.c **** 
5135:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_EXPAND && !_FS_READONLY
5136:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5137:Middlewares/Third_Party/FatFs/src/ff.c **** /* Allocate a Contiguous Blocks to the File                              */
5138:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5139:Middlewares/Third_Party/FatFs/src/ff.c **** 
5140:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_expand (
5141:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
5142:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t fsz,	/* File size to be expanded to */
5143:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt		/* Operation mode 0:Find and prepare or 1:Find and allocate */
ARM GAS  /tmp/ccJz23SP.s 			page 117


5144:Middlewares/Third_Party/FatFs/src/ff.c **** )
5145:Middlewares/Third_Party/FatFs/src/ff.c **** {
5146:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, stcl, scl, ncl, tcl, lclst;
5149:Middlewares/Third_Party/FatFs/src/ff.c **** 
5150:Middlewares/Third_Party/FatFs/src/ff.c **** 
5151:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5152:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5153:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fsz == 0 || fp->obj.objsize != 0 || !(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);
5154:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5155:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type != FS_EXFAT && fsz >= 0x100000000) LEAVE_FF(fs, FR_DENIED);	/* Check if in size li
5156:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5157:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (DWORD)fs->csize * SS(fs);	/* Cluster size */
5158:Middlewares/Third_Party/FatFs/src/ff.c **** 	tcl = (DWORD)(fsz / n) + ((fsz & (n - 1)) ? 1 : 0);	/* Number of clusters required */
5159:Middlewares/Third_Party/FatFs/src/ff.c **** 	stcl = fs->last_clst; lclst = 0;
5160:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stcl < 2 || stcl >= fs->n_fatent) stcl = 2;
5161:Middlewares/Third_Party/FatFs/src/ff.c **** 
5162:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
5164:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = find_bitmap(fs, stcl, tcl);			/* Find a contiguous cluster block */
5165:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0) res = FR_DENIED;				/* No contiguous cluster block was found */
5166:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0xFFFFFFFF) res = FR_DISK_ERR;
5167:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5168:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5169:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, tcl, 1);	/* Mark the cluster block 'in use' */
5170:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl + tcl - 1;
5171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5172:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5173:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5174:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5175:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5176:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5177:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
5178:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst = stcl; ncl = 0;
5179:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {	/* Find a contiguous cluster block */
5180:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = get_fat(&fp->obj, clst);
5181:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (++clst >= fs->n_fatent) clst = 2;
5182:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 1) { res = FR_INT_ERR; break; }
5183:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
5184:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0) {	/* Is it a free cluster? */
5185:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++ncl == tcl) break;	/* Break if a contiguous cluster block is found */
5186:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5187:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = clst; ncl = 0;		/* Not a free cluster */
5188:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5189:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == stcl) { res = FR_DENIED; break; }	/* No contiguous cluster? */
5190:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5191:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5192:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5193:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (clst = scl, n = tcl; n; clst++, n--) {	/* Create a cluster chain on the FAT */
5194:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fs, clst, (n == 1) ? 0xFFFFFFFF : clst + 1);
5195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
5196:Middlewares/Third_Party/FatFs/src/ff.c **** 					lclst = clst;
5197:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5198:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5199:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5200:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/ccJz23SP.s 			page 118


5201:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5202:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5203:Middlewares/Third_Party/FatFs/src/ff.c **** 
5204:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5205:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = lclst;		/* Set suggested start cluster to start next */
5206:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt) {	/* Is it allocated now? */
5207:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = scl;		/* Update object allocation information */
5208:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fsz;
5209:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT) fp->obj.stat = 2;	/* Set status 'contiguous chain' */
5210:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
5211:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clst <= fs->n_fatent - 2) {	/* Update FSINFO */
5212:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst -= tcl;
5213:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
5214:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5215:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5216:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5217:Middlewares/Third_Party/FatFs/src/ff.c **** 
5218:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5219:Middlewares/Third_Party/FatFs/src/ff.c **** }
5220:Middlewares/Third_Party/FatFs/src/ff.c **** 
5221:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_EXPAND && !_FS_READONLY */
5222:Middlewares/Third_Party/FatFs/src/ff.c **** 
5223:Middlewares/Third_Party/FatFs/src/ff.c **** 
5224:Middlewares/Third_Party/FatFs/src/ff.c **** 
5225:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD
5226:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5227:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly                                   */
5228:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5229:Middlewares/Third_Party/FatFs/src/ff.c **** 
5230:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
5231:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
5232:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
5233:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
5234:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
5235:Middlewares/Third_Party/FatFs/src/ff.c **** )
5236:Middlewares/Third_Party/FatFs/src/ff.c **** {
5237:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5238:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5239:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
5240:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
5241:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, csect;
5242:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dbuf;
5243:Middlewares/Third_Party/FatFs/src/ff.c **** 
5244:Middlewares/Third_Party/FatFs/src/ff.c **** 
5245:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
5246:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5247:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5248:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
5249:Middlewares/Third_Party/FatFs/src/ff.c **** 
5250:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
5251:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
5252:Middlewares/Third_Party/FatFs/src/ff.c **** 
5253:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream goes busy */
5254:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
5255:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
5256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {				/* On the sector boundary? */
5257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {						/* On the cluster boundary? */
ARM GAS  /tmp/ccJz23SP.s 			page 119


5258:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
5259:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust : get_fat(&fp->obj, fp->clust);
5260:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fs, FR_INT_ERR);
5261:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
5262:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
5263:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5264:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5265:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fs, fp->clust);			/* Get current data sector */
5266:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fs, FR_INT_ERR);
5267:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
5268:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
5269:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window to the file dat
5270:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fs->win;
5271:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5272:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->sect != sect) {		/* Fill sector cache with file data */
5273:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5274:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
5275:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5276:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
5277:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5278:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5279:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5280:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5281:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fp->buf;
5282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5283:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->sect = sect;
5284:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
5285:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;					/* Clip it by btr if needed */
5286:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(dbuf + ((UINT)fp->fptr % SS(fs)), rcnt);	/* Forward the file data */
5287:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fs, FR_INT_ERR);
5288:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5289:Middlewares/Third_Party/FatFs/src/ff.c **** 
5290:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
5291:Middlewares/Third_Party/FatFs/src/ff.c **** }
5292:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
5293:Middlewares/Third_Party/FatFs/src/ff.c **** 
5294:Middlewares/Third_Party/FatFs/src/ff.c **** 
5295:Middlewares/Third_Party/FatFs/src/ff.c **** 
5296:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
5297:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5298:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create an FAT/exFAT volume                                            */
5299:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5300:Middlewares/Third_Party/FatFs/src/ff.c **** 
5301:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
5302:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
5303:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt,			/* Format option */
5304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD au,			/* Size of allocation unit (cluster) [byte] */
5305:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work,			/* Pointer to working buffer */
5306:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len			/* Size of working buffer */
5307:Middlewares/Third_Party/FatFs/src/ff.c **** )
5308:Middlewares/Third_Party/FatFs/src/ff.c **** {
5309:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
5310:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
5311:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
5312:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
5313:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
5314:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ss;
ARM GAS  /tmp/ccJz23SP.s 			page 120


5315:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5321:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM || _FS_EXFAT
5322:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tbl[3];
5323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 
5326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
5327:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);					/* Get target logical drive */
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
5330:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
5331:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
5332:Middlewares/Third_Party/FatFs/src/ff.c **** 
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check physical drive status */
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5337:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
5338:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &ss) != RES_OK) return FR_DISK_ERR;
5340:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ss > _MAX_SS || ss < _MIN_SS || (ss & (ss - 1))) return FR_DISK_ERR;
5341:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5342:Middlewares/Third_Party/FatFs/src/ff.c **** 	ss = _MAX_SS;
5343:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Che
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
5346:Middlewares/Third_Party/FatFs/src/ff.c **** 
5347:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get working buffer */
5348:Middlewares/Third_Party/FatFs/src/ff.c **** 	buf = (BYTE*)work;		/* Working buffer */
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
5352:Middlewares/Third_Party/FatFs/src/ff.c **** 
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine where the volume to be located (b_vol, sz_vol) */
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Load MBR */
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(buf + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;	/* Check if MBR is valid */
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 		pte = buf + (MBR_Table + (part - 1) * SZ_PTE);
5359:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!pte[PTE_System]) return FR_MKFS_ABORTED;	/* No partition? */
5360:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = ld_dword(pte + PTE_StLba);		/* Get volume start sector */
5361:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol = ld_dword(pte + PTE_SizLba);	/* Get volume size */
5362:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5363:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a single-partition in this function */
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 
5371:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-determine the FAT type */
ARM GAS  /tmp/ccJz23SP.s 			page 121


5372:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
5375:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_EXFAT; break;
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5377:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
5382:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5383:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
5385:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
5386:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
5387:Middlewares/Third_Party/FatFs/src/ff.c **** 
5388:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5389:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_EXFAT) {	/* Create an exFAT volume */
5390:Middlewares/Third_Party/FatFs/src/ff.c **** 		DWORD szb_bit, szb_case, sum, nb, cl;
5391:Middlewares/Third_Party/FatFs/src/ff.c **** 		WCHAR ch, si;
5392:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT j, st;
5393:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE b;
5394:Middlewares/Third_Party/FatFs/src/ff.c **** 
5395:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x1000) return FR_MKFS_ABORTED;	/* Too small volume? */
5396:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5397:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area may be erased *
5398:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5399:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5400:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine FAT location, data location and number of clusters */
5401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!au) {	/* au auto-selection */
5402:Middlewares/Third_Party/FatFs/src/ff.c **** 			au = 8;
5403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x80000) au = 64;		/* >= 512Ks */
5404:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x4000000) au = 256;	/* >= 64Ms */
5405:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5406:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat = b_vol + 32;										/* FAT start at offset 32 */
5407:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_fat = ((sz_vol / au + 2) * 4 + ss - 1) / ss;			/* Number of FAT sectors */
5408:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_data = (b_fat + sz_fat + sz_blk - 1) & ~(sz_blk - 1);	/* Align data area to the erase block bou
5409:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (b_data >= sz_vol / 2) return FR_MKFS_ABORTED;		/* Too small volume? */
5410:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_clst = (sz_vol - (b_data - b_vol)) / au;				/* Number of clusters */
5411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst <16) return FR_MKFS_ABORTED;					/* Too few clusters? */
5412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst > MAX_EXFAT) return FR_MKFS_ABORTED;			/* Too many clusters? */
5413:Middlewares/Third_Party/FatFs/src/ff.c **** 
5414:Middlewares/Third_Party/FatFs/src/ff.c **** 		szb_bit = (n_clst + 7) / 8;						/* Size of allocation bitmap */
5415:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = (szb_bit + au * ss - 1) / (au * ss);	/* Number of allocation bitmap clusters */
5416:Middlewares/Third_Party/FatFs/src/ff.c **** 
5417:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a compressed up-case table */
5418:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * tbl[0];	/* Table start sector */
5419:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = 0;						/* Table checksum to be stored in the 82 entry */
5420:Middlewares/Third_Party/FatFs/src/ff.c **** 		st = si = i = j = szb_case = 0;
5421:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5422:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (st) {
5423:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 0:
5424:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = ff_wtoupper(si);	/* Get an up-case char */
5425:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ch != si) {
5426:Middlewares/Third_Party/FatFs/src/ff.c **** 					si++; break;		/* Store the up-case char if exist */
5427:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5428:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (j = 1; (WCHAR)(si + j) && (WCHAR)(si + j) == ff_wtoupper((WCHAR)(si + j)); j++) ;	/* Get r
ARM GAS  /tmp/ccJz23SP.s 			page 122


5429:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (j >= 128) {
5430:Middlewares/Third_Party/FatFs/src/ff.c **** 					ch = 0xFFFF; st = 2; break;	/* Compress the no-case block if run is >= 128 */
5431:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5432:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 1;			/* Do not compress short run */
5433:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* go to next case */
5434:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 1:
5435:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = si++;		/* Fill the short run */
5436:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--j == 0) st = 0;
5437:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
5438:Middlewares/Third_Party/FatFs/src/ff.c **** 
5439:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
5440:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = (WCHAR)j; si += j;	/* Number of chars to skip */
5441:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 0;
5442:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5443:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 0] = (BYTE)ch, sum);		/* Put it into the write buffer */
5444:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 1] = (BYTE)(ch >> 8), sum);
5445:Middlewares/Third_Party/FatFs/src/ff.c **** 			i += 2; szb_case += 2;
5446:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!si || i == szb_buf) {		/* Write buffered data when buffer full or end of process */
5447:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (i + ss - 1) / ss;
5448:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5449:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; i = 0;
5450:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5451:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (si);
5452:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[1] = (szb_case + au * ss - 1) / (au * ss);	/* Number of up-case table clusters */
5453:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[2] = 1;										/* Number of root dir clusters */
5454:Middlewares/Third_Party/FatFs/src/ff.c **** 
5455:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the allocation bitmap */
5456:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data; nsect = (szb_bit + ss - 1) / ss;	/* Start of bitmap and number of sectors */
5457:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb = tbl[0] + tbl[1] + tbl[2];					/* Number of clusters in-use by system */
5458:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5459:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf);
5460:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; nb >= 8 && i < szb_buf; buf[i++] = 0xFF, nb -= 8) ;
5461:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (b = 1; nb && i < szb_buf; buf[i] |= b, b <<= 1, nb--) ;
5462:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;		/* Write the buffered data */
5463:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5464:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5465:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5466:Middlewares/Third_Party/FatFs/src/ff.c **** 
5467:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the FAT */
5468:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat; nsect = sz_fat;	/* Start of FAT and number of FAT sectors */
5469:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = nb = cl = 0;
5470:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5471:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf); i = 0;	/* Clear work area and reset write index */
5472:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl == 0) {	/* Set entry 0 and 1 */
5473:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFF8); i += 4; cl++;
5474:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFFF); i += 4; cl++;
5475:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5476:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {			/* Create chains of bitmap, up-case and root dir */
5477:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (nb && i < szb_buf) {			/* Create a chain */
5478:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(buf + i, (nb > 1) ? cl + 1 : 0xFFFFFFFF);
5479:Middlewares/Third_Party/FatFs/src/ff.c **** 					i += 4; cl++; nb--;
5480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5481:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!nb && j < 3) nb = tbl[j++];	/* Next chain */
5482:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nb && i < szb_buf);
5483:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;	/* Write the buffered data */
5484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5485:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
ARM GAS  /tmp/ccJz23SP.s 			page 123


5486:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5487:Middlewares/Third_Party/FatFs/src/ff.c **** 
5488:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the root directory */
5489:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, szb_buf);
5490:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 0 + 0] = 0x83;		/* 83 entry (volume label) */
5491:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 1 + 0] = 0x81;		/* 81 entry (allocation bitmap) */
5492:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 20, 2);
5493:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 24, szb_bit);
5494:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 2 + 0] = 0x82;		/* 82 entry (up-case table) */
5495:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 4, sum);
5496:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 20, 2 + tbl[0]);
5497:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 24, szb_case);
5498:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * (tbl[0] + tbl[1]);	nsect = au;	/* Start of the root directory and number of 
5499:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill root directory sectors */
5500:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5501:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5502:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5503:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5504:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5505:Middlewares/Third_Party/FatFs/src/ff.c **** 
5506:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create two set of the exFAT VBR blocks */
5507:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_vol;
5508:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; n < 2; n++) {
5509:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Main record (+0) */
5510:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5511:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11);	/* Boot jump code (x86), OEM name */
5512:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolOfsEx, b_vol);					/* Volume offset in the physical drive [sector] */
5513:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSecEx, sz_vol);					/* Volume size [sector] */
5514:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatOfsEx, b_fat - b_vol);			/* FAT offset [sector] */
5515:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatSzEx, sz_fat);					/* FAT size [sector] */
5516:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_DataOfsEx, b_data - b_vol);			/* Data offset [sector] */
5517:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_NumClusEx, n_clst);					/* Number of clusters */
5518:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClusEx, 2 + tbl[0] + tbl[1]);	/* Root dir cluster # */
5519:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolIDEx, GET_FATTIME());				/* VSN */
5520:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSVerEx, 0x100);						/* File system version (1.00) */
5521:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_BytsPerSecEx] = 0, i = ss; i >>= 1; buf[BPB_BytsPerSecEx]++) ;	/* Log2 of sector si
5522:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_SecPerClusEx] = 0, i = au; i >>= 1; buf[BPB_SecPerClusEx]++) ;	/* Log2 of cluster s
5523:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_NumFATsEx] = 1;					/* Number of FATs */
5524:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_DrvNumEx] = 0x80;				/* Drive number (for int13) */
5525:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_BootCodeEx, 0xFEEB);	/* Boot code (x86) */
5526:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);			/* Signature (placed here regardless of sector size) */
5527:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = sum = 0; i < ss; i++) {		/* VBR checksum */
5528:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i != BPB_VolFlagEx && i != BPB_VolFlagEx + 1 && i != BPB_PercInUseEx) sum = xsum32(buf[i], 
5529:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5530:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5531:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Extended bootstrap record (+1..+8) */
5532:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5533:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + ss - 2, 0xAA55);	/* Signature (placed at end of sector) */
5534:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 1; j < 9; j++) {
5535:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5536:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5537:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5538:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* OEM/Reserved record (+9..+10) */
5539:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5540:Middlewares/Third_Party/FatFs/src/ff.c **** 			for ( ; j < 11; j++) {
5541:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
ARM GAS  /tmp/ccJz23SP.s 			page 124


5543:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Sum record (+11) */
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < ss; i += 4) st_dword(buf + i, sum);		/* Fill with checksum value */
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5548:Middlewares/Third_Party/FatFs/src/ff.c **** 
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5550:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* Create an FAT12/16/32 volume */
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			pau = au;
5554:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {	/* FAT32 volume */
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;	/* Number of clusters */
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
5565:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5569:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
5573:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 					fmt = FS_FAT12;
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
5580:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_fat = b_vol + sz_rsv;						/* FAT base */
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Align data base to erase block boundary (for flash memory media) */
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current d
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
5588:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat += n / n_fats;
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Determine number of clusters and final check of validity of the FAT sub-type */
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  /tmp/ccJz23SP.s 			page 125


5600:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT16) {
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((opt & FM_FAT32)) {
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
5608:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5611:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5612:Middlewares/Third_Party/FatFs/src/ff.c **** 				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5615:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5616:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT1
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Ok, it is the valid cluster configuration */
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (1);
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 
5623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area can be erased *
5625:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5626:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FAT VBR */
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, ss);
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSec32, sz_vol);		/* Volume size in 32-bit LBA */
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
ARM GAS  /tmp/ccJz23SP.s 			page 126


5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BS_55AA, 0xAA55);					/* Signature (offset is fixed here regardless of sector size)
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 
5663:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FSINFO record if needed */
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5675:Middlewares/Third_Party/FatFs/src/ff.c **** 
5676:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize FAT area */
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, (UINT)szb_buf);
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < n_fats; i++) {			/* Initialize FATs each */
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
5684:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5687:Middlewares/Third_Party/FatFs/src/ff.c **** 			nsect = sz_fat;		/* Number of FAT sectors */
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {	/* Fill FAT sectors */
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
5694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5695:Middlewares/Third_Party/FatFs/src/ff.c **** 
5696:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize root directory (fill with zero) */
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5703:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 
5705:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
5706:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_EXFAT && fmt == FS_EXFAT) {
5707:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
5708:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
5711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x10000) {
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
ARM GAS  /tmp/ccJz23SP.s 			page 127


5714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5719:Middlewares/Third_Party/FatFs/src/ff.c **** 
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Update partition information */
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {	/* Created in the existing partition */
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Read the MBR */
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[MBR_Table + (part - 1) * SZ_PTE + PTE_System] = sys;		/* Set system ID */
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it back to the MBR */
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Created as a new single partition */
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
5739:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
5742:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
5743:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5744:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5745:Middlewares/Third_Party/FatFs/src/ff.c **** 
5746:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
5747:Middlewares/Third_Party/FatFs/src/ff.c **** 
5748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
5749:Middlewares/Third_Party/FatFs/src/ff.c **** }
5750:Middlewares/Third_Party/FatFs/src/ff.c **** 
5751:Middlewares/Third_Party/FatFs/src/ff.c **** 
5752:Middlewares/Third_Party/FatFs/src/ff.c **** 
5753:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
5754:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5755:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
5756:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5757:Middlewares/Third_Party/FatFs/src/ff.c **** 
5758:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
5759:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
5760:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD* szt,	/* Pointer to the size table for each partitions */
5761:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
5762:Middlewares/Third_Party/FatFs/src/ff.c **** )
5763:Middlewares/Third_Party/FatFs/src/ff.c **** {
5764:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
5765:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
5766:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5767:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
5768:Middlewares/Third_Party/FatFs/src/ff.c **** 
5769:Middlewares/Third_Party/FatFs/src/ff.c **** 
5770:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
ARM GAS  /tmp/ccJz23SP.s 			page 128


5771:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5772:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5773:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
5774:Middlewares/Third_Party/FatFs/src/ff.c **** 
5775:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the CHS without any consideration of the drive geometry */
5776:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
5777:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
5778:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
5779:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
5780:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
5781:Middlewares/Third_Party/FatFs/src/ff.c **** 
5782:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
5783:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
5784:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
5785:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
5786:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;	/* Number of cylinder
5787:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
5788:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
5789:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
5790:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
5791:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
5792:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
5793:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5794:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
5795:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5796:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;	/* End cylinder */
5797:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
5798:Middlewares/Third_Party/FatFs/src/ff.c **** 
5799:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
5800:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
5801:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
5802:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
5803:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x07;						/* System type (temporary setting) */
5804:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
5805:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
5806:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
5807:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 8, s_part);			/* Start sector in LBA */
5808:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 12, sz_part);			/* Number of sectors */
5809:Middlewares/Third_Party/FatFs/src/ff.c **** 
5810:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
5811:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
5812:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5813:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(p, 0xAA55);
5814:Middlewares/Third_Party/FatFs/src/ff.c **** 
5815:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
5816:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
5817:Middlewares/Third_Party/FatFs/src/ff.c **** }
5818:Middlewares/Third_Party/FatFs/src/ff.c **** 
5819:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
5820:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
5821:Middlewares/Third_Party/FatFs/src/ff.c **** 
5822:Middlewares/Third_Party/FatFs/src/ff.c **** 
5823:Middlewares/Third_Party/FatFs/src/ff.c **** 
5824:Middlewares/Third_Party/FatFs/src/ff.c **** 
5825:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
5826:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5827:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
ARM GAS  /tmp/ccJz23SP.s 			page 129


5828:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5829:Middlewares/Third_Party/FatFs/src/ff.c **** 
5830:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
5831:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
5832:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
5833:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
5834:Middlewares/Third_Party/FatFs/src/ff.c **** )
5835:Middlewares/Third_Party/FatFs/src/ff.c **** {
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
5838:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
5839:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
5840:Middlewares/Third_Party/FatFs/src/ff.c **** 
5841:Middlewares/Third_Party/FatFs/src/ff.c **** 
5842:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
5843:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5844:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
5845:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5846:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5847:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5848:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
5849:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
5850:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence (0x80-0x7FF) */
5851:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
5852:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
5853:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
5854:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';	/* Reject invalid code range */
5855:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5856:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence (0x800-0xFFFF) */
5857:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
5858:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
5859:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
5860:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';	/* Reject invalid code range */
5861:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
5862:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
5863:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5864:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5865:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5866:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
5867:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5868:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5869:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
5870:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
5871:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5872:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5873:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
5874:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
5875:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
5879:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
ARM GAS  /tmp/ccJz23SP.s 			page 130


5885:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5886:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5889:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5890:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
5892:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
5893:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
5894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
5895:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5896:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
5897:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
5898:Middlewares/Third_Party/FatFs/src/ff.c **** }
5899:Middlewares/Third_Party/FatFs/src/ff.c **** 
5900:Middlewares/Third_Party/FatFs/src/ff.c **** 
5901:Middlewares/Third_Party/FatFs/src/ff.c **** 
5902:Middlewares/Third_Party/FatFs/src/ff.c **** 
5903:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5904:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
5905:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5906:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
5907:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5908:Middlewares/Third_Party/FatFs/src/ff.c **** 
5909:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
5910:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp;		/* Ptr to the writing file */
5911:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;	/* Write index of buf[] (-1:error), number of chars written */
5912:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];	/* Write buffer */
5913:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
5914:Middlewares/Third_Party/FatFs/src/ff.c **** 
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 
5916:Middlewares/Third_Party/FatFs/src/ff.c **** static
5917:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (		/* Buffered write with code conversion */
5918:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
5920:Middlewares/Third_Party/FatFs/src/ff.c **** )
5921:Middlewares/Third_Party/FatFs/src/ff.c **** {
5922:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
5923:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
5924:Middlewares/Third_Party/FatFs/src/ff.c **** 
5925:Middlewares/Third_Party/FatFs/src/ff.c **** 
5926:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
5928:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5929:Middlewares/Third_Party/FatFs/src/ff.c **** 
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;		/* Write index of pb->buf[] */
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
5932:Middlewares/Third_Party/FatFs/src/ff.c **** 
5933:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5934:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
5935:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
5936:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
5937:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5938:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
5939:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
5940:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
5941:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
ARM GAS  /tmp/ccJz23SP.s 			page 131


5942:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
5943:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5944:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
5945:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5946:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
5947:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5948:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5949:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
5950:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5951:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5952:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
5955:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
5957:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5958:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5959:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
5960:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5961:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5962:Middlewares/Third_Party/FatFs/src/ff.c **** 
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
5964:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
5966:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5967:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
5969:Middlewares/Third_Party/FatFs/src/ff.c **** }
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 
5971:Middlewares/Third_Party/FatFs/src/ff.c **** 
5972:Middlewares/Third_Party/FatFs/src/ff.c **** static
5973:Middlewares/Third_Party/FatFs/src/ff.c **** int putc_flush (		/* Flush left characters in the buffer */
5974:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb
5975:Middlewares/Third_Party/FatFs/src/ff.c **** )
5976:Middlewares/Third_Party/FatFs/src/ff.c **** {
5977:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
5978:Middlewares/Third_Party/FatFs/src/ff.c **** 
5979:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb->idx >= 0	/* Flush buffered characters to the file */
5980:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
5982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
5983:Middlewares/Third_Party/FatFs/src/ff.c **** }
5984:Middlewares/Third_Party/FatFs/src/ff.c **** 
5985:Middlewares/Third_Party/FatFs/src/ff.c **** 
5986:Middlewares/Third_Party/FatFs/src/ff.c **** static
5987:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_init (		/* Initialize write buffer */
5988:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5989:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp
5990:Middlewares/Third_Party/FatFs/src/ff.c **** )
5991:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1434              		.loc 1 5991 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              		@ link register save eliminated.
 1439              	.LVL190:
5992:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->fp = fp;
ARM GAS  /tmp/ccJz23SP.s 			page 132


 1440              		.loc 1 5992 0
 1441 0000 0160     		str	r1, [r0]
5993:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr = pb->idx = 0;
 1442              		.loc 1 5993 0
 1443 0002 0023     		movs	r3, #0
 1444 0004 4360     		str	r3, [r0, #4]
 1445 0006 8360     		str	r3, [r0, #8]
5994:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1446              		.loc 1 5994 0
 1447 0008 7047     		bx	lr
 1448              		.cfi_endproc
 1449              	.LFE387:
 1451              		.section	.text.validate,"ax",%progbits
 1452              		.align	1
 1453              		.syntax unified
 1454              		.thumb
 1455              		.thumb_func
 1456              		.fpu fpv4-sp-d16
 1458              	validate:
 1459              	.LFB366:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
 1460              		.loc 1 3220 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              	.LVL191:
 1465 0000 38B5     		push	{r3, r4, r5, lr}
 1466              	.LCFI20:
 1467              		.cfi_def_cfa_offset 16
 1468              		.cfi_offset 3, -16
 1469              		.cfi_offset 4, -12
 1470              		.cfi_offset 5, -8
 1471              		.cfi_offset 14, -4
 1472 0002 0D46     		mov	r5, r1
 1473              	.LVL192:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 1474              		.loc 1 3224 0
 1475 0004 A8B1     		cbz	r0, .L159
 1476 0006 0446     		mov	r4, r0
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 1477              		.loc 1 3224 0 is_stmt 0 discriminator 1
 1478 0008 0368     		ldr	r3, [r0]
 1479 000a ABB1     		cbz	r3, .L160
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 1480              		.loc 1 3224 0 discriminator 2
 1481 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1482 000e AAB1     		cbz	r2, .L161
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 1483              		.loc 1 3224 0 discriminator 3
 1484 0010 8188     		ldrh	r1, [r0, #4]
 1485              	.LVL193:
 1486 0012 DA88     		ldrh	r2, [r3, #6]
 1487 0014 9142     		cmp	r1, r2
 1488 0016 03D0     		beq	.L165
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1489              		.loc 1 3221 0 is_stmt 1
 1490 0018 0920     		movs	r0, #9
ARM GAS  /tmp/ccJz23SP.s 			page 133


 1491              	.LVL194:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1492              		.loc 1 3241 0
 1493 001a 0023     		movs	r3, #0
 1494              	.LVL195:
 1495              	.L158:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1496              		.loc 1 3241 0 is_stmt 0 discriminator 4
 1497 001c 2B60     		str	r3, [r5]
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1498              		.loc 1 3243 0 is_stmt 1 discriminator 4
 1499 001e 38BD     		pop	{r3, r4, r5, pc}
 1500              	.LVL196:
 1501              	.L165:
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 1502              		.loc 1 3236 0
 1503 0020 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1504              	.LVL197:
 1505 0022 FFF7FEFF 		bl	disk_status
 1506              	.LVL198:
 1507 0026 10F0010F 		tst	r0, #1
 1508 002a 0AD1     		bne	.L163
 1509              	.LVL199:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1510              		.loc 1 3241 0
 1511 002c 2368     		ldr	r3, [r4]
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1512              		.loc 1 3237 0
 1513 002e 0020     		movs	r0, #0
 1514 0030 F4E7     		b	.L158
 1515              	.LVL200:
 1516              	.L159:
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1517              		.loc 1 3221 0
 1518 0032 0920     		movs	r0, #9
 1519              	.LVL201:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1520              		.loc 1 3241 0
 1521 0034 0023     		movs	r3, #0
 1522 0036 F1E7     		b	.L158
 1523              	.LVL202:
 1524              	.L160:
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1525              		.loc 1 3221 0
 1526 0038 0920     		movs	r0, #9
 1527              	.LVL203:
 1528 003a EFE7     		b	.L158
 1529              	.LVL204:
 1530              	.L161:
 1531 003c 0920     		movs	r0, #9
 1532              	.LVL205:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1533              		.loc 1 3241 0
 1534 003e 0023     		movs	r3, #0
 1535 0040 ECE7     		b	.L158
 1536              	.LVL206:
 1537              	.L163:
ARM GAS  /tmp/ccJz23SP.s 			page 134


3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1538              		.loc 1 3221 0
 1539 0042 0920     		movs	r0, #9
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1540              		.loc 1 3241 0
 1541 0044 0023     		movs	r3, #0
 1542 0046 E9E7     		b	.L158
 1543              		.cfi_endproc
 1544              	.LFE366:
 1546              		.section	.text.sync_window,"ax",%progbits
 1547              		.align	1
 1548              		.syntax unified
 1549              		.thumb
 1550              		.thumb_func
 1551              		.fpu fpv4-sp-d16
 1553              	sync_window:
 1554              	.LFB342:
 886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1555              		.loc 1 886 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559              	.LVL207:
 1560 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1561              	.LCFI21:
 1562              		.cfi_def_cfa_offset 24
 1563              		.cfi_offset 3, -24
 1564              		.cfi_offset 4, -20
 1565              		.cfi_offset 5, -16
 1566              		.cfi_offset 6, -12
 1567              		.cfi_offset 7, -8
 1568              		.cfi_offset 14, -4
 1569              	.LVL208:
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1570              		.loc 1 892 0
 1571 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1572 0004 0BB9     		cbnz	r3, .L174
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1573              		.loc 1 889 0
 1574 0006 0020     		movs	r0, #0
 1575              	.LVL209:
 1576              	.L167:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1577              		.loc 1 907 0
 1578 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1579              	.LVL210:
 1580              	.L174:
 1581 000a 0446     		mov	r4, r0
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 1582              		.loc 1 893 0
 1583 000c C56A     		ldr	r5, [r0, #44]
 1584              	.LVL211:
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1585              		.loc 1 894 0
 1586 000e 00F13007 		add	r7, r0, #48
 1587 0012 0123     		movs	r3, #1
 1588 0014 2A46     		mov	r2, r5
ARM GAS  /tmp/ccJz23SP.s 			page 135


 1589 0016 3946     		mov	r1, r7
 1590 0018 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1591              	.LVL212:
 1592 001a FFF7FEFF 		bl	disk_write
 1593              	.LVL213:
 1594 001e A8B9     		cbnz	r0, .L171
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1595              		.loc 1 897 0
 1596 0020 0023     		movs	r3, #0
 1597 0022 E370     		strb	r3, [r4, #3]
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1598              		.loc 1 898 0
 1599 0024 236A     		ldr	r3, [r4, #32]
 1600 0026 EB1A     		subs	r3, r5, r3
 1601 0028 A269     		ldr	r2, [r4, #24]
 1602 002a 9342     		cmp	r3, r2
 1603 002c 10D2     		bcs	.L172
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1604              		.loc 1 899 0
 1605 002e A678     		ldrb	r6, [r4, #2]	@ zero_extendqisi2
 1606              	.LVL214:
 1607              	.L168:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1608              		.loc 1 899 0 is_stmt 0 discriminator 1
 1609 0030 012E     		cmp	r6, #1
 1610 0032 09D9     		bls	.L175
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 1611              		.loc 1 900 0 is_stmt 1 discriminator 3
 1612 0034 A369     		ldr	r3, [r4, #24]
 1613 0036 1D44     		add	r5, r5, r3
 1614              	.LVL215:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1615              		.loc 1 901 0 discriminator 3
 1616 0038 0123     		movs	r3, #1
 1617 003a 2A46     		mov	r2, r5
 1618 003c 3946     		mov	r1, r7
 1619 003e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1620 0040 FFF7FEFF 		bl	disk_write
 1621              	.LVL216:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1622              		.loc 1 899 0 discriminator 3
 1623 0044 013E     		subs	r6, r6, #1
 1624              	.LVL217:
 1625 0046 F3E7     		b	.L168
 1626              	.L175:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1627              		.loc 1 889 0
 1628 0048 0020     		movs	r0, #0
 1629 004a DDE7     		b	.L167
 1630              	.LVL218:
 1631              	.L171:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1632              		.loc 1 895 0
 1633 004c 0120     		movs	r0, #1
 1634 004e DBE7     		b	.L167
 1635              	.L172:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 136


 1636              		.loc 1 889 0
 1637 0050 0020     		movs	r0, #0
 1638 0052 D9E7     		b	.L167
 1639              		.cfi_endproc
 1640              	.LFE342:
 1642              		.section	.text.move_window,"ax",%progbits
 1643              		.align	1
 1644              		.syntax unified
 1645              		.thumb
 1646              		.thumb_func
 1647              		.fpu fpv4-sp-d16
 1649              	move_window:
 1650              	.LFB343:
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 1651              		.loc 1 916 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 0, uses_anonymous_args = 0
 1655              	.LVL219:
 1656 0000 70B5     		push	{r4, r5, r6, lr}
 1657              	.LCFI22:
 1658              		.cfi_def_cfa_offset 16
 1659              		.cfi_offset 4, -16
 1660              		.cfi_offset 5, -12
 1661              		.cfi_offset 6, -8
 1662              		.cfi_offset 14, -4
 1663              	.LVL220:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 1664              		.loc 1 920 0
 1665 0002 C36A     		ldr	r3, [r0, #44]
 1666 0004 8B42     		cmp	r3, r1
 1667 0006 12D0     		beq	.L179
 1668 0008 0446     		mov	r4, r0
 1669 000a 0D46     		mov	r5, r1
 922:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1670              		.loc 1 922 0
 1671 000c FFF7FEFF 		bl	sync_window
 1672              	.LVL221:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 1673              		.loc 1 924 0
 1674 0010 0646     		mov	r6, r0
 1675 0012 68B9     		cbnz	r0, .L177
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1676              		.loc 1 925 0
 1677 0014 0123     		movs	r3, #1
 1678 0016 2A46     		mov	r2, r5
 1679 0018 04F13001 		add	r1, r4, #48
 1680 001c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1681              	.LVL222:
 1682 001e FFF7FEFF 		bl	disk_read
 1683              	.LVL223:
 1684 0022 10B1     		cbz	r0, .L178
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1685              		.loc 1 927 0
 1686 0024 0126     		movs	r6, #1
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 1687              		.loc 1 926 0
ARM GAS  /tmp/ccJz23SP.s 			page 137


 1688 0026 4FF0FF35 		mov	r5, #-1
 1689              	.LVL224:
 1690              	.L178:
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1691              		.loc 1 929 0
 1692 002a E562     		str	r5, [r4, #44]
 1693 002c 00E0     		b	.L177
 1694              	.LVL225:
 1695              	.L179:
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1696              		.loc 1 917 0
 1697 002e 0026     		movs	r6, #0
 1698              	.LVL226:
 1699              	.L177:
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1700              		.loc 1 933 0
 1701 0030 3046     		mov	r0, r6
 1702 0032 70BD     		pop	{r4, r5, r6, pc}
 1703              		.cfi_endproc
 1704              	.LFE343:
 1706              		.section	.text.check_fs,"ax",%progbits
 1707              		.align	1
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv4-sp-d16
 1713              	check_fs:
 1714              	.LFB364:
2969:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1715              		.loc 1 2969 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              	.LVL227:
 1720 0000 10B5     		push	{r4, lr}
 1721              	.LCFI23:
 1722              		.cfi_def_cfa_offset 8
 1723              		.cfi_offset 4, -8
 1724              		.cfi_offset 14, -4
 1725 0002 0446     		mov	r4, r0
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 1726              		.loc 1 2970 0
 1727 0004 0023     		movs	r3, #0
 1728 0006 C370     		strb	r3, [r0, #3]
 1729 0008 4FF0FF33 		mov	r3, #-1
 1730 000c C362     		str	r3, [r0, #44]
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1731              		.loc 1 2971 0
 1732 000e FFF7FEFF 		bl	move_window
 1733              	.LVL228:
 1734 0012 18BB     		cbnz	r0, .L185
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1735              		.loc 1 2973 0
 1736 0014 04F22E20 		addw	r0, r4, #558
 1737 0018 FFF7FEFF 		bl	ld_word
 1738              	.LVL229:
 1739 001c 4AF65523 		movw	r3, #43605
ARM GAS  /tmp/ccJz23SP.s 			page 138


 1740 0020 9842     		cmp	r0, r3
 1741 0022 1DD1     		bne	.L186
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1742              		.loc 1 2975 0
 1743 0024 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 1744 0028 E92B     		cmp	r3, #233
 1745 002a 05D0     		beq	.L184
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1746              		.loc 1 2975 0 is_stmt 0 discriminator 1
 1747 002c 236B     		ldr	r3, [r4, #48]
 1748 002e 03F0FF13 		and	r3, r3, #16711935
 1749 0032 0F4A     		ldr	r2, .L191
 1750 0034 9342     		cmp	r3, r2
 1751 0036 15D1     		bne	.L187
 1752              	.L184:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1753              		.loc 1 2976 0 is_stmt 1
 1754 0038 04F16600 		add	r0, r4, #102
 1755 003c FFF7FEFF 		bl	ld_dword
 1756              	.LVL230:
 1757 0040 20F07F40 		bic	r0, r0, #-16777216
 1758 0044 0B4B     		ldr	r3, .L191+4
 1759 0046 9842     		cmp	r0, r3
 1760 0048 0ED0     		beq	.L188
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1761              		.loc 1 2977 0
 1762 004a 04F18200 		add	r0, r4, #130
 1763 004e FFF7FEFF 		bl	ld_dword
 1764              	.LVL231:
 1765 0052 094B     		ldr	r3, .L191+8
 1766 0054 9842     		cmp	r0, r3
 1767 0056 09D1     		bne	.L189
 1768 0058 0020     		movs	r0, #0
 1769 005a 02E0     		b	.L183
 1770              	.L185:
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1771              		.loc 1 2971 0
 1772 005c 0420     		movs	r0, #4
 1773 005e 00E0     		b	.L183
 1774              	.L186:
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1775              		.loc 1 2973 0
 1776 0060 0320     		movs	r0, #3
 1777              	.L183:
2983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1778              		.loc 1 2983 0
 1779 0062 10BD     		pop	{r4, pc}
 1780              	.LVL232:
 1781              	.L187:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1782              		.loc 1 2982 0
 1783 0064 0220     		movs	r0, #2
 1784 0066 FCE7     		b	.L183
 1785              	.L188:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1786              		.loc 1 2976 0
 1787 0068 0020     		movs	r0, #0
ARM GAS  /tmp/ccJz23SP.s 			page 139


 1788 006a FAE7     		b	.L183
 1789              	.L189:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1790              		.loc 1 2982 0
 1791 006c 0220     		movs	r0, #2
 1792 006e F8E7     		b	.L183
 1793              	.L192:
 1794              		.align	2
 1795              	.L191:
 1796 0070 EB009000 		.word	9437419
 1797 0074 46415400 		.word	5521734
 1798 0078 46415433 		.word	861159750
 1799              		.cfi_endproc
 1800              	.LFE364:
 1802              		.section	.text.find_volume,"ax",%progbits
 1803              		.align	1
 1804              		.syntax unified
 1805              		.thumb
 1806              		.thumb_func
 1807              		.fpu fpv4-sp-d16
 1809              	find_volume:
 1810              	.LFB365:
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 1811              		.loc 1 2998 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 16
 1814              		@ frame_needed = 0, uses_anonymous_args = 0
 1815              	.LVL233:
 1816 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1817              	.LCFI24:
 1818              		.cfi_def_cfa_offset 32
 1819              		.cfi_offset 4, -32
 1820              		.cfi_offset 5, -28
 1821              		.cfi_offset 6, -24
 1822              		.cfi_offset 7, -20
 1823              		.cfi_offset 8, -16
 1824              		.cfi_offset 9, -12
 1825              		.cfi_offset 10, -8
 1826              		.cfi_offset 14, -4
 1827 0004 84B0     		sub	sp, sp, #16
 1828              	.LCFI25:
 1829              		.cfi_def_cfa_offset 48
 1830 0006 0F46     		mov	r7, r1
 1831 0008 1646     		mov	r6, r2
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1832              		.loc 1 3009 0
 1833 000a 0023     		movs	r3, #0
 1834 000c 0B60     		str	r3, [r1]
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1835              		.loc 1 3010 0
 1836 000e FFF7FEFF 		bl	get_ldnumber
 1837              	.LVL234:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1838              		.loc 1 3011 0
 1839 0012 051E     		subs	r5, r0, #0
 1840 0014 C0F24481 		blt	.L211
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
ARM GAS  /tmp/ccJz23SP.s 			page 140


 1841              		.loc 1 3014 0
 1842 0018 B64B     		ldr	r3, .L242
 1843 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1844              	.LVL235:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1845              		.loc 1 3015 0
 1846 001e 002C     		cmp	r4, #0
 1847 0020 00F04281 		beq	.L212
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1848              		.loc 1 3018 0
 1849 0024 3C60     		str	r4, [r7]
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 1850              		.loc 1 3020 0
 1851 0026 06F0FE06 		and	r6, r6, #254
 1852              	.LVL236:
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1853              		.loc 1 3021 0
 1854 002a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1855 002c 73B1     		cbz	r3, .L195
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1856              		.loc 1 3022 0
 1857 002e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1858              	.LVL237:
 1859 0030 FFF7FEFF 		bl	disk_status
 1860              	.LVL238:
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 1861              		.loc 1 3023 0
 1862 0034 10F0010F 		tst	r0, #1
 1863 0038 08D1     		bne	.L195
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1864              		.loc 1 3024 0
 1865 003a 002E     		cmp	r6, #0
 1866 003c 00F03681 		beq	.L213
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1867              		.loc 1 3024 0 is_stmt 0 discriminator 1
 1868 0040 10F0040F 		tst	r0, #4
 1869 0044 40F03481 		bne	.L214
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1870              		.loc 1 3027 0 is_stmt 1
 1871 0048 0020     		movs	r0, #0
 1872              	.LVL239:
 1873 004a 2AE1     		b	.L194
 1874              	.L195:
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1875              		.loc 1 3034 0
 1876 004c 0023     		movs	r3, #0
 1877 004e 2370     		strb	r3, [r4]
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1878              		.loc 1 3035 0
 1879 0050 E8B2     		uxtb	r0, r5
 1880 0052 6070     		strb	r0, [r4, #1]
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1881              		.loc 1 3036 0
 1882 0054 FFF7FEFF 		bl	disk_initialize
 1883              	.LVL240:
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1884              		.loc 1 3037 0
ARM GAS  /tmp/ccJz23SP.s 			page 141


 1885 0058 10F0010F 		tst	r0, #1
 1886 005c 40F02A81 		bne	.L215
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1887              		.loc 1 3040 0
 1888 0060 1EB1     		cbz	r6, .L196
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1889              		.loc 1 3040 0 is_stmt 0 discriminator 1
 1890 0062 10F0040F 		tst	r0, #4
 1891 0066 40F02781 		bne	.L216
 1892              	.L196:
 1893              	.LVL241:
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1894              		.loc 1 3050 0 is_stmt 1
 1895 006a 0021     		movs	r1, #0
 1896 006c 2046     		mov	r0, r4
 1897              	.LVL242:
 1898 006e FFF7FEFF 		bl	check_fs
 1899              	.LVL243:
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1900              		.loc 1 3051 0
 1901 0072 0228     		cmp	r0, #2
 1902 0074 00F0B680 		beq	.L217
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 1903              		.loc 1 3049 0
 1904 0078 0026     		movs	r6, #0
 1905              	.LVL244:
 1906              	.L198:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1907              		.loc 1 3063 0
 1908 007a 0428     		cmp	r0, #4
 1909 007c 00F01E81 		beq	.L220
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1910              		.loc 1 3064 0
 1911 0080 0128     		cmp	r0, #1
 1912 0082 00F21D81 		bhi	.L221
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1913              		.loc 1 3116 0
 1914 0086 04F13B00 		add	r0, r4, #59
 1915              	.LVL245:
 1916 008a FFF7FEFF 		bl	ld_word
 1917              	.LVL246:
 1918 008e B0F5007F 		cmp	r0, #512
 1919 0092 40F01781 		bne	.L222
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 1920              		.loc 1 3118 0
 1921 0096 04F14600 		add	r0, r4, #70
 1922 009a FFF7FEFF 		bl	ld_word
 1923              	.LVL247:
 1924 009e 0746     		mov	r7, r0
 1925              	.LVL248:
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 1926              		.loc 1 3119 0
 1927 00a0 20B9     		cbnz	r0, .L203
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 1928              		.loc 1 3119 0 is_stmt 0 discriminator 1
 1929 00a2 04F15400 		add	r0, r4, #84
 1930              	.LVL249:
ARM GAS  /tmp/ccJz23SP.s 			page 142


 1931 00a6 FFF7FEFF 		bl	ld_dword
 1932              	.LVL250:
 1933 00aa 0746     		mov	r7, r0
 1934              	.LVL251:
 1935              	.L203:
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1936              		.loc 1 3120 0 is_stmt 1
 1937 00ac A761     		str	r7, [r4, #24]
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1938              		.loc 1 3122 0
 1939 00ae 94F84020 		ldrb	r2, [r4, #64]	@ zero_extendqisi2
 1940 00b2 A270     		strb	r2, [r4, #2]
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1941              		.loc 1 3123 0
 1942 00b4 531E     		subs	r3, r2, #1
 1943 00b6 DBB2     		uxtb	r3, r3
 1944 00b8 012B     		cmp	r3, #1
 1945 00ba 00F20581 		bhi	.L223
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1946              		.loc 1 3124 0
 1947 00be 07FB02F5 		mul	r5, r7, r2
 1948              	.LVL252:
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1949              		.loc 1 3126 0
 1950 00c2 94F83D80 		ldrb	r8, [r4, #61]	@ zero_extendqisi2
 1951 00c6 A4F80A80 		strh	r8, [r4, #10]	@ movhi
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1952              		.loc 1 3127 0
 1953 00ca B8F1000F 		cmp	r8, #0
 1954 00ce 00F0FD80 		beq	.L224
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1955              		.loc 1 3127 0 is_stmt 0 discriminator 2
 1956 00d2 08F1FF33 		add	r3, r8, #-1
 1957 00d6 18EA030F 		tst	r8, r3
 1958 00da 40F0F980 		bne	.L225
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 1959              		.loc 1 3129 0 is_stmt 1
 1960 00de 04F14100 		add	r0, r4, #65
 1961 00e2 FFF7FEFF 		bl	ld_word
 1962              	.LVL253:
 1963 00e6 8246     		mov	r10, r0
 1964 00e8 2081     		strh	r0, [r4, #8]	@ movhi
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1965              		.loc 1 3130 0
 1966 00ea 10F00F0F 		tst	r0, #15
 1967 00ee 40F0F180 		bne	.L226
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 1968              		.loc 1 3132 0
 1969 00f2 04F14300 		add	r0, r4, #67
 1970 00f6 FFF7FEFF 		bl	ld_word
 1971              	.LVL254:
 1972 00fa 8146     		mov	r9, r0
 1973              	.LVL255:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1974              		.loc 1 3133 0
 1975 00fc 20B9     		cbnz	r0, .L204
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 143


 1976              		.loc 1 3133 0 is_stmt 0 discriminator 1
 1977 00fe 04F15000 		add	r0, r4, #80
 1978              	.LVL256:
 1979 0102 FFF7FEFF 		bl	ld_dword
 1980              	.LVL257:
 1981 0106 8146     		mov	r9, r0
 1982              	.LVL258:
 1983              	.L204:
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 1984              		.loc 1 3135 0 is_stmt 1
 1985 0108 04F13E00 		add	r0, r4, #62
 1986              	.LVL259:
 1987 010c FFF7FEFF 		bl	ld_word
 1988              	.LVL260:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1989              		.loc 1 3136 0
 1990 0110 0146     		mov	r1, r0
 1991 0112 0028     		cmp	r0, #0
 1992 0114 00F0E080 		beq	.L227
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 1993              		.loc 1 3139 0
 1994 0118 4219     		adds	r2, r0, r5
 1995 011a 02EB1A12 		add	r2, r2, r10, lsr #4
 1996              	.LVL261:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 1997              		.loc 1 3140 0
 1998 011e 9145     		cmp	r9, r2
 1999 0120 C0F0DC80 		bcc	.L228
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 2000              		.loc 1 3141 0
 2001 0124 A9EB0203 		sub	r3, r9, r2
 2002 0128 B3FBF8F3 		udiv	r3, r3, r8
 2003              	.LVL262:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2004              		.loc 1 3142 0
 2005 012c 002B     		cmp	r3, #0
 2006 012e 00F0D780 		beq	.L229
 2007              	.LVL263:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2008              		.loc 1 3144 0
 2009 0132 4FF6F570 		movw	r0, #65525
 2010              	.LVL264:
 2011 0136 8342     		cmp	r3, r0
 2012 0138 6CD9     		bls	.L230
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 2013              		.loc 1 3143 0
 2014 013a 4FF00309 		mov	r9, #3
 2015              	.LVL265:
 2016              	.L205:
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2017              		.loc 1 3145 0
 2018 013e 40F6F570 		movw	r0, #4085
 2019 0142 8342     		cmp	r3, r0
 2020 0144 01D8     		bhi	.L206
 2021 0146 4FF00109 		mov	r9, #1
 2022              	.LVL266:
 2023              	.L206:
ARM GAS  /tmp/ccJz23SP.s 			page 144


3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2024              		.loc 1 3148 0
 2025 014a 03F10208 		add	r8, r3, #2
 2026 014e C4F81480 		str	r8, [r4, #20]
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2027              		.loc 1 3149 0
 2028 0152 E661     		str	r6, [r4, #28]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2029              		.loc 1 3150 0
 2030 0154 8B19     		adds	r3, r1, r6
 2031              	.LVL267:
 2032 0156 2362     		str	r3, [r4, #32]
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 2033              		.loc 1 3151 0
 2034 0158 3244     		add	r2, r2, r6
 2035              	.LVL268:
 2036 015a A262     		str	r2, [r4, #40]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 2037              		.loc 1 3152 0
 2038 015c B9F1030F 		cmp	r9, #3
 2039 0160 5BD0     		beq	.L237
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2040              		.loc 1 3158 0
 2041 0162 BAF1000F 		cmp	r10, #0
 2042 0166 00F0C180 		beq	.L234
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2043              		.loc 1 3159 0
 2044 016a 2B44     		add	r3, r3, r5
 2045 016c 6362     		str	r3, [r4, #36]
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2046              		.loc 1 3161 0
 2047 016e B9F1020F 		cmp	r9, #2
 2048 0172 63D0     		beq	.L238
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2049              		.loc 1 3161 0 is_stmt 0 discriminator 2
 2050 0174 08EB4802 		add	r2, r8, r8, lsl #1
 2051 0178 08F00103 		and	r3, r8, #1
 2052 017c 03EB5203 		add	r3, r3, r2, lsr #1
 2053              	.LVL269:
 2054              	.L208:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2055              		.loc 1 3163 0 is_stmt 1
 2056 0180 03F2FF13 		addw	r3, r3, #511
 2057              	.LVL270:
 2058 0184 B7EB532F 		cmp	r7, r3, lsr #9
 2059 0188 C0F0B280 		bcc	.L235
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
 2060              		.loc 1 3167 0
 2061 018c 4FF0FF33 		mov	r3, #-1
 2062              	.LVL271:
 2063 0190 2361     		str	r3, [r4, #16]
 2064 0192 E360     		str	r3, [r4, #12]
3168:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2065              		.loc 1 3168 0
 2066 0194 8023     		movs	r3, #128
 2067 0196 2371     		strb	r3, [r4, #4]
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
ARM GAS  /tmp/ccJz23SP.s 			page 145


 2068              		.loc 1 3170 0
 2069 0198 B9F1030F 		cmp	r9, #3
 2070 019c 51D0     		beq	.L239
 2071              	.L210:
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 2072              		.loc 1 3191 0
 2073 019e 84F80090 		strb	r9, [r4]
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 2074              		.loc 1 3192 0
 2075 01a2 554A     		ldr	r2, .L242+4
 2076 01a4 1388     		ldrh	r3, [r2]
 2077 01a6 0133     		adds	r3, r3, #1
 2078 01a8 9BB2     		uxth	r3, r3
 2079 01aa 1380     		strh	r3, [r2]	@ movhi
 2080 01ac E380     		strh	r3, [r4, #6]	@ movhi
3203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2081              		.loc 1 3203 0
 2082 01ae 2046     		mov	r0, r4
 2083 01b0 FFF7FEFF 		bl	clear_lock
 2084              	.LVL272:
3205:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2085              		.loc 1 3205 0
 2086 01b4 0020     		movs	r0, #0
 2087 01b6 74E0     		b	.L194
 2088              	.LVL273:
 2089              	.L218:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2090              		.loc 1 3054 0
 2091 01b8 0020     		movs	r0, #0
 2092              	.LVL274:
 2093              	.L199:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2094              		.loc 1 3054 0 is_stmt 0 discriminator 4
 2095 01ba 04AB     		add	r3, sp, #16
 2096 01bc 03EB8503 		add	r3, r3, r5, lsl #2
 2097 01c0 43F8100C 		str	r0, [r3, #-16]
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2098              		.loc 1 3052 0 is_stmt 1 discriminator 4
 2099 01c4 0135     		adds	r5, r5, #1
 2100              	.LVL275:
 2101              	.L197:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2102              		.loc 1 3052 0 is_stmt 0 discriminator 2
 2103 01c6 032D     		cmp	r5, #3
 2104 01c8 0ED8     		bhi	.L240
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 2105              		.loc 1 3053 0 is_stmt 1
 2106 01ca 04F13000 		add	r0, r4, #48
 2107 01ce 2B01     		lsls	r3, r5, #4
 2108 01d0 03F5DF73 		add	r3, r3, #446
 2109 01d4 1844     		add	r0, r0, r3
 2110              	.LVL276:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2111              		.loc 1 3054 0
 2112 01d6 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2113 01d8 002B     		cmp	r3, #0
 2114 01da EDD0     		beq	.L218
ARM GAS  /tmp/ccJz23SP.s 			page 146


3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2115              		.loc 1 3054 0 is_stmt 0 discriminator 1
 2116 01dc 0830     		adds	r0, r0, #8
 2117              	.LVL277:
 2118 01de FFF7FEFF 		bl	ld_dword
 2119              	.LVL278:
 2120 01e2 EAE7     		b	.L199
 2121              	.LVL279:
 2122              	.L217:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2123              		.loc 1 3052 0 is_stmt 1
 2124 01e4 0025     		movs	r5, #0
 2125              	.LVL280:
 2126 01e6 EEE7     		b	.L197
 2127              	.LVL281:
 2128              	.L240:
 2129 01e8 0025     		movs	r5, #0
 2130              	.LVL282:
 2131 01ea 0AE0     		b	.L202
 2132              	.LVL283:
 2133              	.L241:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2134              		.loc 1 3060 0 discriminator 1
 2135 01ec 3146     		mov	r1, r6
 2136 01ee 2046     		mov	r0, r4
 2137 01f0 FFF7FEFF 		bl	check_fs
 2138              	.LVL284:
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2139              		.loc 1 3061 0 discriminator 1
 2140 01f4 0128     		cmp	r0, #1
 2141 01f6 7FF640AF 		bls	.L198
 2142              	.LVL285:
 2143              	.L201:
 2144 01fa 0135     		adds	r5, r5, #1
 2145              	.LVL286:
 2146 01fc 032D     		cmp	r5, #3
 2147 01fe 3FF63CAF 		bhi	.L198
 2148              	.LVL287:
 2149              	.L202:
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 2150              		.loc 1 3059 0
 2151 0202 04AB     		add	r3, sp, #16
 2152 0204 03EB8503 		add	r3, r3, r5, lsl #2
 2153 0208 53F8106C 		ldr	r6, [r3, #-16]
 2154              	.LVL288:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2155              		.loc 1 3060 0
 2156 020c 002E     		cmp	r6, #0
 2157 020e EDD1     		bne	.L241
 2158 0210 0320     		movs	r0, #3
 2159 0212 F2E7     		b	.L201
 2160              	.LVL289:
 2161              	.L230:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2162              		.loc 1 3144 0
 2163 0214 4FF00209 		mov	r9, #2
 2164              	.LVL290:
ARM GAS  /tmp/ccJz23SP.s 			page 147


 2165 0218 91E7     		b	.L205
 2166              	.LVL291:
 2167              	.L237:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2168              		.loc 1 3153 0
 2169 021a 04F15A00 		add	r0, r4, #90
 2170 021e FFF7FEFF 		bl	ld_word
 2171              	.LVL292:
 2172 0222 0028     		cmp	r0, #0
 2173 0224 5ED1     		bne	.L232
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2174              		.loc 1 3154 0
 2175 0226 BAF1000F 		cmp	r10, #0
 2176 022a 5DD1     		bne	.L233
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2177              		.loc 1 3155 0
 2178 022c 04F15C00 		add	r0, r4, #92
 2179 0230 FFF7FEFF 		bl	ld_dword
 2180              	.LVL293:
 2181 0234 6062     		str	r0, [r4, #36]
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 2182              		.loc 1 3156 0
 2183 0236 4FEA8803 		lsl	r3, r8, #2
 2184              	.LVL294:
 2185 023a A1E7     		b	.L208
 2186              	.LVL295:
 2187              	.L238:
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2188              		.loc 1 3161 0 discriminator 1
 2189 023c 4FEA4803 		lsl	r3, r8, #1
 2190 0240 9EE7     		b	.L208
 2191              	.LVL296:
 2192              	.L239:
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 2193              		.loc 1 3171 0
 2194 0242 04F16000 		add	r0, r4, #96
 2195 0246 FFF7FEFF 		bl	ld_word
 2196              	.LVL297:
 2197 024a 0128     		cmp	r0, #1
 2198 024c A7D1     		bne	.L210
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 2199              		.loc 1 3172 0
 2200 024e 711C     		adds	r1, r6, #1
 2201 0250 2046     		mov	r0, r4
 2202 0252 FFF7FEFF 		bl	move_window
 2203              	.LVL298:
 2204 0256 0028     		cmp	r0, #0
 2205 0258 A1D1     		bne	.L210
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2206              		.loc 1 3174 0
 2207 025a 0023     		movs	r3, #0
 2208 025c 2371     		strb	r3, [r4, #4]
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2209              		.loc 1 3175 0
 2210 025e 04F22E20 		addw	r0, r4, #558
 2211 0262 FFF7FEFF 		bl	ld_word
 2212              	.LVL299:
ARM GAS  /tmp/ccJz23SP.s 			page 148


 2213 0266 4AF65523 		movw	r3, #43605
 2214 026a 9842     		cmp	r0, r3
 2215 026c 97D1     		bne	.L210
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2216              		.loc 1 3176 0
 2217 026e 04F13000 		add	r0, r4, #48
 2218 0272 FFF7FEFF 		bl	ld_dword
 2219              	.LVL300:
 2220 0276 214B     		ldr	r3, .L242+8
 2221 0278 9842     		cmp	r0, r3
 2222 027a 90D1     		bne	.L210
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
 2223              		.loc 1 3177 0
 2224 027c 04F50570 		add	r0, r4, #532
 2225 0280 FFF7FEFF 		bl	ld_dword
 2226              	.LVL301:
 2227 0284 1E4B     		ldr	r3, .L242+12
 2228 0286 9842     		cmp	r0, r3
 2229 0288 89D1     		bne	.L210
3180:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2230              		.loc 1 3180 0
 2231 028a 04F50670 		add	r0, r4, #536
 2232 028e FFF7FEFF 		bl	ld_dword
 2233              	.LVL302:
 2234 0292 2061     		str	r0, [r4, #16]
3183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2235              		.loc 1 3183 0
 2236 0294 04F50770 		add	r0, r4, #540
 2237 0298 FFF7FEFF 		bl	ld_dword
 2238              	.LVL303:
 2239 029c E060     		str	r0, [r4, #12]
 2240 029e 7EE7     		b	.L210
 2241              	.LVL304:
 2242              	.L211:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2243              		.loc 1 3011 0
 2244 02a0 0B20     		movs	r0, #11
 2245              	.LVL305:
 2246              	.L194:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2247              		.loc 1 3206 0
 2248 02a2 04B0     		add	sp, sp, #16
 2249              	.LCFI26:
 2250              		.cfi_remember_state
 2251              		.cfi_def_cfa_offset 32
 2252              		@ sp needed
 2253 02a4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2254              	.LVL306:
 2255              	.L212:
 2256              	.LCFI27:
 2257              		.cfi_restore_state
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2258              		.loc 1 3015 0
 2259 02a8 0C20     		movs	r0, #12
 2260              	.LVL307:
 2261 02aa FAE7     		b	.L194
 2262              	.LVL308:
ARM GAS  /tmp/ccJz23SP.s 			page 149


 2263              	.L213:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2264              		.loc 1 3027 0
 2265 02ac 0020     		movs	r0, #0
 2266              	.LVL309:
 2267 02ae F8E7     		b	.L194
 2268              	.LVL310:
 2269              	.L214:
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2270              		.loc 1 3025 0
 2271 02b0 0A20     		movs	r0, #10
 2272              	.LVL311:
 2273 02b2 F6E7     		b	.L194
 2274              	.LVL312:
 2275              	.L215:
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2276              		.loc 1 3038 0
 2277 02b4 0320     		movs	r0, #3
 2278              	.LVL313:
 2279 02b6 F4E7     		b	.L194
 2280              	.LVL314:
 2281              	.L216:
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2282              		.loc 1 3041 0
 2283 02b8 0A20     		movs	r0, #10
 2284              	.LVL315:
 2285 02ba F2E7     		b	.L194
 2286              	.LVL316:
 2287              	.L220:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2288              		.loc 1 3063 0
 2289 02bc 0120     		movs	r0, #1
 2290              	.LVL317:
 2291 02be F0E7     		b	.L194
 2292              	.LVL318:
 2293              	.L221:
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2294              		.loc 1 3064 0
 2295 02c0 0D20     		movs	r0, #13
 2296              	.LVL319:
 2297 02c2 EEE7     		b	.L194
 2298              	.L222:
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2299              		.loc 1 3116 0
 2300 02c4 0D20     		movs	r0, #13
 2301 02c6 ECE7     		b	.L194
 2302              	.LVL320:
 2303              	.L223:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 2304              		.loc 1 3123 0
 2305 02c8 0D20     		movs	r0, #13
 2306              	.LVL321:
 2307 02ca EAE7     		b	.L194
 2308              	.LVL322:
 2309              	.L224:
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2310              		.loc 1 3127 0
ARM GAS  /tmp/ccJz23SP.s 			page 150


 2311 02cc 0D20     		movs	r0, #13
 2312 02ce E8E7     		b	.L194
 2313              	.L225:
 2314 02d0 0D20     		movs	r0, #13
 2315 02d2 E6E7     		b	.L194
 2316              	.L226:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2317              		.loc 1 3130 0
 2318 02d4 0D20     		movs	r0, #13
 2319 02d6 E4E7     		b	.L194
 2320              	.LVL323:
 2321              	.L227:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2322              		.loc 1 3136 0
 2323 02d8 0D20     		movs	r0, #13
 2324              	.LVL324:
 2325 02da E2E7     		b	.L194
 2326              	.LVL325:
 2327              	.L228:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2328              		.loc 1 3140 0
 2329 02dc 0D20     		movs	r0, #13
 2330              	.LVL326:
 2331 02de E0E7     		b	.L194
 2332              	.LVL327:
 2333              	.L229:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2334              		.loc 1 3142 0
 2335 02e0 0D20     		movs	r0, #13
 2336              	.LVL328:
 2337 02e2 DEE7     		b	.L194
 2338              	.LVL329:
 2339              	.L232:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2340              		.loc 1 3153 0
 2341 02e4 0D20     		movs	r0, #13
 2342 02e6 DCE7     		b	.L194
 2343              	.L233:
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2344              		.loc 1 3154 0
 2345 02e8 0D20     		movs	r0, #13
 2346 02ea DAE7     		b	.L194
 2347              	.LVL330:
 2348              	.L234:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2349              		.loc 1 3158 0
 2350 02ec 0D20     		movs	r0, #13
 2351 02ee D8E7     		b	.L194
 2352              	.LVL331:
 2353              	.L235:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2354              		.loc 1 3163 0
 2355 02f0 0D20     		movs	r0, #13
 2356 02f2 D6E7     		b	.L194
 2357              	.L243:
 2358              		.align	2
 2359              	.L242:
ARM GAS  /tmp/ccJz23SP.s 			page 151


 2360 02f4 00000000 		.word	.LANCHOR2
 2361 02f8 00000000 		.word	.LANCHOR3
 2362 02fc 52526141 		.word	1096897106
 2363 0300 72724161 		.word	1631679090
 2364              		.cfi_endproc
 2365              	.LFE365:
 2367              		.section	.text.put_fat,"ax",%progbits
 2368              		.align	1
 2369              		.syntax unified
 2370              		.thumb
 2371              		.thumb_func
 2372              		.fpu fpv4-sp-d16
 2374              	put_fat:
 2375              	.LFB347:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2376              		.loc 1 1086 0
 2377              		.cfi_startproc
 2378              		@ args = 0, pretend = 0, frame = 0
 2379              		@ frame_needed = 0, uses_anonymous_args = 0
 2380              	.LVL332:
 2381 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2382              	.LCFI28:
 2383              		.cfi_def_cfa_offset 32
 2384              		.cfi_offset 4, -32
 2385              		.cfi_offset 5, -28
 2386              		.cfi_offset 6, -24
 2387              		.cfi_offset 7, -20
 2388              		.cfi_offset 8, -16
 2389              		.cfi_offset 9, -12
 2390              		.cfi_offset 10, -8
 2391              		.cfi_offset 14, -4
 2392              	.LVL333:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2393              		.loc 1 1091 0
 2394 0004 0129     		cmp	r1, #1
 2395 0006 7AD9     		bls	.L253
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2396              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2397 0008 4369     		ldr	r3, [r0, #20]
 2398 000a 8B42     		cmp	r3, r1
 2399 000c 79D9     		bls	.L254
 2400 000e 1746     		mov	r7, r2
 2401 0010 0C46     		mov	r4, r1
 2402 0012 0646     		mov	r6, r0
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2403              		.loc 1 1092 0 is_stmt 1
 2404 0014 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2405 0016 022B     		cmp	r3, #2
 2406 0018 43D0     		beq	.L246
 2407 001a 032B     		cmp	r3, #3
 2408 001c 54D0     		beq	.L247
 2409 001e 012B     		cmp	r3, #1
 2410 0020 01D0     		beq	.L258
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2411              		.loc 1 1089 0
 2412 0022 0225     		movs	r5, #2
 2413 0024 6EE0     		b	.L245
ARM GAS  /tmp/ccJz23SP.s 			page 152


 2414              	.L258:
 2415              	.LVL334:
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2416              		.loc 1 1094 0
 2417 0026 01EB5108 		add	r8, r1, r1, lsr #1
 2418              	.LVL335:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2419              		.loc 1 1095 0
 2420 002a 016A     		ldr	r1, [r0, #32]
 2421              	.LVL336:
 2422 002c 01EB5821 		add	r1, r1, r8, lsr #9
 2423 0030 FFF7FEFF 		bl	move_window
 2424              	.LVL337:
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2425              		.loc 1 1096 0
 2426 0034 0546     		mov	r5, r0
 2427 0036 0028     		cmp	r0, #0
 2428 0038 64D1     		bne	.L245
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2429              		.loc 1 1097 0
 2430 003a 06F1300A 		add	r10, r6, #48
 2431 003e 08F10109 		add	r9, r8, #1
 2432              	.LVL338:
 2433 0042 C8F30808 		ubfx	r8, r8, #0, #9
 2434              	.LVL339:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2435              		.loc 1 1098 0
 2436 0046 14F00104 		ands	r4, r4, #1
 2437              	.LVL340:
 2438 004a 1FD0     		beq	.L249
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2439              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2440 004c 1AF90830 		ldrsb	r3, [r10, r8]
 2441 0050 03F00F03 		and	r3, r3, #15
 2442 0054 3A01     		lsls	r2, r7, #4
 2443 0056 02F47F62 		and	r2, r2, #4080
 2444 005a 1343     		orrs	r3, r3, r2
 2445 005c DBB2     		uxtb	r3, r3
 2446              	.L250:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2447              		.loc 1 1098 0 discriminator 4
 2448 005e 0AF80830 		strb	r3, [r10, r8]
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2449              		.loc 1 1099 0 is_stmt 1 discriminator 4
 2450 0062 0123     		movs	r3, #1
 2451 0064 F370     		strb	r3, [r6, #3]
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2452              		.loc 1 1100 0 discriminator 4
 2453 0066 316A     		ldr	r1, [r6, #32]
 2454 0068 01EB5921 		add	r1, r1, r9, lsr #9
 2455 006c 3046     		mov	r0, r6
 2456              	.LVL341:
 2457 006e FFF7FEFF 		bl	move_window
 2458              	.LVL342:
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
 2459              		.loc 1 1101 0 discriminator 4
 2460 0072 0546     		mov	r5, r0
ARM GAS  /tmp/ccJz23SP.s 			page 153


 2461 0074 0028     		cmp	r0, #0
 2462 0076 45D1     		bne	.L245
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2463              		.loc 1 1102 0
 2464 0078 C9F30809 		ubfx	r9, r9, #0, #9
 2465              	.LVL343:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2466              		.loc 1 1103 0
 2467 007c 44B1     		cbz	r4, .L251
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2468              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2469 007e C7F30712 		ubfx	r2, r7, #4, #8
 2470              	.LVL344:
 2471              	.L252:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2472              		.loc 1 1103 0 discriminator 4
 2473 0082 0AF80920 		strb	r2, [r10, r9]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2474              		.loc 1 1104 0 is_stmt 1 discriminator 4
 2475 0086 0123     		movs	r3, #1
 2476 0088 F370     		strb	r3, [r6, #3]
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2477              		.loc 1 1105 0 discriminator 4
 2478 008a 3BE0     		b	.L245
 2479              	.LVL345:
 2480              	.L249:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2481              		.loc 1 1098 0 discriminator 2
 2482 008c FBB2     		uxtb	r3, r7
 2483 008e E6E7     		b	.L250
 2484              	.LVL346:
 2485              	.L251:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2486              		.loc 1 1103 0 discriminator 2
 2487 0090 1AF90920 		ldrsb	r2, [r10, r9]
 2488 0094 22F00F02 		bic	r2, r2, #15
 2489 0098 C7F30327 		ubfx	r7, r7, #8, #4
 2490              	.LVL347:
 2491 009c 3A43     		orrs	r2, r2, r7
 2492 009e D2B2     		uxtb	r2, r2
 2493 00a0 EFE7     		b	.L252
 2494              	.LVL348:
 2495              	.L246:
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2496              		.loc 1 1108 0
 2497 00a2 016A     		ldr	r1, [r0, #32]
 2498              	.LVL349:
 2499 00a4 01EB1421 		add	r1, r1, r4, lsr #8
 2500 00a8 FFF7FEFF 		bl	move_window
 2501              	.LVL350:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 2502              		.loc 1 1109 0
 2503 00ac 0546     		mov	r5, r0
 2504 00ae 48BB     		cbnz	r0, .L245
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2505              		.loc 1 1110 0
 2506 00b0 06F13000 		add	r0, r6, #48
ARM GAS  /tmp/ccJz23SP.s 			page 154


 2507              	.LVL351:
 2508 00b4 6400     		lsls	r4, r4, #1
 2509              	.LVL352:
 2510 00b6 04F4FF74 		and	r4, r4, #510
 2511 00ba B9B2     		uxth	r1, r7
 2512 00bc 2044     		add	r0, r0, r4
 2513 00be FFF7FEFF 		bl	st_word
 2514              	.LVL353:
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2515              		.loc 1 1111 0
 2516 00c2 0123     		movs	r3, #1
 2517 00c4 F370     		strb	r3, [r6, #3]
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2518              		.loc 1 1112 0
 2519 00c6 1DE0     		b	.L245
 2520              	.LVL354:
 2521              	.L247:
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2522              		.loc 1 1118 0
 2523 00c8 016A     		ldr	r1, [r0, #32]
 2524              	.LVL355:
 2525 00ca 01EBD411 		add	r1, r1, r4, lsr #7
 2526 00ce FFF7FEFF 		bl	move_window
 2527              	.LVL356:
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2528              		.loc 1 1119 0
 2529 00d2 0546     		mov	r5, r0
 2530 00d4 B0B9     		cbnz	r0, .L245
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2531              		.loc 1 1121 0
 2532 00d6 27F07047 		bic	r7, r7, #-268435456
 2533              	.LVL357:
 2534 00da 06F13003 		add	r3, r6, #48
 2535 00de A100     		lsls	r1, r4, #2
 2536 00e0 01F4FE71 		and	r1, r1, #508
 2537 00e4 5C18     		adds	r4, r3, r1
 2538              	.LVL358:
 2539 00e6 2046     		mov	r0, r4
 2540              	.LVL359:
 2541 00e8 FFF7FEFF 		bl	ld_dword
 2542              	.LVL360:
 2543 00ec 00F07041 		and	r1, r0, #-268435456
 2544              	.LVL361:
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2545              		.loc 1 1123 0
 2546 00f0 3943     		orrs	r1, r1, r7
 2547              	.LVL362:
 2548 00f2 2046     		mov	r0, r4
 2549 00f4 FFF7FEFF 		bl	st_dword
 2550              	.LVL363:
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2551              		.loc 1 1124 0
 2552 00f8 0123     		movs	r3, #1
 2553 00fa F370     		strb	r3, [r6, #3]
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2554              		.loc 1 1125 0
 2555 00fc 02E0     		b	.L245
ARM GAS  /tmp/ccJz23SP.s 			page 155


 2556              	.LVL364:
 2557              	.L253:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2558              		.loc 1 1089 0
 2559 00fe 0225     		movs	r5, #2
 2560 0100 00E0     		b	.L245
 2561              	.L254:
 2562 0102 0225     		movs	r5, #2
 2563              	.LVL365:
 2564              	.L245:
1129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2565              		.loc 1 1129 0
 2566 0104 2846     		mov	r0, r5
 2567 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2568              		.cfi_endproc
 2569              	.LFE347:
 2571              		.section	.text.get_fat,"ax",%progbits
 2572              		.align	1
 2573              		.syntax unified
 2574              		.thumb
 2575              		.thumb_func
 2576              		.fpu fpv4-sp-d16
 2578              	get_fat:
 2579              	.LFB346:
1005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2580              		.loc 1 1005 0
 2581              		.cfi_startproc
 2582              		@ args = 0, pretend = 0, frame = 0
 2583              		@ frame_needed = 0, uses_anonymous_args = 0
 2584              	.LVL366:
 2585 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2586              	.LCFI29:
 2587              		.cfi_def_cfa_offset 24
 2588              		.cfi_offset 3, -24
 2589              		.cfi_offset 4, -20
 2590              		.cfi_offset 5, -16
 2591              		.cfi_offset 6, -12
 2592              		.cfi_offset 7, -8
 2593              		.cfi_offset 14, -4
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2594              		.loc 1 1008 0
 2595 0002 0668     		ldr	r6, [r0]
 2596              	.LVL367:
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2597              		.loc 1 1011 0
 2598 0004 0129     		cmp	r1, #1
 2599 0006 53D9     		bls	.L265
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2600              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2601 0008 7369     		ldr	r3, [r6, #20]
 2602 000a 8B42     		cmp	r3, r1
 2603 000c 52D9     		bls	.L266
 2604 000e 0C46     		mov	r4, r1
 2605              	.LVL368:
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2606              		.loc 1 1017 0 is_stmt 1
 2607 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
ARM GAS  /tmp/ccJz23SP.s 			page 156


 2608 0012 022B     		cmp	r3, #2
 2609 0014 2BD0     		beq	.L261
 2610 0016 032B     		cmp	r3, #3
 2611 0018 39D0     		beq	.L262
 2612 001a 012B     		cmp	r3, #1
 2613 001c 01D0     		beq	.L274
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2614              		.loc 1 1065 0
 2615 001e 0120     		movs	r0, #1
 2616              	.LVL369:
 2617 0020 47E0     		b	.L259
 2618              	.LVL370:
 2619              	.L274:
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2620              		.loc 1 1019 0
 2621 0022 01EB5105 		add	r5, r1, r1, lsr #1
 2622              	.LVL371:
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 2623              		.loc 1 1020 0
 2624 0026 316A     		ldr	r1, [r6, #32]
 2625              	.LVL372:
 2626 0028 01EB5521 		add	r1, r1, r5, lsr #9
 2627 002c 3046     		mov	r0, r6
 2628              	.LVL373:
 2629 002e FFF7FEFF 		bl	move_window
 2630              	.LVL374:
 2631 0032 0028     		cmp	r0, #0
 2632 0034 40D1     		bne	.L268
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2633              		.loc 1 1021 0
 2634 0036 6F1C     		adds	r7, r5, #1
 2635              	.LVL375:
 2636 0038 C5F30805 		ubfx	r5, r5, #0, #9
 2637 003c 3544     		add	r5, r5, r6
 2638 003e 95F83050 		ldrb	r5, [r5, #48]	@ zero_extendqisi2
 2639              	.LVL376:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 2640              		.loc 1 1022 0
 2641 0042 316A     		ldr	r1, [r6, #32]
 2642 0044 01EB5721 		add	r1, r1, r7, lsr #9
 2643 0048 3046     		mov	r0, r6
 2644 004a FFF7FEFF 		bl	move_window
 2645              	.LVL377:
 2646 004e B0BB     		cbnz	r0, .L269
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 2647              		.loc 1 1023 0
 2648 0050 C7F30803 		ubfx	r3, r7, #0, #9
 2649 0054 3344     		add	r3, r3, r6
 2650 0056 93F83000 		ldrb	r0, [r3, #48]	@ zero_extendqisi2
 2651 005a 45EA0020 		orr	r0, r5, r0, lsl #8
 2652              	.LVL378:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2653              		.loc 1 1024 0
 2654 005e 14F0010F 		tst	r4, #1
 2655 0062 01D0     		beq	.L264
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2656              		.loc 1 1024 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccJz23SP.s 			page 157


 2657 0064 0009     		lsrs	r0, r0, #4
 2658              	.LVL379:
 2659 0066 24E0     		b	.L259
 2660              	.LVL380:
 2661              	.L264:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2662              		.loc 1 1024 0 discriminator 2
 2663 0068 C0F30B00 		ubfx	r0, r0, #0, #12
 2664              	.LVL381:
 2665 006c 21E0     		b	.L259
 2666              	.LVL382:
 2667              	.L261:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 2668              		.loc 1 1028 0 is_stmt 1
 2669 006e 316A     		ldr	r1, [r6, #32]
 2670              	.LVL383:
 2671 0070 01EB1421 		add	r1, r1, r4, lsr #8
 2672 0074 3046     		mov	r0, r6
 2673              	.LVL384:
 2674 0076 FFF7FEFF 		bl	move_window
 2675              	.LVL385:
 2676 007a 18BB     		cbnz	r0, .L270
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2677              		.loc 1 1029 0
 2678 007c 06F13000 		add	r0, r6, #48
 2679 0080 6100     		lsls	r1, r4, #1
 2680 0082 01F4FF71 		and	r1, r1, #510
 2681 0086 0844     		add	r0, r0, r1
 2682 0088 FFF7FEFF 		bl	ld_word
 2683              	.LVL386:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2684              		.loc 1 1030 0
 2685 008c 11E0     		b	.L259
 2686              	.LVL387:
 2687              	.L262:
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 2688              		.loc 1 1033 0
 2689 008e 316A     		ldr	r1, [r6, #32]
 2690              	.LVL388:
 2691 0090 01EBD411 		add	r1, r1, r4, lsr #7
 2692 0094 3046     		mov	r0, r6
 2693              	.LVL389:
 2694 0096 FFF7FEFF 		bl	move_window
 2695              	.LVL390:
 2696 009a B0B9     		cbnz	r0, .L271
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2697              		.loc 1 1034 0
 2698 009c 3036     		adds	r6, r6, #48
 2699              	.LVL391:
 2700 009e A100     		lsls	r1, r4, #2
 2701 00a0 01F4FE70 		and	r0, r1, #508
 2702 00a4 3044     		add	r0, r0, r6
 2703 00a6 FFF7FEFF 		bl	ld_dword
 2704              	.LVL392:
 2705 00aa 20F07040 		bic	r0, r0, #-268435456
 2706              	.LVL393:
1035:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
ARM GAS  /tmp/ccJz23SP.s 			page 158


 2707              		.loc 1 1035 0
 2708 00ae 00E0     		b	.L259
 2709              	.LVL394:
 2710              	.L265:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2711              		.loc 1 1012 0
 2712 00b0 0120     		movs	r0, #1
 2713              	.LVL395:
 2714              	.L259:
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2715              		.loc 1 1070 0
 2716 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2717              	.LVL396:
 2718              	.L266:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2719              		.loc 1 1012 0
 2720 00b4 0120     		movs	r0, #1
 2721              	.LVL397:
 2722 00b6 FCE7     		b	.L259
 2723              	.LVL398:
 2724              	.L268:
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2725              		.loc 1 1015 0
 2726 00b8 4FF0FF30 		mov	r0, #-1
 2727 00bc F9E7     		b	.L259
 2728              	.LVL399:
 2729              	.L269:
 2730 00be 4FF0FF30 		mov	r0, #-1
 2731 00c2 F6E7     		b	.L259
 2732              	.LVL400:
 2733              	.L270:
 2734 00c4 4FF0FF30 		mov	r0, #-1
 2735 00c8 F3E7     		b	.L259
 2736              	.L271:
 2737 00ca 4FF0FF30 		mov	r0, #-1
1069:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2738              		.loc 1 1069 0
 2739 00ce F0E7     		b	.L259
 2740              		.cfi_endproc
 2741              	.LFE346:
 2743              		.section	.text.dir_sdi,"ax",%progbits
 2744              		.align	1
 2745              		.syntax unified
 2746              		.thumb
 2747              		.thumb_func
 2748              		.fpu fpv4-sp-d16
 2750              	dir_sdi:
 2751              	.LFB351:
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
 2752              		.loc 1 1474 0
 2753              		.cfi_startproc
 2754              		@ args = 0, pretend = 0, frame = 0
 2755              		@ frame_needed = 0, uses_anonymous_args = 0
 2756              	.LVL401:
 2757 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2758              	.LCFI30:
 2759              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccJz23SP.s 			page 159


 2760              		.cfi_offset 4, -24
 2761              		.cfi_offset 5, -20
 2762              		.cfi_offset 6, -16
 2763              		.cfi_offset 7, -12
 2764              		.cfi_offset 8, -8
 2765              		.cfi_offset 14, -4
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2766              		.loc 1 1476 0
 2767 0004 0768     		ldr	r7, [r0]
 2768              	.LVL402:
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2769              		.loc 1 1479 0
 2770 0006 B1F5001F 		cmp	r1, #2097152
 2771 000a 3BD2     		bcs	.L282
 2772 000c 0646     		mov	r6, r0
 2773 000e 0D46     		mov	r5, r1
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2774              		.loc 1 1479 0 is_stmt 0 discriminator 1
 2775 0010 11F01F0F 		tst	r1, #31
 2776 0014 39D1     		bne	.L283
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 2777              		.loc 1 1482 0 is_stmt 1
 2778 0016 7161     		str	r1, [r6, #20]
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 2779              		.loc 1 1483 0
 2780 0018 8468     		ldr	r4, [r0, #8]
 2781              	.LVL403:
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2782              		.loc 1 1484 0
 2783 001a 1CB9     		cbnz	r4, .L277
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2784              		.loc 1 1484 0 is_stmt 0 discriminator 1
 2785 001c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2786 001e 022B     		cmp	r3, #2
 2787 0020 00D9     		bls	.L277
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 2788              		.loc 1 1485 0 is_stmt 1
 2789 0022 7C6A     		ldr	r4, [r7, #36]
 2790              	.LVL404:
 2791              	.L277:
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 2792              		.loc 1 1489 0
 2793 0024 94B9     		cbnz	r4, .L278
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2794              		.loc 1 1490 0
 2795 0026 3B89     		ldrh	r3, [r7, #8]
 2796 0028 B3EB551F 		cmp	r3, r5, lsr #5
 2797 002c 2FD9     		bls	.L284
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2798              		.loc 1 1491 0
 2799 002e 7B6A     		ldr	r3, [r7, #36]
 2800 0030 F361     		str	r3, [r6, #28]
 2801              	.LVL405:
 2802              	.L279:
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 2803              		.loc 1 1503 0
 2804 0032 B461     		str	r4, [r6, #24]
ARM GAS  /tmp/ccJz23SP.s 			page 160


1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2805              		.loc 1 1504 0
 2806 0034 F369     		ldr	r3, [r6, #28]
 2807 0036 93B3     		cbz	r3, .L288
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 2808              		.loc 1 1505 0
 2809 0038 03EB5523 		add	r3, r3, r5, lsr #9
 2810 003c F361     		str	r3, [r6, #28]
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2811              		.loc 1 1506 0
 2812 003e 3037     		adds	r7, r7, #48
 2813              	.LVL406:
 2814 0040 C5F30805 		ubfx	r5, r5, #0, #9
 2815              	.LVL407:
 2816 0044 3D44     		add	r5, r5, r7
 2817 0046 3562     		str	r5, [r6, #32]
1508:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2818              		.loc 1 1508 0
 2819 0048 0020     		movs	r0, #0
 2820 004a 1CE0     		b	.L276
 2821              	.LVL408:
 2822              	.L278:
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 2823              		.loc 1 1494 0
 2824 004c B7F80A80 		ldrh	r8, [r7, #10]
 2825 0050 4FEA4828 		lsl	r8, r8, #9
 2826              	.LVL409:
 2827              	.L280:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2828              		.loc 1 1495 0
 2829 0054 4545     		cmp	r5, r8
 2830 0056 0FD3     		bcc	.L290
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2831              		.loc 1 1496 0
 2832 0058 2146     		mov	r1, r4
 2833 005a 3046     		mov	r0, r6
 2834 005c FFF7FEFF 		bl	get_fat
 2835              	.LVL410:
 2836 0060 0446     		mov	r4, r0
 2837              	.LVL411:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2838              		.loc 1 1497 0
 2839 0062 B0F1FF3F 		cmp	r0, #-1
 2840 0066 14D0     		beq	.L285
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2841              		.loc 1 1498 0
 2842 0068 0128     		cmp	r0, #1
 2843 006a 14D9     		bls	.L286
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2844              		.loc 1 1498 0 is_stmt 0 discriminator 2
 2845 006c 7B69     		ldr	r3, [r7, #20]
 2846 006e 8342     		cmp	r3, r0
 2847 0070 13D9     		bls	.L287
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2848              		.loc 1 1499 0 is_stmt 1
 2849 0072 A5EB0805 		sub	r5, r5, r8
 2850              	.LVL412:
ARM GAS  /tmp/ccJz23SP.s 			page 161


 2851 0076 EDE7     		b	.L280
 2852              	.LVL413:
 2853              	.L290:
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2854              		.loc 1 1501 0
 2855 0078 2146     		mov	r1, r4
 2856 007a 3846     		mov	r0, r7
 2857 007c FFF7FEFF 		bl	clust2sect
 2858              	.LVL414:
 2859 0080 F061     		str	r0, [r6, #28]
 2860 0082 D6E7     		b	.L279
 2861              	.LVL415:
 2862              	.L282:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2863              		.loc 1 1480 0
 2864 0084 0220     		movs	r0, #2
 2865              	.LVL416:
 2866              	.L276:
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2867              		.loc 1 1509 0
 2868 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2869              	.LVL417:
 2870              	.L283:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2871              		.loc 1 1480 0
 2872 008a 0220     		movs	r0, #2
 2873              	.LVL418:
 2874 008c FBE7     		b	.L276
 2875              	.LVL419:
 2876              	.L284:
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2877              		.loc 1 1490 0
 2878 008e 0220     		movs	r0, #2
 2879              	.LVL420:
 2880 0090 F9E7     		b	.L276
 2881              	.LVL421:
 2882              	.L285:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2883              		.loc 1 1497 0
 2884 0092 0120     		movs	r0, #1
 2885              	.LVL422:
 2886 0094 F7E7     		b	.L276
 2887              	.LVL423:
 2888              	.L286:
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2889              		.loc 1 1498 0
 2890 0096 0220     		movs	r0, #2
 2891              	.LVL424:
 2892 0098 F5E7     		b	.L276
 2893              	.LVL425:
 2894              	.L287:
 2895 009a 0220     		movs	r0, #2
 2896              	.LVL426:
 2897 009c F3E7     		b	.L276
 2898              	.LVL427:
 2899              	.L288:
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
ARM GAS  /tmp/ccJz23SP.s 			page 162


 2900              		.loc 1 1504 0
 2901 009e 0220     		movs	r0, #2
 2902 00a0 F1E7     		b	.L276
 2903              		.cfi_endproc
 2904              	.LFE351:
 2906              		.section	.text.create_chain,"ax",%progbits
 2907              		.align	1
 2908              		.syntax unified
 2909              		.thumb
 2910              		.thumb_func
 2911              		.fpu fpv4-sp-d16
 2913              	create_chain:
 2914              	.LFB349:
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 2915              		.loc 1 1355 0
 2916              		.cfi_startproc
 2917              		@ args = 0, pretend = 0, frame = 0
 2918              		@ frame_needed = 0, uses_anonymous_args = 0
 2919              	.LVL428:
 2920 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2921              	.LCFI31:
 2922              		.cfi_def_cfa_offset 24
 2923              		.cfi_offset 4, -24
 2924              		.cfi_offset 5, -20
 2925              		.cfi_offset 6, -16
 2926              		.cfi_offset 7, -12
 2927              		.cfi_offset 8, -8
 2928              		.cfi_offset 14, -4
 2929 0004 0746     		mov	r7, r0
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2930              		.loc 1 1358 0
 2931 0006 0668     		ldr	r6, [r0]
 2932              	.LVL429:
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 2933              		.loc 1 1361 0
 2934 0008 8846     		mov	r8, r1
 2935 000a 31B9     		cbnz	r1, .L292
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 2936              		.loc 1 1362 0
 2937 000c F568     		ldr	r5, [r6, #12]
 2938              	.LVL430:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2939              		.loc 1 1363 0
 2940 000e 8DB1     		cbz	r5, .L301
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2941              		.loc 1 1363 0 is_stmt 0 discriminator 2
 2942 0010 7369     		ldr	r3, [r6, #20]
 2943 0012 AB42     		cmp	r3, r5
 2944 0014 0FD8     		bhi	.L293
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2945              		.loc 1 1363 0
 2946 0016 0125     		movs	r5, #1
 2947              	.LVL431:
 2948 0018 0DE0     		b	.L293
 2949              	.LVL432:
 2950              	.L292:
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
ARM GAS  /tmp/ccJz23SP.s 			page 163


 2951              		.loc 1 1366 0 is_stmt 1
 2952 001a FFF7FEFF 		bl	get_fat
 2953              	.LVL433:
 2954 001e 0346     		mov	r3, r0
 2955              	.LVL434:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2956              		.loc 1 1367 0
 2957 0020 0128     		cmp	r0, #1
 2958 0022 47D9     		bls	.L303
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2959              		.loc 1 1368 0
 2960 0024 B0F1FF3F 		cmp	r0, #-1
 2961 0028 49D0     		beq	.L291
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 2962              		.loc 1 1369 0
 2963 002a 7269     		ldr	r2, [r6, #20]
 2964 002c 8242     		cmp	r2, r0
 2965 002e 46D8     		bhi	.L291
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2966              		.loc 1 1370 0
 2967 0030 4546     		mov	r5, r8
 2968 0032 00E0     		b	.L293
 2969              	.LVL435:
 2970              	.L301:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2971              		.loc 1 1363 0
 2972 0034 0125     		movs	r5, #1
 2973              	.LVL436:
 2974              	.L293:
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 2975              		.loc 1 1400 0
 2976 0036 2C46     		mov	r4, r5
 2977 0038 0CE0     		b	.L297
 2978              	.LVL437:
 2979              	.L295:
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 2980              		.loc 1 1407 0
 2981 003a 2146     		mov	r1, r4
 2982 003c 3846     		mov	r0, r7
 2983 003e FFF7FEFF 		bl	get_fat
 2984              	.LVL438:
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 2985              		.loc 1 1408 0
 2986 0042 0346     		mov	r3, r0
 2987 0044 70B1     		cbz	r0, .L296
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 2988              		.loc 1 1409 0
 2989 0046 0128     		cmp	r0, #1
 2990 0048 39D0     		beq	.L291
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 2991              		.loc 1 1409 0 is_stmt 0 discriminator 2
 2992 004a B0F1FF3F 		cmp	r0, #-1
 2993 004e 36D0     		beq	.L291
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2994              		.loc 1 1410 0 is_stmt 1
 2995 0050 AC42     		cmp	r4, r5
 2996 0052 33D0     		beq	.L308
ARM GAS  /tmp/ccJz23SP.s 			page 164


 2997              	.LVL439:
 2998              	.L297:
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 2999              		.loc 1 1402 0
 3000 0054 0134     		adds	r4, r4, #1
 3001              	.LVL440:
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
 3002              		.loc 1 1403 0
 3003 0056 7369     		ldr	r3, [r6, #20]
 3004 0058 A342     		cmp	r3, r4
 3005 005a EED8     		bhi	.L295
 3006              	.LVL441:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3007              		.loc 1 1405 0
 3008 005c 012D     		cmp	r5, #1
 3009 005e 2BD9     		bls	.L304
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 3010              		.loc 1 1404 0
 3011 0060 0224     		movs	r4, #2
 3012 0062 EAE7     		b	.L295
 3013              	.LVL442:
 3014              	.L296:
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
 3015              		.loc 1 1412 0
 3016 0064 4FF0FF32 		mov	r2, #-1
 3017 0068 2146     		mov	r1, r4
 3018 006a 3046     		mov	r0, r6
 3019              	.LVL443:
 3020 006c FFF7FEFF 		bl	put_fat
 3021              	.LVL444:
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 3022              		.loc 1 1413 0
 3023 0070 0346     		mov	r3, r0
 3024 0072 10B9     		cbnz	r0, .L298
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 3025              		.loc 1 1413 0 is_stmt 0 discriminator 1
 3026 0074 B8F1000F 		cmp	r8, #0
 3027 0078 0ED1     		bne	.L309
 3028              	.LVL445:
 3029              	.L298:
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
 3030              		.loc 1 1418 0 is_stmt 1
 3031 007a A3B9     		cbnz	r3, .L299
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 3032              		.loc 1 1419 0
 3033 007c F460     		str	r4, [r6, #12]
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3034              		.loc 1 1420 0
 3035 007e 3269     		ldr	r2, [r6, #16]
 3036 0080 7369     		ldr	r3, [r6, #20]
 3037              	.LVL446:
 3038 0082 023B     		subs	r3, r3, #2
 3039 0084 9A42     		cmp	r2, r3
 3040 0086 01D8     		bhi	.L300
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3041              		.loc 1 1420 0 is_stmt 0 discriminator 1
 3042 0088 013A     		subs	r2, r2, #1
ARM GAS  /tmp/ccJz23SP.s 			page 165


 3043 008a 3261     		str	r2, [r6, #16]
 3044              	.L300:
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 3045              		.loc 1 1421 0 is_stmt 1
 3046 008c 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 3047 008e 43F00103 		orr	r3, r3, #1
 3048 0092 3371     		strb	r3, [r6, #4]
 3049 0094 2346     		mov	r3, r4
 3050 0096 12E0     		b	.L291
 3051              	.LVL447:
 3052              	.L309:
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3053              		.loc 1 1414 0
 3054 0098 2246     		mov	r2, r4
 3055 009a 4146     		mov	r1, r8
 3056 009c 3046     		mov	r0, r6
 3057              	.LVL448:
 3058 009e FFF7FEFF 		bl	put_fat
 3059              	.LVL449:
 3060 00a2 0346     		mov	r3, r0
 3061              	.LVL450:
 3062 00a4 E9E7     		b	.L298
 3063              	.L299:
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3064              		.loc 1 1423 0
 3065 00a6 012B     		cmp	r3, #1
 3066 00a8 01D0     		beq	.L310
 3067 00aa 0123     		movs	r3, #1
 3068              	.LVL451:
 3069 00ac 07E0     		b	.L291
 3070              	.LVL452:
 3071              	.L310:
 3072 00ae 4FF0FF33 		mov	r3, #-1
 3073              	.LVL453:
 3074 00b2 04E0     		b	.L291
 3075              	.LVL454:
 3076              	.L303:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3077              		.loc 1 1367 0
 3078 00b4 0123     		movs	r3, #1
 3079 00b6 02E0     		b	.L291
 3080              	.LVL455:
 3081              	.L304:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3082              		.loc 1 1405 0
 3083 00b8 0023     		movs	r3, #0
 3084 00ba 00E0     		b	.L291
 3085              	.LVL456:
 3086              	.L308:
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3087              		.loc 1 1410 0
 3088 00bc 0023     		movs	r3, #0
 3089              	.LVL457:
 3090              	.L291:
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3091              		.loc 1 1427 0
 3092 00be 1846     		mov	r0, r3
ARM GAS  /tmp/ccJz23SP.s 			page 166


 3093 00c0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3094              		.cfi_endproc
 3095              	.LFE349:
 3097              		.section	.text.remove_chain,"ax",%progbits
 3098              		.align	1
 3099              		.syntax unified
 3100              		.thumb
 3101              		.thumb_func
 3102              		.fpu fpv4-sp-d16
 3104              	remove_chain:
 3105              	.LFB348:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 3106              		.loc 1 1276 0
 3107              		.cfi_startproc
 3108              		@ args = 0, pretend = 0, frame = 0
 3109              		@ frame_needed = 0, uses_anonymous_args = 0
 3110              	.LVL458:
 3111 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3112              	.LCFI32:
 3113              		.cfi_def_cfa_offset 24
 3114              		.cfi_offset 3, -24
 3115              		.cfi_offset 4, -20
 3116              		.cfi_offset 5, -16
 3117              		.cfi_offset 6, -12
 3118              		.cfi_offset 7, -8
 3119              		.cfi_offset 14, -4
 3120 0002 0E46     		mov	r6, r1
 3121              	.LVL459:
1279:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
 3122              		.loc 1 1279 0
 3123 0004 0568     		ldr	r5, [r0]
 3124              	.LVL460:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3125              		.loc 1 1287 0
 3126 0006 0129     		cmp	r1, #1
 3127 0008 2ED9     		bls	.L316
 3128 000a 0746     		mov	r7, r0
 3129 000c 1146     		mov	r1, r2
 3130              	.LVL461:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3131              		.loc 1 1287 0 is_stmt 0 discriminator 2
 3132 000e 6B69     		ldr	r3, [r5, #20]
 3133 0010 B342     		cmp	r3, r6
 3134 0012 2CD9     		bls	.L317
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3135              		.loc 1 1290 0 is_stmt 1
 3136 0014 52B1     		cbz	r2, .L315
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
 3137              		.loc 1 1291 0
 3138 0016 4FF0FF32 		mov	r2, #-1
 3139              	.LVL462:
 3140 001a 2846     		mov	r0, r5
 3141              	.LVL463:
 3142 001c FFF7FEFF 		bl	put_fat
 3143              	.LVL464:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3144              		.loc 1 1292 0
ARM GAS  /tmp/ccJz23SP.s 			page 167


 3145 0020 8446     		mov	ip, r0
 3146 0022 18B1     		cbz	r0, .L315
 3147 0024 25E0     		b	.L312
 3148              	.LVL465:
 3149              	.L314:
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3150              		.loc 1 1327 0
 3151 0026 2646     		mov	r6, r4
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3152              		.loc 1 1328 0
 3153 0028 A242     		cmp	r2, r4
 3154 002a 22D9     		bls	.L312
 3155              	.LVL466:
 3156              	.L315:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3157              		.loc 1 1297 0
 3158 002c 3146     		mov	r1, r6
 3159 002e 3846     		mov	r0, r7
 3160 0030 FFF7FEFF 		bl	get_fat
 3161              	.LVL467:
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3162              		.loc 1 1298 0
 3163 0034 0446     		mov	r4, r0
 3164 0036 F0B1     		cbz	r0, .L318
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3165              		.loc 1 1299 0
 3166 0038 0128     		cmp	r0, #1
 3167 003a 1FD0     		beq	.L319
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3168              		.loc 1 1300 0
 3169 003c B0F1FF3F 		cmp	r0, #-1
 3170 0040 1FD0     		beq	.L320
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
 3171              		.loc 1 1302 0
 3172 0042 0022     		movs	r2, #0
 3173 0044 3146     		mov	r1, r6
 3174 0046 2846     		mov	r0, r5
 3175              	.LVL468:
 3176 0048 FFF7FEFF 		bl	put_fat
 3177              	.LVL469:
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3178              		.loc 1 1303 0
 3179 004c 8446     		mov	ip, r0
 3180 004e 80B9     		cbnz	r0, .L312
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
 3181              		.loc 1 1305 0
 3182 0050 2B69     		ldr	r3, [r5, #16]
 3183 0052 6A69     		ldr	r2, [r5, #20]
 3184 0054 911E     		subs	r1, r2, #2
 3185 0056 8B42     		cmp	r3, r1
 3186 0058 E5D2     		bcs	.L314
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3187              		.loc 1 1306 0
 3188 005a 0133     		adds	r3, r3, #1
 3189 005c 2B61     		str	r3, [r5, #16]
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3190              		.loc 1 1307 0
ARM GAS  /tmp/ccJz23SP.s 			page 168


 3191 005e 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 3192 0060 43F00103 		orr	r3, r3, #1
 3193 0064 2B71     		strb	r3, [r5, #4]
 3194 0066 DEE7     		b	.L314
 3195              	.LVL470:
 3196              	.L316:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3197              		.loc 1 1287 0
 3198 0068 4FF0020C 		mov	ip, #2
 3199 006c 01E0     		b	.L312
 3200              	.LVL471:
 3201              	.L317:
 3202 006e 4FF0020C 		mov	ip, #2
 3203              	.LVL472:
 3204              	.L312:
1342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3205              		.loc 1 1342 0
 3206 0072 6046     		mov	r0, ip
 3207 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3208              	.LVL473:
 3209              	.L318:
1341:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3210              		.loc 1 1341 0
 3211 0076 4FF0000C 		mov	ip, #0
 3212 007a FAE7     		b	.L312
 3213              	.L319:
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3214              		.loc 1 1299 0
 3215 007c 4FF0020C 		mov	ip, #2
 3216 0080 F7E7     		b	.L312
 3217              	.L320:
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3218              		.loc 1 1300 0
 3219 0082 4FF0010C 		mov	ip, #1
 3220 0086 F4E7     		b	.L312
 3221              		.cfi_endproc
 3222              	.LFE348:
 3224              		.section	.text.dir_remove,"ax",%progbits
 3225              		.align	1
 3226              		.syntax unified
 3227              		.thumb
 3228              		.thumb_func
 3229              		.fpu fpv4-sp-d16
 3231              	dir_remove:
 3232              	.LFB359:
2399:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3233              		.loc 1 2399 0
 3234              		.cfi_startproc
 3235              		@ args = 0, pretend = 0, frame = 0
 3236              		@ frame_needed = 0, uses_anonymous_args = 0
 3237              	.LVL474:
 3238 0000 38B5     		push	{r3, r4, r5, lr}
 3239              	.LCFI33:
 3240              		.cfi_def_cfa_offset 16
 3241              		.cfi_offset 3, -16
 3242              		.cfi_offset 4, -12
 3243              		.cfi_offset 5, -8
ARM GAS  /tmp/ccJz23SP.s 			page 169


 3244              		.cfi_offset 14, -4
 3245 0002 0446     		mov	r4, r0
2401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3246              		.loc 1 2401 0
 3247 0004 0568     		ldr	r5, [r0]
 3248              	.LVL475:
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3249              		.loc 1 2424 0
 3250 0006 C169     		ldr	r1, [r0, #28]
 3251 0008 2846     		mov	r0, r5
 3252              	.LVL476:
 3253 000a FFF7FEFF 		bl	move_window
 3254              	.LVL477:
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
 3255              		.loc 1 2425 0
 3256 000e 0346     		mov	r3, r0
 3257 0010 20B9     		cbnz	r0, .L323
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
 3258              		.loc 1 2426 0
 3259 0012 226A     		ldr	r2, [r4, #32]
 3260 0014 E521     		movs	r1, #229
 3261 0016 1170     		strb	r1, [r2]
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3262              		.loc 1 2427 0
 3263 0018 0122     		movs	r2, #1
 3264 001a EA70     		strb	r2, [r5, #3]
 3265              	.L323:
2432:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3266              		.loc 1 2432 0
 3267 001c 1846     		mov	r0, r3
 3268              	.LVL478:
 3269 001e 38BD     		pop	{r3, r4, r5, pc}
 3270              		.cfi_endproc
 3271              	.LFE359:
 3273              		.section	.text.dir_next,"ax",%progbits
 3274              		.align	1
 3275              		.syntax unified
 3276              		.thumb
 3277              		.thumb_func
 3278              		.fpu fpv4-sp-d16
 3280              	dir_next:
 3281              	.LFB352:
1523:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
 3282              		.loc 1 1523 0
 3283              		.cfi_startproc
 3284              		@ args = 0, pretend = 0, frame = 0
 3285              		@ frame_needed = 0, uses_anonymous_args = 0
 3286              	.LVL479:
 3287 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3288              	.LCFI34:
 3289              		.cfi_def_cfa_offset 32
 3290              		.cfi_offset 3, -32
 3291              		.cfi_offset 4, -28
 3292              		.cfi_offset 5, -24
 3293              		.cfi_offset 6, -20
 3294              		.cfi_offset 7, -16
 3295              		.cfi_offset 8, -12
ARM GAS  /tmp/ccJz23SP.s 			page 170


 3296              		.cfi_offset 9, -8
 3297              		.cfi_offset 14, -4
1525:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3298              		.loc 1 1525 0
 3299 0004 0668     		ldr	r6, [r0]
 3300              	.LVL480:
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 3301              		.loc 1 1530 0
 3302 0006 4569     		ldr	r5, [r0, #20]
 3303              	.LVL481:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3304              		.loc 1 1531 0
 3305 0008 C369     		ldr	r3, [r0, #28]
 3306 000a 002B     		cmp	r3, #0
 3307 000c 6ED0     		beq	.L333
 3308 000e 2035     		adds	r5, r5, #32
 3309              	.LVL482:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3310              		.loc 1 1531 0 is_stmt 0 discriminator 2
 3311 0010 B5F5001F 		cmp	r5, #2097152
 3312 0014 6CD2     		bcs	.L334
 3313 0016 8846     		mov	r8, r1
 3314 0018 0446     		mov	r4, r0
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
 3315              		.loc 1 1533 0 is_stmt 1
 3316 001a C5F30807 		ubfx	r7, r5, #0, #9
 3317 001e 3FB9     		cbnz	r7, .L327
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3318              		.loc 1 1534 0
 3319 0020 0133     		adds	r3, r3, #1
 3320 0022 C361     		str	r3, [r0, #28]
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 3321              		.loc 1 1536 0
 3322 0024 8169     		ldr	r1, [r0, #24]
 3323              	.LVL483:
 3324 0026 79B9     		cbnz	r1, .L328
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 3325              		.loc 1 1537 0
 3326 0028 3389     		ldrh	r3, [r6, #8]
 3327 002a B3EB551F 		cmp	r3, r5, lsr #5
 3328 002e 07D9     		bls	.L343
 3329              	.LVL484:
 3330              	.L327:
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3331              		.loc 1 1574 0
 3332 0030 6561     		str	r5, [r4, #20]
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3333              		.loc 1 1575 0
 3334 0032 06F13003 		add	r3, r6, #48
 3335 0036 3B44     		add	r3, r3, r7
 3336 0038 2362     		str	r3, [r4, #32]
1577:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3337              		.loc 1 1577 0
 3338 003a 0020     		movs	r0, #0
 3339              	.LVL485:
 3340              	.L326:
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccJz23SP.s 			page 171


 3341              		.loc 1 1578 0
 3342 003c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3343              	.LVL486:
 3344              	.L343:
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3345              		.loc 1 1538 0
 3346 0040 0023     		movs	r3, #0
 3347 0042 C361     		str	r3, [r0, #28]
 3348 0044 0420     		movs	r0, #4
 3349              	.LVL487:
 3350 0046 F9E7     		b	.L326
 3351              	.LVL488:
 3352              	.L328:
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 3353              		.loc 1 1542 0
 3354 0048 7389     		ldrh	r3, [r6, #10]
 3355 004a 013B     		subs	r3, r3, #1
 3356 004c 13EA5523 		ands	r3, r3, r5, lsr #9
 3357 0050 EED1     		bne	.L327
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 3358              		.loc 1 1543 0
 3359 0052 FFF7FEFF 		bl	get_fat
 3360              	.LVL489:
 3361 0056 8146     		mov	r9, r0
 3362              	.LVL490:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3363              		.loc 1 1544 0
 3364 0058 0128     		cmp	r0, #1
 3365 005a 4BD9     		bls	.L335
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3366              		.loc 1 1545 0
 3367 005c B0F1FF3F 		cmp	r0, #-1
 3368 0060 4AD0     		beq	.L336
1546:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3369              		.loc 1 1546 0
 3370 0062 7369     		ldr	r3, [r6, #20]
 3371 0064 8342     		cmp	r3, r0
 3372 0066 39D8     		bhi	.L329
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3373              		.loc 1 1548 0
 3374 0068 B8F1000F 		cmp	r8, #0
 3375 006c 11D0     		beq	.L344
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3376              		.loc 1 1551 0
 3377 006e A169     		ldr	r1, [r4, #24]
 3378 0070 2046     		mov	r0, r4
 3379              	.LVL491:
 3380 0072 FFF7FEFF 		bl	create_chain
 3381              	.LVL492:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3382              		.loc 1 1552 0
 3383 0076 8146     		mov	r9, r0
 3384 0078 0028     		cmp	r0, #0
 3385 007a 3FD0     		beq	.L337
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3386              		.loc 1 1553 0
 3387 007c 0128     		cmp	r0, #1
ARM GAS  /tmp/ccJz23SP.s 			page 172


 3388 007e 3FD0     		beq	.L338
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3389              		.loc 1 1554 0
 3390 0080 B0F1FF3F 		cmp	r0, #-1
 3391 0084 3ED0     		beq	.L339
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3392              		.loc 1 1557 0
 3393 0086 3046     		mov	r0, r6
 3394              	.LVL493:
 3395 0088 FFF7FEFF 		bl	sync_window
 3396              	.LVL494:
 3397 008c 28B1     		cbz	r0, .L345
 3398 008e 0120     		movs	r0, #1
 3399 0090 D4E7     		b	.L326
 3400              	.LVL495:
 3401              	.L344:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3402              		.loc 1 1549 0
 3403 0092 0023     		movs	r3, #0
 3404 0094 E361     		str	r3, [r4, #28]
 3405 0096 0420     		movs	r0, #4
 3406              	.LVL496:
 3407 0098 D0E7     		b	.L326
 3408              	.L345:
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 3409              		.loc 1 1558 0
 3410 009a 4FF40072 		mov	r2, #512
 3411 009e 0021     		movs	r1, #0
 3412 00a0 06F13000 		add	r0, r6, #48
 3413 00a4 FFF7FEFF 		bl	mem_set
 3414              	.LVL497:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3415              		.loc 1 1559 0
 3416 00a8 4946     		mov	r1, r9
 3417 00aa 3046     		mov	r0, r6
 3418 00ac FFF7FEFF 		bl	clust2sect
 3419              	.LVL498:
 3420 00b0 F062     		str	r0, [r6, #44]
 3421 00b2 4FF00008 		mov	r8, #0
 3422              	.LVL499:
 3423              	.L331:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3424              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3425 00b6 7389     		ldrh	r3, [r6, #10]
 3426 00b8 9845     		cmp	r8, r3
 3427 00ba 0BD2     		bcs	.L346
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 3428              		.loc 1 1560 0 is_stmt 1
 3429 00bc 0123     		movs	r3, #1
 3430 00be F370     		strb	r3, [r6, #3]
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3431              		.loc 1 1561 0
 3432 00c0 3046     		mov	r0, r6
 3433 00c2 FFF7FEFF 		bl	sync_window
 3434              	.LVL500:
 3435 00c6 F8B9     		cbnz	r0, .L341
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
ARM GAS  /tmp/ccJz23SP.s 			page 173


 3436              		.loc 1 1559 0 discriminator 2
 3437 00c8 08F10108 		add	r8, r8, #1
 3438              	.LVL501:
 3439 00cc F36A     		ldr	r3, [r6, #44]
 3440 00ce 0133     		adds	r3, r3, #1
 3441 00d0 F362     		str	r3, [r6, #44]
 3442 00d2 F0E7     		b	.L331
 3443              	.L346:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3444              		.loc 1 1563 0
 3445 00d4 F36A     		ldr	r3, [r6, #44]
 3446 00d6 A3EB0803 		sub	r3, r3, r8
 3447 00da F362     		str	r3, [r6, #44]
 3448              	.LVL502:
 3449              	.L329:
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 3450              		.loc 1 1569 0
 3451 00dc C4F81890 		str	r9, [r4, #24]
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3452              		.loc 1 1570 0
 3453 00e0 4946     		mov	r1, r9
 3454 00e2 3046     		mov	r0, r6
 3455 00e4 FFF7FEFF 		bl	clust2sect
 3456              	.LVL503:
 3457 00e8 E061     		str	r0, [r4, #28]
 3458 00ea A1E7     		b	.L327
 3459              	.LVL504:
 3460              	.L333:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3461              		.loc 1 1531 0
 3462 00ec 0420     		movs	r0, #4
 3463              	.LVL505:
 3464 00ee A5E7     		b	.L326
 3465              	.LVL506:
 3466              	.L334:
 3467 00f0 0420     		movs	r0, #4
 3468              	.LVL507:
 3469 00f2 A3E7     		b	.L326
 3470              	.LVL508:
 3471              	.L335:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3472              		.loc 1 1544 0
 3473 00f4 0220     		movs	r0, #2
 3474              	.LVL509:
 3475 00f6 A1E7     		b	.L326
 3476              	.LVL510:
 3477              	.L336:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3478              		.loc 1 1545 0
 3479 00f8 0120     		movs	r0, #1
 3480              	.LVL511:
 3481 00fa 9FE7     		b	.L326
 3482              	.LVL512:
 3483              	.L337:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3484              		.loc 1 1552 0
 3485 00fc 0720     		movs	r0, #7
ARM GAS  /tmp/ccJz23SP.s 			page 174


 3486              	.LVL513:
 3487 00fe 9DE7     		b	.L326
 3488              	.LVL514:
 3489              	.L338:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3490              		.loc 1 1553 0
 3491 0100 0220     		movs	r0, #2
 3492              	.LVL515:
 3493 0102 9BE7     		b	.L326
 3494              	.LVL516:
 3495              	.L339:
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3496              		.loc 1 1554 0
 3497 0104 0120     		movs	r0, #1
 3498              	.LVL517:
 3499 0106 99E7     		b	.L326
 3500              	.LVL518:
 3501              	.L341:
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3502              		.loc 1 1561 0
 3503 0108 0120     		movs	r0, #1
 3504 010a 97E7     		b	.L326
 3505              		.cfi_endproc
 3506              	.LFE352:
 3508              		.section	.text.dir_find,"ax",%progbits
 3509              		.align	1
 3510              		.syntax unified
 3511              		.thumb
 3512              		.thumb_func
 3513              		.fpu fpv4-sp-d16
 3515              	dir_find:
 3516              	.LFB357:
2213:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3517              		.loc 1 2213 0
 3518              		.cfi_startproc
 3519              		@ args = 0, pretend = 0, frame = 0
 3520              		@ frame_needed = 0, uses_anonymous_args = 0
 3521              	.LVL519:
 3522 0000 70B5     		push	{r4, r5, r6, lr}
 3523              	.LCFI35:
 3524              		.cfi_def_cfa_offset 16
 3525              		.cfi_offset 4, -16
 3526              		.cfi_offset 5, -12
 3527              		.cfi_offset 6, -8
 3528              		.cfi_offset 14, -4
 3529 0002 0446     		mov	r4, r0
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
 3530              		.loc 1 2215 0
 3531 0004 0668     		ldr	r6, [r0]
 3532              	.LVL520:
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 3533              		.loc 1 2221 0
 3534 0006 0021     		movs	r1, #0
 3535 0008 FFF7FEFF 		bl	dir_sdi
 3536              	.LVL521:
2222:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3537              		.loc 1 2222 0
ARM GAS  /tmp/ccJz23SP.s 			page 175


 3538 000c 0546     		mov	r5, r0
 3539 000e 40B1     		cbz	r0, .L350
 3540              	.LVL522:
 3541              	.L348:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3542              		.loc 1 2281 0
 3543 0010 2846     		mov	r0, r5
 3544 0012 70BD     		pop	{r4, r5, r6, pc}
 3545              	.LVL523:
 3546              	.L349:
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 3547              		.loc 1 2277 0
 3548 0014 0021     		movs	r1, #0
 3549 0016 2046     		mov	r0, r4
 3550 0018 FFF7FEFF 		bl	dir_next
 3551              	.LVL524:
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3552              		.loc 1 2278 0
 3553 001c 0546     		mov	r5, r0
 3554 001e 0028     		cmp	r0, #0
 3555 0020 F6D1     		bne	.L348
 3556              	.L350:
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3557              		.loc 1 2248 0
 3558 0022 E169     		ldr	r1, [r4, #28]
 3559 0024 3046     		mov	r0, r6
 3560              	.LVL525:
 3561 0026 FFF7FEFF 		bl	move_window
 3562              	.LVL526:
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
 3563              		.loc 1 2249 0
 3564 002a 0546     		mov	r5, r0
 3565 002c 0028     		cmp	r0, #0
 3566 002e EFD1     		bne	.L348
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3567              		.loc 1 2250 0
 3568 0030 206A     		ldr	r0, [r4, #32]
 3569              	.LVL527:
 3570 0032 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3571              	.LVL528:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3572              		.loc 1 2251 0
 3573 0034 7BB1     		cbz	r3, .L351
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 3574              		.loc 1 2274 0
 3575 0036 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3576              	.LVL529:
 3577 0038 03F03F03 		and	r3, r3, #63
 3578 003c A371     		strb	r3, [r4, #6]
 3579              	.LVL530:
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3580              		.loc 1 2275 0
 3581 003e C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3582 0040 13F0080F 		tst	r3, #8
 3583 0044 E6D1     		bne	.L349
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3584              		.loc 1 2275 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccJz23SP.s 			page 176


 3585 0046 0B22     		movs	r2, #11
 3586 0048 04F12401 		add	r1, r4, #36
 3587 004c FFF7FEFF 		bl	mem_cmp
 3588              	.LVL531:
 3589 0050 0028     		cmp	r0, #0
 3590 0052 DFD1     		bne	.L349
 3591 0054 DCE7     		b	.L348
 3592              	.LVL532:
 3593              	.L351:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3594              		.loc 1 2251 0 is_stmt 1
 3595 0056 0425     		movs	r5, #4
 3596 0058 DAE7     		b	.L348
 3597              		.cfi_endproc
 3598              	.LFE357:
 3600              		.section	.text.follow_path,"ax",%progbits
 3601              		.align	1
 3602              		.syntax unified
 3603              		.thumb
 3604              		.thumb_func
 3605              		.fpu fpv4-sp-d16
 3607              	follow_path:
 3608              	.LFB362:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3609              		.loc 1 2817 0
 3610              		.cfi_startproc
 3611              		@ args = 0, pretend = 0, frame = 8
 3612              		@ frame_needed = 0, uses_anonymous_args = 0
 3613              	.LVL533:
 3614 0000 30B5     		push	{r4, r5, lr}
 3615              	.LCFI36:
 3616              		.cfi_def_cfa_offset 12
 3617              		.cfi_offset 4, -12
 3618              		.cfi_offset 5, -8
 3619              		.cfi_offset 14, -4
 3620 0002 83B0     		sub	sp, sp, #12
 3621              	.LCFI37:
 3622              		.cfi_def_cfa_offset 24
 3623 0004 0446     		mov	r4, r0
 3624 0006 0191     		str	r1, [sp, #4]
 3625              	.LVL534:
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3626              		.loc 1 2821 0
 3627 0008 0568     		ldr	r5, [r0]
 3628              	.LVL535:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3629              		.loc 1 2830 0
 3630 000a 01E0     		b	.L354
 3631              	.L355:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3632              		.loc 1 2830 0 is_stmt 0 discriminator 4
 3633 000c 0133     		adds	r3, r3, #1
 3634 000e 0193     		str	r3, [sp, #4]
 3635              	.L354:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3636              		.loc 1 2830 0 discriminator 1
 3637 0010 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccJz23SP.s 			page 177


 3638 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3639 0014 2F2A     		cmp	r2, #47
 3640 0016 F9D0     		beq	.L355
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3641              		.loc 1 2830 0 discriminator 3
 3642 0018 5C2A     		cmp	r2, #92
 3643 001a F7D0     		beq	.L355
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3644              		.loc 1 2831 0 is_stmt 1
 3645 001c 0022     		movs	r2, #0
 3646 001e A260     		str	r2, [r4, #8]
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 3647              		.loc 1 2850 0
 3648 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3649 0022 1F2B     		cmp	r3, #31
 3650 0024 1ED9     		bls	.L362
 3651              	.LVL536:
 3652              	.L356:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3653              		.loc 1 2856 0
 3654 0026 01A9     		add	r1, sp, #4
 3655 0028 2046     		mov	r0, r4
 3656 002a FFF7FEFF 		bl	create_name
 3657              	.LVL537:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 3658              		.loc 1 2857 0
 3659 002e 0346     		mov	r3, r0
 3660 0030 00BB     		cbnz	r0, .L357
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 3661              		.loc 1 2858 0
 3662 0032 2046     		mov	r0, r4
 3663              	.LVL538:
 3664 0034 FFF7FEFF 		bl	dir_find
 3665              	.LVL539:
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3666              		.loc 1 2859 0
 3667 0038 94F82F20 		ldrb	r2, [r4, #47]	@ zero_extendqisi2
 3668              	.LVL540:
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3669              		.loc 1 2860 0
 3670 003c 0346     		mov	r3, r0
 3671 003e E0B9     		cbnz	r0, .L363
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
 3672              		.loc 1 2872 0
 3673 0040 12F0040F 		tst	r2, #4
 3674 0044 16D1     		bne	.L357
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 3675              		.loc 1 2874 0
 3676 0046 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3677 0048 13F0100F 		tst	r3, #16
 3678 004c 1CD0     		beq	.L360
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3679              		.loc 1 2888 0
 3680 004e 05F13001 		add	r1, r5, #48
 3681 0052 6369     		ldr	r3, [r4, #20]
 3682 0054 C3F30803 		ubfx	r3, r3, #0, #9
 3683 0058 1944     		add	r1, r1, r3
ARM GAS  /tmp/ccJz23SP.s 			page 178


 3684 005a 2846     		mov	r0, r5
 3685              	.LVL541:
 3686 005c FFF7FEFF 		bl	ld_clust
 3687              	.LVL542:
 3688 0060 A060     		str	r0, [r4, #8]
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3689              		.loc 1 2856 0
 3690 0062 E0E7     		b	.L356
 3691              	.LVL543:
 3692              	.L362:
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 3693              		.loc 1 2851 0
 3694 0064 8023     		movs	r3, #128
 3695 0066 84F82F30 		strb	r3, [r4, #47]
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3696              		.loc 1 2852 0
 3697 006a 1146     		mov	r1, r2
 3698              	.LVL544:
 3699 006c 2046     		mov	r0, r4
 3700              	.LVL545:
 3701 006e FFF7FEFF 		bl	dir_sdi
 3702              	.LVL546:
 3703 0072 0346     		mov	r3, r0
 3704              	.LVL547:
 3705              	.L357:
2894:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3706              		.loc 1 2894 0
 3707 0074 1846     		mov	r0, r3
 3708 0076 03B0     		add	sp, sp, #12
 3709              	.LCFI38:
 3710              		.cfi_remember_state
 3711              		.cfi_def_cfa_offset 12
 3712              		@ sp needed
 3713 0078 30BD     		pop	{r4, r5, pc}
 3714              	.LVL548:
 3715              	.L363:
 3716              	.LCFI39:
 3717              		.cfi_restore_state
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 3718              		.loc 1 2861 0
 3719 007a 0428     		cmp	r0, #4
 3720 007c FAD1     		bne	.L357
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3721              		.loc 1 2867 0
 3722 007e 12F0040F 		tst	r2, #4
 3723 0082 F7D1     		bne	.L357
 3724 0084 0523     		movs	r3, #5
 3725 0086 F5E7     		b	.L357
 3726              	.L360:
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3727              		.loc 1 2875 0
 3728 0088 0523     		movs	r3, #5
 3729 008a F3E7     		b	.L357
 3730              		.cfi_endproc
 3731              	.LFE362:
 3733              		.section	.text.dir_alloc,"ax",%progbits
 3734              		.align	1
ARM GAS  /tmp/ccJz23SP.s 			page 179


 3735              		.syntax unified
 3736              		.thumb
 3737              		.thumb_func
 3738              		.fpu fpv4-sp-d16
 3740              	dir_alloc:
 3741              	.LFB353:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3742              		.loc 1 1593 0
 3743              		.cfi_startproc
 3744              		@ args = 0, pretend = 0, frame = 0
 3745              		@ frame_needed = 0, uses_anonymous_args = 0
 3746              	.LVL549:
 3747 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3748              	.LCFI40:
 3749              		.cfi_def_cfa_offset 24
 3750              		.cfi_offset 3, -24
 3751              		.cfi_offset 4, -20
 3752              		.cfi_offset 5, -16
 3753              		.cfi_offset 6, -12
 3754              		.cfi_offset 7, -8
 3755              		.cfi_offset 14, -4
 3756 0002 0446     		mov	r4, r0
 3757 0004 0F46     		mov	r7, r1
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3758              		.loc 1 1596 0
 3759 0006 0668     		ldr	r6, [r0]
 3760              	.LVL550:
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3761              		.loc 1 1599 0
 3762 0008 0021     		movs	r1, #0
 3763              	.LVL551:
 3764 000a FFF7FEFF 		bl	dir_sdi
 3765              	.LVL552:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3766              		.loc 1 1600 0
 3767 000e 0346     		mov	r3, r0
 3768 0010 C0B9     		cbnz	r0, .L365
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 3769              		.loc 1 1601 0
 3770 0012 0025     		movs	r5, #0
 3771 0014 08E0     		b	.L368
 3772              	.LVL553:
 3773              	.L366:
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3774              		.loc 1 1610 0
 3775 0016 0135     		adds	r5, r5, #1
 3776              	.LVL554:
 3777 0018 BD42     		cmp	r5, r7
 3778 001a 13D0     		beq	.L365
 3779              	.LVL555:
 3780              	.L367:
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3781              		.loc 1 1614 0
 3782 001c 0121     		movs	r1, #1
 3783 001e 2046     		mov	r0, r4
 3784              	.LVL556:
 3785 0020 FFF7FEFF 		bl	dir_next
ARM GAS  /tmp/ccJz23SP.s 			page 180


 3786              	.LVL557:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3787              		.loc 1 1615 0
 3788 0024 0346     		mov	r3, r0
 3789 0026 68B9     		cbnz	r0, .L365
 3790              	.LVL558:
 3791              	.L368:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3792              		.loc 1 1603 0
 3793 0028 E169     		ldr	r1, [r4, #28]
 3794 002a 3046     		mov	r0, r6
 3795              	.LVL559:
 3796 002c FFF7FEFF 		bl	move_window
 3797              	.LVL560:
1604:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3798              		.loc 1 1604 0
 3799 0030 0346     		mov	r3, r0
 3800 0032 38B9     		cbnz	r0, .L365
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3801              		.loc 1 1608 0
 3802 0034 226A     		ldr	r2, [r4, #32]
 3803 0036 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3804 0038 E52A     		cmp	r2, #229
 3805 003a ECD0     		beq	.L366
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3806              		.loc 1 1608 0 is_stmt 0 discriminator 1
 3807 003c 002A     		cmp	r2, #0
 3808 003e EAD0     		beq	.L366
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3809              		.loc 1 1612 0 is_stmt 1
 3810 0040 0025     		movs	r5, #0
 3811              	.LVL561:
 3812 0042 EBE7     		b	.L367
 3813              	.L365:
 3814              	.LVL562:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3815              		.loc 1 1618 0
 3816 0044 042B     		cmp	r3, #4
 3817 0046 01D0     		beq	.L373
 3818              	.LVL563:
 3819              	.L369:
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3820              		.loc 1 1620 0
 3821 0048 1846     		mov	r0, r3
 3822 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3823              	.LVL564:
 3824              	.L373:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3825              		.loc 1 1618 0
 3826 004c 0723     		movs	r3, #7
 3827              	.LVL565:
 3828 004e FBE7     		b	.L369
 3829              		.cfi_endproc
 3830              	.LFE353:
 3832              		.section	.text.dir_register,"ax",%progbits
 3833              		.align	1
 3834              		.syntax unified
ARM GAS  /tmp/ccJz23SP.s 			page 181


 3835              		.thumb
 3836              		.thumb_func
 3837              		.fpu fpv4-sp-d16
 3839              	dir_register:
 3840              	.LFB358:
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3841              		.loc 1 2295 0
 3842              		.cfi_startproc
 3843              		@ args = 0, pretend = 0, frame = 0
 3844              		@ frame_needed = 0, uses_anonymous_args = 0
 3845              	.LVL566:
 3846 0000 70B5     		push	{r4, r5, r6, lr}
 3847              	.LCFI41:
 3848              		.cfi_def_cfa_offset 16
 3849              		.cfi_offset 4, -16
 3850              		.cfi_offset 5, -12
 3851              		.cfi_offset 6, -8
 3852              		.cfi_offset 14, -4
 3853 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3854              		.loc 1 2297 0
 3855 0004 0668     		ldr	r6, [r0]
 3856              	.LVL567:
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3857              		.loc 1 2366 0
 3858 0006 0121     		movs	r1, #1
 3859 0008 FFF7FEFF 		bl	dir_alloc
 3860              	.LVL568:
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3861              		.loc 1 2371 0
 3862 000c 0546     		mov	r5, r0
 3863 000e 08B1     		cbz	r0, .L377
 3864              	.LVL569:
 3865              	.L375:
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3866              		.loc 1 2384 0
 3867 0010 2846     		mov	r0, r5
 3868 0012 70BD     		pop	{r4, r5, r6, pc}
 3869              	.LVL570:
 3870              	.L377:
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3871              		.loc 1 2372 0
 3872 0014 E169     		ldr	r1, [r4, #28]
 3873 0016 3046     		mov	r0, r6
 3874              	.LVL571:
 3875 0018 FFF7FEFF 		bl	move_window
 3876              	.LVL572:
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 3877              		.loc 1 2373 0
 3878 001c 0546     		mov	r5, r0
 3879 001e 0028     		cmp	r0, #0
 3880 0020 F6D1     		bne	.L375
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 3881              		.loc 1 2374 0
 3882 0022 2022     		movs	r2, #32
 3883 0024 0021     		movs	r1, #0
 3884 0026 206A     		ldr	r0, [r4, #32]
ARM GAS  /tmp/ccJz23SP.s 			page 182


 3885              	.LVL573:
 3886 0028 FFF7FEFF 		bl	mem_set
 3887              	.LVL574:
2375:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 3888              		.loc 1 2375 0
 3889 002c 0B22     		movs	r2, #11
 3890 002e 04F12401 		add	r1, r4, #36
 3891 0032 206A     		ldr	r0, [r4, #32]
 3892 0034 FFF7FEFF 		bl	mem_cpy
 3893              	.LVL575:
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3894              		.loc 1 2379 0
 3895 0038 0123     		movs	r3, #1
 3896 003a F370     		strb	r3, [r6, #3]
 3897 003c E8E7     		b	.L375
 3898              		.cfi_endproc
 3899              	.LFE358:
 3901              		.section	.text.dir_read,"ax",%progbits
 3902              		.align	1
 3903              		.syntax unified
 3904              		.thumb
 3905              		.thumb_func
 3906              		.fpu fpv4-sp-d16
 3908              	dir_read:
 3909              	.LFB356:
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
 3910              		.loc 1 2135 0
 3911              		.cfi_startproc
 3912              		@ args = 0, pretend = 0, frame = 0
 3913              		@ frame_needed = 0, uses_anonymous_args = 0
 3914              	.LVL576:
 3915 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3916              	.LCFI42:
 3917              		.cfi_def_cfa_offset 24
 3918              		.cfi_offset 3, -24
 3919              		.cfi_offset 4, -20
 3920              		.cfi_offset 5, -16
 3921              		.cfi_offset 6, -12
 3922              		.cfi_offset 7, -8
 3923              		.cfi_offset 14, -4
 3924 0002 0446     		mov	r4, r0
 3925 0004 0E46     		mov	r6, r1
 3926              	.LVL577:
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
 3927              		.loc 1 2137 0
 3928 0006 0568     		ldr	r5, [r0]
 3929              	.LVL578:
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
 3930              		.loc 1 2136 0
 3931 0008 0427     		movs	r7, #4
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3932              		.loc 1 2143 0
 3933 000a 05E0     		b	.L379
 3934              	.LVL579:
 3935              	.L381:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3936              		.loc 1 2193 0
ARM GAS  /tmp/ccJz23SP.s 			page 183


 3937 000c 0021     		movs	r1, #0
 3938 000e 2046     		mov	r0, r4
 3939              	.LVL580:
 3940 0010 FFF7FEFF 		bl	dir_next
 3941              	.LVL581:
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3942              		.loc 1 2194 0
 3943 0014 0746     		mov	r7, r0
 3944 0016 E8B9     		cbnz	r0, .L380
 3945              	.LVL582:
 3946              	.L379:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3947              		.loc 1 2143 0
 3948 0018 E169     		ldr	r1, [r4, #28]
 3949 001a D9B1     		cbz	r1, .L380
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3950              		.loc 1 2144 0
 3951 001c 2846     		mov	r0, r5
 3952 001e FFF7FEFF 		bl	move_window
 3953              	.LVL583:
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 3954              		.loc 1 2145 0
 3955 0022 0746     		mov	r7, r0
 3956 0024 B0B9     		cbnz	r0, .L380
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
 3957              		.loc 1 2146 0
 3958 0026 236A     		ldr	r3, [r4, #32]
 3959 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3960              	.LVL584:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 3961              		.loc 1 2147 0
 3962 002a 92B1     		cbz	r2, .L384
2167:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3963              		.loc 1 2167 0
 3964 002c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3965 002e 03F03F03 		and	r3, r3, #63
 3966              	.LVL585:
 3967 0032 A371     		strb	r3, [r4, #6]
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3968              		.loc 1 2188 0
 3969 0034 E52A     		cmp	r2, #229
 3970 0036 E9D0     		beq	.L381
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3971              		.loc 1 2188 0 is_stmt 0 discriminator 1
 3972 0038 2E2A     		cmp	r2, #46
 3973 003a E7D0     		beq	.L381
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3974              		.loc 1 2188 0 discriminator 2
 3975 003c 0F2B     		cmp	r3, #15
 3976 003e E5D0     		beq	.L381
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3977              		.loc 1 2188 0 discriminator 3
 3978 0040 23F02003 		bic	r3, r3, #32
 3979              	.LVL586:
 3980 0044 082B     		cmp	r3, #8
 3981 0046 14BF     		ite	ne
 3982 0048 0023     		movne	r3, #0
ARM GAS  /tmp/ccJz23SP.s 			page 184


 3983 004a 0123     		moveq	r3, #1
 3984 004c B342     		cmp	r3, r6
 3985 004e DDD1     		bne	.L381
 3986 0050 00E0     		b	.L380
 3987              	.LVL587:
 3988              	.L384:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3989              		.loc 1 2148 0 is_stmt 1
 3990 0052 0427     		movs	r7, #4
 3991              	.LVL588:
 3992              	.L380:
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3993              		.loc 1 2197 0
 3994 0054 0FB1     		cbz	r7, .L383
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3995              		.loc 1 2197 0 is_stmt 0 discriminator 1
 3996 0056 0023     		movs	r3, #0
 3997 0058 E361     		str	r3, [r4, #28]
 3998              	.L383:
2199:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3999              		.loc 1 2199 0 is_stmt 1
 4000 005a 3846     		mov	r0, r7
 4001 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4002              		.cfi_endproc
 4003              	.LFE356:
 4005              		.section	.text.sync_fs,"ax",%progbits
 4006              		.align	1
 4007              		.syntax unified
 4008              		.thumb
 4009              		.thumb_func
 4010              		.fpu fpv4-sp-d16
 4012              	sync_fs:
 4013              	.LFB344:
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4014              		.loc 1 947 0
 4015              		.cfi_startproc
 4016              		@ args = 0, pretend = 0, frame = 0
 4017              		@ frame_needed = 0, uses_anonymous_args = 0
 4018              	.LVL589:
 4019 0000 70B5     		push	{r4, r5, r6, lr}
 4020              	.LCFI43:
 4021              		.cfi_def_cfa_offset 16
 4022              		.cfi_offset 4, -16
 4023              		.cfi_offset 5, -12
 4024              		.cfi_offset 6, -8
 4025              		.cfi_offset 14, -4
 4026 0002 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4027              		.loc 1 951 0
 4028 0004 FFF7FEFF 		bl	sync_window
 4029              	.LVL590:
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 4030              		.loc 1 952 0
 4031 0008 0546     		mov	r5, r0
 4032 000a 48B9     		cbnz	r0, .L387
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4033              		.loc 1 954 0
ARM GAS  /tmp/ccJz23SP.s 			page 185


 4034 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4035 000e 032B     		cmp	r3, #3
 4036 0010 08D0     		beq	.L391
 4037              	.LVL591:
 4038              	.L388:
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4039              		.loc 1 968 0
 4040 0012 0022     		movs	r2, #0
 4041 0014 1146     		mov	r1, r2
 4042 0016 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4043 0018 FFF7FEFF 		bl	disk_ioctl
 4044              	.LVL592:
 4045 001c 00B1     		cbz	r0, .L387
 4046 001e 0125     		movs	r5, #1
 4047              	.L387:
 4048              	.LVL593:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4049              		.loc 1 972 0
 4050 0020 2846     		mov	r0, r5
 4051 0022 70BD     		pop	{r4, r5, r6, pc}
 4052              	.LVL594:
 4053              	.L391:
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4054              		.loc 1 954 0 discriminator 1
 4055 0024 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4056 0026 012B     		cmp	r3, #1
 4057 0028 F3D1     		bne	.L388
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 4058              		.loc 1 956 0
 4059 002a 04F13006 		add	r6, r4, #48
 4060 002e 4FF40072 		mov	r2, #512
 4061 0032 0021     		movs	r1, #0
 4062 0034 3046     		mov	r0, r6
 4063              	.LVL595:
 4064 0036 FFF7FEFF 		bl	mem_set
 4065              	.LVL596:
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 4066              		.loc 1 957 0
 4067 003a 4AF65521 		movw	r1, #43605
 4068 003e 04F22E20 		addw	r0, r4, #558
 4069 0042 FFF7FEFF 		bl	st_word
 4070              	.LVL597:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 4071              		.loc 1 958 0
 4072 0046 0F49     		ldr	r1, .L392
 4073 0048 3046     		mov	r0, r6
 4074 004a FFF7FEFF 		bl	st_dword
 4075              	.LVL598:
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 4076              		.loc 1 959 0
 4077 004e 0E49     		ldr	r1, .L392+4
 4078 0050 04F50570 		add	r0, r4, #532
 4079 0054 FFF7FEFF 		bl	st_dword
 4080              	.LVL599:
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 4081              		.loc 1 960 0
 4082 0058 2169     		ldr	r1, [r4, #16]
ARM GAS  /tmp/ccJz23SP.s 			page 186


 4083 005a 04F50670 		add	r0, r4, #536
 4084 005e FFF7FEFF 		bl	st_dword
 4085              	.LVL600:
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 4086              		.loc 1 961 0
 4087 0062 E168     		ldr	r1, [r4, #12]
 4088 0064 04F50770 		add	r0, r4, #540
 4089 0068 FFF7FEFF 		bl	st_dword
 4090              	.LVL601:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 4091              		.loc 1 963 0
 4092 006c E269     		ldr	r2, [r4, #28]
 4093 006e 0132     		adds	r2, r2, #1
 4094 0070 E262     		str	r2, [r4, #44]
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 4095              		.loc 1 964 0
 4096 0072 0123     		movs	r3, #1
 4097 0074 3146     		mov	r1, r6
 4098 0076 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4099 0078 FFF7FEFF 		bl	disk_write
 4100              	.LVL602:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4101              		.loc 1 965 0
 4102 007c 0023     		movs	r3, #0
 4103 007e 2371     		strb	r3, [r4, #4]
 4104 0080 C7E7     		b	.L388
 4105              	.L393:
 4106 0082 00BF     		.align	2
 4107              	.L392:
 4108 0084 52526141 		.word	1096897106
 4109 0088 72724161 		.word	1631679090
 4110              		.cfi_endproc
 4111              	.LFE344:
 4113              		.section	.text.f_mount,"ax",%progbits
 4114              		.align	1
 4115              		.global	f_mount
 4116              		.syntax unified
 4117              		.thumb
 4118              		.thumb_func
 4119              		.fpu fpv4-sp-d16
 4121              	f_mount:
 4122              	.LFB367:
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
 4123              		.loc 1 3265 0
 4124              		.cfi_startproc
 4125              		@ args = 0, pretend = 0, frame = 16
 4126              		@ frame_needed = 0, uses_anonymous_args = 0
 4127              	.LVL603:
 4128 0000 70B5     		push	{r4, r5, r6, lr}
 4129              	.LCFI44:
 4130              		.cfi_def_cfa_offset 16
 4131              		.cfi_offset 4, -16
 4132              		.cfi_offset 5, -12
 4133              		.cfi_offset 6, -8
 4134              		.cfi_offset 14, -4
 4135 0002 84B0     		sub	sp, sp, #16
 4136              	.LCFI45:
ARM GAS  /tmp/ccJz23SP.s 			page 187


 4137              		.cfi_def_cfa_offset 32
 4138 0004 0190     		str	r0, [sp, #4]
 4139 0006 0091     		str	r1, [sp]
 4140 0008 1646     		mov	r6, r2
3269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4141              		.loc 1 3269 0
 4142 000a 04A8     		add	r0, sp, #16
 4143              	.LVL604:
 4144 000c 40F8041D 		str	r1, [r0, #-4]!
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 4145              		.loc 1 3273 0
 4146 0010 FFF7FEFF 		bl	get_ldnumber
 4147              	.LVL605:
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4148              		.loc 1 3274 0
 4149 0014 041E     		subs	r4, r0, #0
 4150 0016 1CDB     		blt	.L398
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4151              		.loc 1 3275 0
 4152 0018 104B     		ldr	r3, .L403
 4153 001a 53F82450 		ldr	r5, [r3, r4, lsl #2]
 4154              	.LVL606:
3277:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4155              		.loc 1 3277 0
 4156 001e 25B1     		cbz	r5, .L396
3279:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4157              		.loc 1 3279 0
 4158 0020 2846     		mov	r0, r5
 4159              	.LVL607:
 4160 0022 FFF7FEFF 		bl	clear_lock
 4161              	.LVL608:
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4162              		.loc 1 3284 0
 4163 0026 0023     		movs	r3, #0
 4164 0028 2B70     		strb	r3, [r5]
 4165              	.L396:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 4166              		.loc 1 3287 0
 4167 002a 019B     		ldr	r3, [sp, #4]
 4168 002c 0BB1     		cbz	r3, .L397
3288:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
 4169              		.loc 1 3288 0
 4170 002e 0022     		movs	r2, #0
 4171 0030 1A70     		strb	r2, [r3]
 4172              	.L397:
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4173              		.loc 1 3293 0
 4174 0032 019B     		ldr	r3, [sp, #4]
 4175 0034 094A     		ldr	r2, .L403
 4176 0036 42F82430 		str	r3, [r2, r4, lsl #2]
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4177              		.loc 1 3295 0
 4178 003a 63B1     		cbz	r3, .L399
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4179              		.loc 1 3295 0 is_stmt 0 discriminator 2
 4180 003c 012E     		cmp	r6, #1
 4181 003e 02D0     		beq	.L402
ARM GAS  /tmp/ccJz23SP.s 			page 188


3295:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4182              		.loc 1 3295 0
 4183 0040 0020     		movs	r0, #0
 4184              	.LVL609:
 4185              	.L395:
3299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4186              		.loc 1 3299 0 is_stmt 1
 4187 0042 04B0     		add	sp, sp, #16
 4188              	.LCFI46:
 4189              		.cfi_remember_state
 4190              		.cfi_def_cfa_offset 16
 4191              		@ sp needed
 4192 0044 70BD     		pop	{r4, r5, r6, pc}
 4193              	.LVL610:
 4194              	.L402:
 4195              	.LCFI47:
 4196              		.cfi_restore_state
3297:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 4197              		.loc 1 3297 0
 4198 0046 0022     		movs	r2, #0
 4199 0048 01A9     		add	r1, sp, #4
 4200 004a 6846     		mov	r0, sp
 4201 004c FFF7FEFF 		bl	find_volume
 4202              	.LVL611:
3298:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4203              		.loc 1 3298 0
 4204 0050 F7E7     		b	.L395
 4205              	.LVL612:
 4206              	.L398:
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4207              		.loc 1 3274 0
 4208 0052 0B20     		movs	r0, #11
 4209              	.LVL613:
 4210 0054 F5E7     		b	.L395
 4211              	.LVL614:
 4212              	.L399:
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4213              		.loc 1 3295 0
 4214 0056 0020     		movs	r0, #0
 4215 0058 F3E7     		b	.L395
 4216              	.L404:
 4217 005a 00BF     		.align	2
 4218              	.L403:
 4219 005c 00000000 		.word	.LANCHOR2
 4220              		.cfi_endproc
 4221              	.LFE367:
 4223              		.section	.text.f_open,"ax",%progbits
 4224              		.align	1
 4225              		.global	f_open
 4226              		.syntax unified
 4227              		.thumb
 4228              		.thumb_func
 4229              		.fpu fpv4-sp-d16
 4231              	f_open:
 4232              	.LFB368:
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4233              		.loc 1 3313 0
ARM GAS  /tmp/ccJz23SP.s 			page 189


 4234              		.cfi_startproc
 4235              		@ args = 0, pretend = 0, frame = 64
 4236              		@ frame_needed = 0, uses_anonymous_args = 0
 4237              	.LVL615:
 4238 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4239              	.LCFI48:
 4240              		.cfi_def_cfa_offset 28
 4241              		.cfi_offset 4, -28
 4242              		.cfi_offset 5, -24
 4243              		.cfi_offset 6, -20
 4244              		.cfi_offset 7, -16
 4245              		.cfi_offset 8, -12
 4246              		.cfi_offset 9, -8
 4247              		.cfi_offset 14, -4
 4248 0004 91B0     		sub	sp, sp, #68
 4249              	.LCFI49:
 4250              		.cfi_def_cfa_offset 96
 4251 0006 0191     		str	r1, [sp, #4]
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4252              		.loc 1 3324 0
 4253 0008 0028     		cmp	r0, #0
 4254 000a 00F00B81 		beq	.L422
 4255 000e 0546     		mov	r5, r0
 4256 0010 1646     		mov	r6, r2
3327:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
 4257              		.loc 1 3327 0
 4258 0012 02F03F07 		and	r7, r2, #63
 4259              	.LVL616:
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4260              		.loc 1 3328 0
 4261 0016 3A46     		mov	r2, r7
 4262 0018 03A9     		add	r1, sp, #12
 4263              	.LVL617:
 4264 001a 01A8     		add	r0, sp, #4
 4265              	.LVL618:
 4266 001c FFF7FEFF 		bl	find_volume
 4267              	.LVL619:
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 4268              		.loc 1 3329 0
 4269 0020 0446     		mov	r4, r0
 4270 0022 30B1     		cbz	r0, .L435
 4271              	.LVL620:
 4272              	.L407:
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4273              		.loc 1 3499 0
 4274 0024 0CB1     		cbz	r4, .L406
 4275              	.LVL621:
 4276              	.L421:
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4277              		.loc 1 3499 0 is_stmt 0 discriminator 1
 4278 0026 0023     		movs	r3, #0
 4279 0028 2B60     		str	r3, [r5]
 4280              	.LVL622:
 4281              	.L406:
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4282              		.loc 1 3502 0 is_stmt 1
 4283 002a 2046     		mov	r0, r4
ARM GAS  /tmp/ccJz23SP.s 			page 190


 4284 002c 11B0     		add	sp, sp, #68
 4285              	.LCFI50:
 4286              		.cfi_remember_state
 4287              		.cfi_def_cfa_offset 28
 4288              		@ sp needed
 4289 002e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4290              	.LVL623:
 4291              	.L435:
 4292              	.LCFI51:
 4293              		.cfi_restore_state
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 4294              		.loc 1 3330 0
 4295 0032 039B     		ldr	r3, [sp, #12]
 4296 0034 0493     		str	r3, [sp, #16]
3332:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 4297              		.loc 1 3332 0
 4298 0036 0199     		ldr	r1, [sp, #4]
 4299 0038 04A8     		add	r0, sp, #16
 4300              	.LVL624:
 4301 003a FFF7FEFF 		bl	follow_path
 4302              	.LVL625:
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 4303              		.loc 1 3334 0
 4304 003e 0446     		mov	r4, r0
 4305 0040 60B9     		cbnz	r0, .L408
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 4306              		.loc 1 3335 0
 4307 0042 9DF93F30 		ldrsb	r3, [sp, #63]
 4308 0046 002B     		cmp	r3, #0
 4309 0048 51DB     		blt	.L423
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4310              		.loc 1 3340 0
 4311 004a 37F00103 		bics	r3, r7, #1
 4312 004e 14BF     		ite	ne
 4313 0050 0121     		movne	r1, #1
 4314 0052 0021     		moveq	r1, #0
 4315 0054 04A8     		add	r0, sp, #16
 4316              	.LVL626:
 4317 0056 FFF7FEFF 		bl	chk_lock
 4318              	.LVL627:
 4319 005a 0446     		mov	r4, r0
 4320              	.LVL628:
 4321              	.L408:
3345:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4322              		.loc 1 3345 0
 4323 005c 16F01C0F 		tst	r6, #28
 4324 0060 5BD0     		beq	.L409
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 4325              		.loc 1 3346 0
 4326 0062 002C     		cmp	r4, #0
 4327 0064 4FD0     		beq	.L410
3347:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4328              		.loc 1 3347 0
 4329 0066 042C     		cmp	r4, #4
 4330 0068 43D0     		beq	.L436
 4331              	.LVL629:
 4332              	.L411:
ARM GAS  /tmp/ccJz23SP.s 			page 191


3354:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4333              		.loc 1 3354 0
 4334 006a 47F00807 		orr	r7, r7, #8
 4335              	.LVL630:
 4336              	.L412:
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4337              		.loc 1 3363 0
 4338 006e 002C     		cmp	r4, #0
 4339 0070 62D1     		bne	.L413
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4340              		.loc 1 3363 0 is_stmt 0 discriminator 1
 4341 0072 17F0080F 		tst	r7, #8
 4342 0076 5FD0     		beq	.L413
3364:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4343              		.loc 1 3364 0 is_stmt 1
 4344 0078 FFF7FEFF 		bl	get_fattime
 4345              	.LVL631:
 4346 007c 0646     		mov	r6, r0
 4347              	.LVL632:
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 4348              		.loc 1 3392 0
 4349 007e 0146     		mov	r1, r0
 4350 0080 0C98     		ldr	r0, [sp, #48]
 4351              	.LVL633:
 4352 0082 0E30     		adds	r0, r0, #14
 4353 0084 FFF7FEFF 		bl	st_dword
 4354              	.LVL634:
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 4355              		.loc 1 3393 0
 4356 0088 3146     		mov	r1, r6
 4357 008a 0C98     		ldr	r0, [sp, #48]
 4358 008c 1630     		adds	r0, r0, #22
 4359 008e FFF7FEFF 		bl	st_dword
 4360              	.LVL635:
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 4361              		.loc 1 3394 0
 4362 0092 0C9B     		ldr	r3, [sp, #48]
 4363 0094 2022     		movs	r2, #32
 4364 0096 DA72     		strb	r2, [r3, #11]
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 4365              		.loc 1 3395 0
 4366 0098 039E     		ldr	r6, [sp, #12]
 4367              	.LVL636:
 4368 009a DDF83080 		ldr	r8, [sp, #48]
 4369 009e 4146     		mov	r1, r8
 4370 00a0 3046     		mov	r0, r6
 4371 00a2 FFF7FEFF 		bl	ld_clust
 4372              	.LVL637:
 4373 00a6 8146     		mov	r9, r0
 4374              	.LVL638:
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 4375              		.loc 1 3396 0
 4376 00a8 0022     		movs	r2, #0
 4377 00aa 4146     		mov	r1, r8
 4378 00ac 3046     		mov	r0, r6
 4379              	.LVL639:
 4380 00ae FFF7FEFF 		bl	st_clust
ARM GAS  /tmp/ccJz23SP.s 			page 192


 4381              	.LVL640:
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 4382              		.loc 1 3397 0
 4383 00b2 0021     		movs	r1, #0
 4384 00b4 0C98     		ldr	r0, [sp, #48]
 4385 00b6 1C30     		adds	r0, r0, #28
 4386 00b8 FFF7FEFF 		bl	st_dword
 4387              	.LVL641:
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4388              		.loc 1 3398 0
 4389 00bc 039B     		ldr	r3, [sp, #12]
 4390 00be 0122     		movs	r2, #1
 4391 00c0 DA70     		strb	r2, [r3, #3]
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
 4392              		.loc 1 3400 0
 4393 00c2 B9F1000F 		cmp	r9, #0
 4394 00c6 37D0     		beq	.L413
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 4395              		.loc 1 3401 0
 4396 00c8 039B     		ldr	r3, [sp, #12]
 4397 00ca DE6A     		ldr	r6, [r3, #44]
 4398              	.LVL642:
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 4399              		.loc 1 3402 0
 4400 00cc 0022     		movs	r2, #0
 4401 00ce 4946     		mov	r1, r9
 4402 00d0 04A8     		add	r0, sp, #16
 4403 00d2 FFF7FEFF 		bl	remove_chain
 4404              	.LVL643:
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
 4405              		.loc 1 3403 0
 4406 00d6 0446     		mov	r4, r0
 4407 00d8 70BB     		cbnz	r0, .L413
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 4408              		.loc 1 3404 0
 4409 00da 3146     		mov	r1, r6
 4410 00dc 0398     		ldr	r0, [sp, #12]
 4411              	.LVL644:
 4412 00de FFF7FEFF 		bl	move_window
 4413              	.LVL645:
 4414 00e2 0446     		mov	r4, r0
 4415              	.LVL646:
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 4416              		.loc 1 3405 0
 4417 00e4 09F1FF33 		add	r3, r9, #-1
 4418 00e8 039A     		ldr	r2, [sp, #12]
 4419 00ea D360     		str	r3, [r2, #12]
 4420 00ec 24E0     		b	.L413
 4421              	.LVL647:
 4422              	.L423:
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4423              		.loc 1 3336 0
 4424 00ee 0624     		movs	r4, #6
 4425 00f0 B4E7     		b	.L408
 4426              	.LVL648:
 4427              	.L436:
3349:Middlewares/Third_Party/FatFs/src/ff.c **** #else
ARM GAS  /tmp/ccJz23SP.s 			page 193


 4428              		.loc 1 3349 0
 4429 00f2 FFF7FEFF 		bl	enq_lock
 4430              	.LVL649:
 4431 00f6 08B9     		cbnz	r0, .L437
 4432 00f8 1224     		movs	r4, #18
 4433              	.LVL650:
 4434 00fa B6E7     		b	.L411
 4435              	.LVL651:
 4436              	.L437:
3349:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4437              		.loc 1 3349 0 is_stmt 0 discriminator 1
 4438 00fc 04A8     		add	r0, sp, #16
 4439 00fe FFF7FEFF 		bl	dir_register
 4440              	.LVL652:
 4441 0102 0446     		mov	r4, r0
 4442              	.LVL653:
 4443 0104 B1E7     		b	.L411
 4444              	.LVL654:
 4445              	.L410:
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 4446              		.loc 1 3357 0 is_stmt 1
 4447 0106 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4448 010a 13F0110F 		tst	r3, #17
 4449 010e 12D1     		bne	.L425
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4450              		.loc 1 3360 0
 4451 0110 16F0040F 		tst	r6, #4
 4452 0114 ABD0     		beq	.L412
 4453 0116 0824     		movs	r4, #8
 4454              	.LVL655:
 4455 0118 0EE0     		b	.L413
 4456              	.LVL656:
 4457              	.L409:
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 4458              		.loc 1 3412 0
 4459 011a 6CB9     		cbnz	r4, .L413
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 4460              		.loc 1 3413 0
 4461 011c 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4462 0120 13F0100F 		tst	r3, #16
 4463 0124 4CD1     		bne	.L427
3416:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4464              		.loc 1 3416 0
 4465 0126 16F0020F 		tst	r6, #2
 4466 012a 05D0     		beq	.L413
3416:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4467              		.loc 1 3416 0 is_stmt 0 discriminator 1
 4468 012c 13F0010F 		tst	r3, #1
 4469 0130 02D0     		beq	.L413
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4470              		.loc 1 3417 0 is_stmt 1
 4471 0132 0724     		movs	r4, #7
 4472              	.LVL657:
 4473 0134 16E0     		b	.L414
 4474              	.LVL658:
 4475              	.L425:
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
ARM GAS  /tmp/ccJz23SP.s 			page 194


 4476              		.loc 1 3358 0
 4477 0136 0724     		movs	r4, #7
 4478              	.LVL659:
 4479              	.L413:
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 4480              		.loc 1 3422 0
 4481 0138 A4B9     		cbnz	r4, .L414
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
 4482              		.loc 1 3423 0
 4483 013a 17F0080F 		tst	r7, #8
 4484 013e 01D0     		beq	.L415
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 4485              		.loc 1 3424 0
 4486 0140 47F04007 		orr	r7, r7, #64
 4487              	.LVL660:
 4488              	.L415:
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
 4489              		.loc 1 3425 0
 4490 0144 039B     		ldr	r3, [sp, #12]
 4491 0146 DB6A     		ldr	r3, [r3, #44]
 4492 0148 6B62     		str	r3, [r5, #36]
3426:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4493              		.loc 1 3426 0
 4494 014a 0C9B     		ldr	r3, [sp, #48]
 4495 014c AB62     		str	r3, [r5, #40]
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 4496              		.loc 1 3428 0
 4497 014e 37F00103 		bics	r3, r7, #1
 4498 0152 14BF     		ite	ne
 4499 0154 0121     		movne	r1, #1
 4500 0156 0021     		moveq	r1, #0
 4501 0158 04A8     		add	r0, sp, #16
 4502 015a FFF7FEFF 		bl	inc_lock
 4503              	.LVL661:
 4504 015e 2861     		str	r0, [r5, #16]
3429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4505              		.loc 1 3429 0
 4506 0160 0028     		cmp	r0, #0
 4507 0162 5DD0     		beq	.L429
 4508              	.LVL662:
 4509              	.L414:
3444:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4510              		.loc 1 3444 0
 4511 0164 002C     		cmp	r4, #0
 4512 0166 7FF45DAF 		bne	.L407
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 4513              		.loc 1 3456 0
 4514 016a 039E     		ldr	r6, [sp, #12]
 4515 016c DDF83080 		ldr	r8, [sp, #48]
 4516 0170 4146     		mov	r1, r8
 4517 0172 3046     		mov	r0, r6
 4518 0174 FFF7FEFF 		bl	ld_clust
 4519              	.LVL663:
 4520 0178 A860     		str	r0, [r5, #8]
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4521              		.loc 1 3457 0
 4522 017a 08F11C00 		add	r0, r8, #28
ARM GAS  /tmp/ccJz23SP.s 			page 195


 4523 017e FFF7FEFF 		bl	ld_dword
 4524              	.LVL664:
 4525 0182 E860     		str	r0, [r5, #12]
3460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4526              		.loc 1 3460 0
 4527 0184 0021     		movs	r1, #0
 4528 0186 E962     		str	r1, [r5, #44]
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
 4529              		.loc 1 3462 0
 4530 0188 2E60     		str	r6, [r5]
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 4531              		.loc 1 3463 0
 4532 018a F388     		ldrh	r3, [r6, #6]
 4533 018c AB80     		strh	r3, [r5, #4]	@ movhi
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
 4534              		.loc 1 3464 0
 4535 018e 2F75     		strb	r7, [r5, #20]
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 4536              		.loc 1 3465 0
 4537 0190 6975     		strb	r1, [r5, #21]
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 4538              		.loc 1 3466 0
 4539 0192 2962     		str	r1, [r5, #32]
3467:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4540              		.loc 1 3467 0
 4541 0194 A961     		str	r1, [r5, #24]
3470:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4542              		.loc 1 3470 0
 4543 0196 05F13008 		add	r8, r5, #48
 4544 019a 4FF40072 		mov	r2, #512
 4545 019e 4046     		mov	r0, r8
 4546 01a0 FFF7FEFF 		bl	mem_set
 4547              	.LVL665:
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4548              		.loc 1 3472 0
 4549 01a4 17F0200F 		tst	r7, #32
 4550 01a8 3FF43CAF 		beq	.L407
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4551              		.loc 1 3472 0 is_stmt 0 discriminator 1
 4552 01ac EE68     		ldr	r6, [r5, #12]
 4553 01ae 002E     		cmp	r6, #0
 4554 01b0 3FF438AF 		beq	.L407
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 4555              		.loc 1 3473 0 is_stmt 1
 4556 01b4 AE61     		str	r6, [r5, #24]
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 4557              		.loc 1 3474 0
 4558 01b6 039B     		ldr	r3, [sp, #12]
 4559 01b8 5F89     		ldrh	r7, [r3, #10]
 4560              	.LVL666:
 4561 01ba 7F02     		lsls	r7, r7, #9
 4562              	.LVL667:
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 4563              		.loc 1 3475 0
 4564 01bc A968     		ldr	r1, [r5, #8]
 4565              	.LVL668:
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
ARM GAS  /tmp/ccJz23SP.s 			page 196


 4566              		.loc 1 3476 0
 4567 01be 05E0     		b	.L416
 4568              	.LVL669:
 4569              	.L427:
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4570              		.loc 1 3414 0
 4571 01c0 0424     		movs	r4, #4
 4572              	.LVL670:
 4573 01c2 CFE7     		b	.L414
 4574              	.LVL671:
 4575              	.L417:
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4576              		.loc 1 3479 0
 4577 01c4 B1F1FF3F 		cmp	r1, #-1
 4578 01c8 0BD0     		beq	.L438
 4579              	.LVL672:
 4580              	.L418:
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4581              		.loc 1 3476 0 discriminator 2
 4582 01ca F61B     		subs	r6, r6, r7
 4583              	.LVL673:
 4584              	.L416:
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4585              		.loc 1 3476 0 is_stmt 0 discriminator 1
 4586 01cc 5CB9     		cbnz	r4, .L419
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4587              		.loc 1 3476 0 discriminator 3
 4588 01ce BE42     		cmp	r6, r7
 4589 01d0 09D9     		bls	.L419
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 4590              		.loc 1 3477 0 is_stmt 1
 4591 01d2 2846     		mov	r0, r5
 4592 01d4 FFF7FEFF 		bl	get_fat
 4593              	.LVL674:
 4594 01d8 0146     		mov	r1, r0
 4595              	.LVL675:
3478:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4596              		.loc 1 3478 0
 4597 01da 0128     		cmp	r0, #1
 4598 01dc F2D8     		bhi	.L417
 4599 01de 0224     		movs	r4, #2
 4600              	.LVL676:
 4601 01e0 F0E7     		b	.L417
 4602              	.LVL677:
 4603              	.L438:
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4604              		.loc 1 3479 0
 4605 01e2 0124     		movs	r4, #1
 4606              	.LVL678:
 4607 01e4 F1E7     		b	.L418
 4608              	.LVL679:
 4609              	.L419:
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 4610              		.loc 1 3481 0
 4611 01e6 E961     		str	r1, [r5, #28]
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4612              		.loc 1 3482 0
ARM GAS  /tmp/ccJz23SP.s 			page 197


 4613 01e8 002C     		cmp	r4, #0
 4614 01ea 7FF41BAF 		bne	.L407
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4615              		.loc 1 3482 0 is_stmt 0 discriminator 1
 4616 01ee C6F30803 		ubfx	r3, r6, #0, #9
 4617 01f2 002B     		cmp	r3, #0
 4618 01f4 3FF416AF 		beq	.L407
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
 4619              		.loc 1 3483 0 is_stmt 1
 4620 01f8 039F     		ldr	r7, [sp, #12]
 4621              	.LVL680:
 4622 01fa 3846     		mov	r0, r7
 4623 01fc FFF7FEFF 		bl	clust2sect
 4624              	.LVL681:
 4625 0200 08B9     		cbnz	r0, .L439
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 4626              		.loc 1 3484 0
 4627 0202 0224     		movs	r4, #2
 4628              	.LVL682:
 4629 0204 0FE7     		b	.L421
 4630              	.LVL683:
 4631              	.L439:
3486:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 4632              		.loc 1 3486 0
 4633 0206 00EB5622 		add	r2, r0, r6, lsr #9
 4634 020a 2A62     		str	r2, [r5, #32]
3488:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4635              		.loc 1 3488 0
 4636 020c 0123     		movs	r3, #1
 4637 020e 4146     		mov	r1, r8
 4638 0210 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 4639              	.LVL684:
 4640 0212 FFF7FEFF 		bl	disk_read
 4641              	.LVL685:
 4642 0216 0028     		cmp	r0, #0
 4643 0218 3FF404AF 		beq	.L407
 4644 021c 0124     		movs	r4, #1
 4645              	.LVL686:
 4646 021e 02E7     		b	.L421
 4647              	.LVL687:
 4648              	.L429:
3429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4649              		.loc 1 3429 0
 4650 0220 0224     		movs	r4, #2
 4651              	.LVL688:
 4652 0222 FFE6     		b	.L407
 4653              	.LVL689:
 4654              	.L422:
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4655              		.loc 1 3324 0
 4656 0224 0924     		movs	r4, #9
 4657 0226 00E7     		b	.L406
 4658              		.cfi_endproc
 4659              	.LFE368:
 4661              		.section	.text.f_read,"ax",%progbits
 4662              		.align	1
 4663              		.global	f_read
ARM GAS  /tmp/ccJz23SP.s 			page 198


 4664              		.syntax unified
 4665              		.thumb
 4666              		.thumb_func
 4667              		.fpu fpv4-sp-d16
 4669              	f_read:
 4670              	.LFB369:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4671              		.loc 1 3517 0
 4672              		.cfi_startproc
 4673              		@ args = 0, pretend = 0, frame = 16
 4674              		@ frame_needed = 0, uses_anonymous_args = 0
 4675              	.LVL690:
 4676 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4677              	.LCFI52:
 4678              		.cfi_def_cfa_offset 36
 4679              		.cfi_offset 4, -36
 4680              		.cfi_offset 5, -32
 4681              		.cfi_offset 6, -28
 4682              		.cfi_offset 7, -24
 4683              		.cfi_offset 8, -20
 4684              		.cfi_offset 9, -16
 4685              		.cfi_offset 10, -12
 4686              		.cfi_offset 11, -8
 4687              		.cfi_offset 14, -4
 4688 0004 85B0     		sub	sp, sp, #20
 4689              	.LCFI53:
 4690              		.cfi_def_cfa_offset 56
 4691 0006 0446     		mov	r4, r0
 4692 0008 8946     		mov	r9, r1
 4693 000a 1746     		mov	r7, r2
 4694 000c 9846     		mov	r8, r3
 4695              	.LVL691:
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 4696              		.loc 1 3526 0
 4697 000e 0023     		movs	r3, #0
 4698              	.LVL692:
 4699 0010 C8F80030 		str	r3, [r8]
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4700              		.loc 1 3527 0
 4701 0014 0090     		str	r0, [sp]
 4702 0016 03A9     		add	r1, sp, #12
 4703              	.LVL693:
 4704 0018 FFF7FEFF 		bl	validate
 4705              	.LVL694:
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4706              		.loc 1 3528 0
 4707 001c 0646     		mov	r6, r0
 4708 001e 0028     		cmp	r0, #0
 4709 0020 40F09B80 		bne	.L441
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4710              		.loc 1 3528 0 is_stmt 0 discriminator 2
 4711 0024 667D     		ldrb	r6, [r4, #21]	@ zero_extendqisi2
 4712              	.LVL695:
 4713 0026 002E     		cmp	r6, #0
 4714 0028 40F09780 		bne	.L441
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4715              		.loc 1 3529 0 is_stmt 1
ARM GAS  /tmp/ccJz23SP.s 			page 199


 4716 002c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4717 002e 13F0010F 		tst	r3, #1
 4718 0032 00F0A980 		beq	.L463
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4719              		.loc 1 3530 0
 4720 0036 E568     		ldr	r5, [r4, #12]
 4721 0038 A369     		ldr	r3, [r4, #24]
 4722 003a ED1A     		subs	r5, r5, r3
 4723              	.LVL696:
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4724              		.loc 1 3531 0
 4725 003c BD42     		cmp	r5, r7
 4726 003e 56D3     		bcc	.L461
 4727 0040 3D46     		mov	r5, r7
 4728              	.LVL697:
 4729 0042 54E0     		b	.L461
 4730              	.LVL698:
 4731              	.L446:
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4732              		.loc 1 3542 0
 4733 0044 E36A     		ldr	r3, [r4, #44]
 4734 0046 1BB1     		cbz	r3, .L448
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 4735              		.loc 1 3543 0
 4736 0048 2046     		mov	r0, r4
 4737 004a FFF7FEFF 		bl	clmt_clust
 4738              	.LVL699:
 4739 004e 5EE0     		b	.L447
 4740              	.LVL700:
 4741              	.L448:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4742              		.loc 1 3547 0
 4743 0050 E169     		ldr	r1, [r4, #28]
 4744 0052 0098     		ldr	r0, [sp]
 4745 0054 FFF7FEFF 		bl	get_fat
 4746              	.LVL701:
 4747 0058 59E0     		b	.L447
 4748              	.L470:
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4749              		.loc 1 3550 0 discriminator 1
 4750 005a 0226     		movs	r6, #2
 4751              	.LVL702:
 4752 005c 6675     		strb	r6, [r4, #21]
 4753 005e 7CE0     		b	.L441
 4754              	.LVL703:
 4755              	.L471:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4756              		.loc 1 3551 0 discriminator 1
 4757 0060 0126     		movs	r6, #1
 4758              	.LVL704:
 4759 0062 6675     		strb	r6, [r4, #21]
 4760 0064 79E0     		b	.L441
 4761              	.LVL705:
 4762              	.L472:
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4763              		.loc 1 3555 0 discriminator 1
 4764 0066 0226     		movs	r6, #2
ARM GAS  /tmp/ccJz23SP.s 			page 200


 4765              	.LVL706:
 4766 0068 6675     		strb	r6, [r4, #21]
 4767 006a 76E0     		b	.L441
 4768              	.LVL707:
 4769              	.L454:
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4770              		.loc 1 3569 0
 4771 006c 94F91430 		ldrsb	r3, [r4, #20]
 4772 0070 002B     		cmp	r3, #0
 4773 0072 02DB     		blt	.L467
 4774              	.L455:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 4775              		.loc 1 3574 0
 4776 0074 4FEA4B27 		lsl	r7, fp, #9
 4777              	.LVL708:
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4778              		.loc 1 3575 0
 4779 0078 2FE0     		b	.L456
 4780              	.LVL709:
 4781              	.L467:
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4782              		.loc 1 3569 0 discriminator 1
 4783 007a 206A     		ldr	r0, [r4, #32]
 4784 007c A0EB0A00 		sub	r0, r0, r10
 4785 0080 5845     		cmp	r0, fp
 4786 0082 F7D2     		bcs	.L455
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4787              		.loc 1 3570 0
 4788 0084 4FF40072 		mov	r2, #512
 4789 0088 04F13001 		add	r1, r4, #48
 4790 008c 09EB4020 		add	r0, r9, r0, lsl #9
 4791 0090 FFF7FEFF 		bl	mem_cpy
 4792              	.LVL710:
 4793 0094 EEE7     		b	.L455
 4794              	.L452:
3578:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4795              		.loc 1 3578 0
 4796 0096 226A     		ldr	r2, [r4, #32]
 4797 0098 5245     		cmp	r2, r10
 4798 009a 0DD0     		beq	.L457
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4799              		.loc 1 3580 0
 4800 009c 94F91430 		ldrsb	r3, [r4, #20]
 4801 00a0 002B     		cmp	r3, #0
 4802 00a2 5EDB     		blt	.L468
 4803              	.L458:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4804              		.loc 1 3585 0
 4805 00a4 0123     		movs	r3, #1
 4806 00a6 5246     		mov	r2, r10
 4807 00a8 04F13001 		add	r1, r4, #48
 4808 00ac 0398     		ldr	r0, [sp, #12]
 4809 00ae 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4810 00b0 FFF7FEFF 		bl	disk_read
 4811              	.LVL711:
 4812 00b4 0028     		cmp	r0, #0
 4813 00b6 64D1     		bne	.L469
ARM GAS  /tmp/ccJz23SP.s 			page 201


 4814              	.L457:
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4815              		.loc 1 3588 0
 4816 00b8 C4F820A0 		str	r10, [r4, #32]
 4817              	.LVL712:
 4818              	.L444:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 4819              		.loc 1 3590 0
 4820 00bc A369     		ldr	r3, [r4, #24]
 4821 00be C3F30803 		ubfx	r3, r3, #0, #9
 4822 00c2 C3F50077 		rsb	r7, r3, #512
 4823              	.LVL713:
3591:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 4824              		.loc 1 3591 0
 4825 00c6 BD42     		cmp	r5, r7
 4826 00c8 00D2     		bcs	.L460
 4827 00ca 2F46     		mov	r7, r5
 4828              	.LVL714:
 4829              	.L460:
3596:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4830              		.loc 1 3596 0
 4831 00cc 04F13001 		add	r1, r4, #48
 4832 00d0 3A46     		mov	r2, r7
 4833 00d2 1944     		add	r1, r1, r3
 4834 00d4 4846     		mov	r0, r9
 4835 00d6 FFF7FEFF 		bl	mem_cpy
 4836              	.LVL715:
 4837              	.L456:
3534:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4838              		.loc 1 3534 0
 4839 00da B944     		add	r9, r9, r7
 4840              	.LVL716:
 4841 00dc A369     		ldr	r3, [r4, #24]
 4842 00de 3B44     		add	r3, r3, r7
 4843 00e0 A361     		str	r3, [r4, #24]
 4844 00e2 D8F80030 		ldr	r3, [r8]
 4845 00e6 3B44     		add	r3, r3, r7
 4846 00e8 C8F80030 		str	r3, [r8]
 4847 00ec ED1B     		subs	r5, r5, r7
 4848              	.LVL717:
 4849              	.L461:
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 4850              		.loc 1 3533 0
 4851 00ee 002D     		cmp	r5, #0
 4852 00f0 33D0     		beq	.L441
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 4853              		.loc 1 3535 0
 4854 00f2 A169     		ldr	r1, [r4, #24]
 4855 00f4 C1F30803 		ubfx	r3, r1, #0, #9
 4856 00f8 002B     		cmp	r3, #0
 4857 00fa DFD1     		bne	.L444
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 4858              		.loc 1 3536 0
 4859 00fc 039B     		ldr	r3, [sp, #12]
 4860 00fe 5F89     		ldrh	r7, [r3, #10]
 4861 0100 013F     		subs	r7, r7, #1
 4862              	.LVL718:
ARM GAS  /tmp/ccJz23SP.s 			page 202


3537:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4863              		.loc 1 3537 0
 4864 0102 17EA5127 		ands	r7, r7, r1, lsr #9
 4865              	.LVL719:
 4866 0106 08D1     		bne	.L445
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 4867              		.loc 1 3538 0
 4868 0108 0029     		cmp	r1, #0
 4869 010a 9BD1     		bne	.L446
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 4870              		.loc 1 3539 0
 4871 010c A068     		ldr	r0, [r4, #8]
 4872              	.LVL720:
 4873              	.L447:
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4874              		.loc 1 3550 0
 4875 010e 0128     		cmp	r0, #1
 4876 0110 A3D9     		bls	.L470
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4877              		.loc 1 3551 0
 4878 0112 B0F1FF3F 		cmp	r0, #-1
 4879 0116 A3D0     		beq	.L471
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4880              		.loc 1 3552 0
 4881 0118 E061     		str	r0, [r4, #28]
 4882              	.LVL721:
 4883              	.L445:
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 4884              		.loc 1 3554 0
 4885 011a 039B     		ldr	r3, [sp, #12]
 4886 011c 0193     		str	r3, [sp, #4]
 4887 011e E169     		ldr	r1, [r4, #28]
 4888 0120 1846     		mov	r0, r3
 4889 0122 FFF7FEFF 		bl	clust2sect
 4890              	.LVL722:
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4891              		.loc 1 3555 0
 4892 0126 8246     		mov	r10, r0
 4893 0128 0028     		cmp	r0, #0
 4894 012a 9CD0     		beq	.L472
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 4895              		.loc 1 3556 0
 4896 012c BA44     		add	r10, r10, r7
 4897              	.LVL723:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 4898              		.loc 1 3558 0
 4899 012e 5FEA552B 		lsrs	fp, r5, #9
 4900              	.LVL724:
 4901 0132 B0D0     		beq	.L452
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 4902              		.loc 1 3559 0
 4903 0134 07EB0B03 		add	r3, r7, fp
 4904 0138 019A     		ldr	r2, [sp, #4]
 4905 013a 5289     		ldrh	r2, [r2, #10]
 4906 013c 9342     		cmp	r3, r2
 4907 013e 01D9     		bls	.L453
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  /tmp/ccJz23SP.s 			page 203


 4908              		.loc 1 3560 0
 4909 0140 A2EB070B 		sub	fp, r2, r7
 4910              	.LVL725:
 4911              	.L453:
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4912              		.loc 1 3562 0
 4913 0144 5B46     		mov	r3, fp
 4914 0146 5246     		mov	r2, r10
 4915 0148 4946     		mov	r1, r9
 4916 014a 0198     		ldr	r0, [sp, #4]
 4917 014c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4918 014e FFF7FEFF 		bl	disk_read
 4919              	.LVL726:
 4920 0152 0028     		cmp	r0, #0
 4921 0154 8AD0     		beq	.L454
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4922              		.loc 1 3562 0 is_stmt 0 discriminator 1
 4923 0156 0126     		movs	r6, #1
 4924              	.LVL727:
 4925 0158 6675     		strb	r6, [r4, #21]
 4926              	.LVL728:
 4927              	.L441:
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4928              		.loc 1 3601 0 is_stmt 1
 4929 015a 3046     		mov	r0, r6
 4930 015c 05B0     		add	sp, sp, #20
 4931              	.LCFI54:
 4932              		.cfi_remember_state
 4933              		.cfi_def_cfa_offset 36
 4934              		@ sp needed
 4935 015e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4936              	.LVL729:
 4937              	.L468:
 4938              	.LCFI55:
 4939              		.cfi_restore_state
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4940              		.loc 1 3581 0
 4941 0162 0123     		movs	r3, #1
 4942 0164 04F13001 		add	r1, r4, #48
 4943 0168 0198     		ldr	r0, [sp, #4]
 4944 016a 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4945 016c FFF7FEFF 		bl	disk_write
 4946              	.LVL730:
 4947 0170 20B9     		cbnz	r0, .L473
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4948              		.loc 1 3582 0
 4949 0172 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4950 0174 03F07F03 		and	r3, r3, #127
 4951 0178 2375     		strb	r3, [r4, #20]
 4952 017a 93E7     		b	.L458
 4953              	.L473:
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4954              		.loc 1 3581 0 discriminator 1
 4955 017c 0126     		movs	r6, #1
 4956              	.LVL731:
 4957 017e 6675     		strb	r6, [r4, #21]
 4958 0180 EBE7     		b	.L441
ARM GAS  /tmp/ccJz23SP.s 			page 204


 4959              	.LVL732:
 4960              	.L469:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4961              		.loc 1 3585 0 discriminator 1
 4962 0182 0126     		movs	r6, #1
 4963              	.LVL733:
 4964 0184 6675     		strb	r6, [r4, #21]
 4965 0186 E8E7     		b	.L441
 4966              	.LVL734:
 4967              	.L463:
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4968              		.loc 1 3529 0
 4969 0188 0726     		movs	r6, #7
 4970              	.LVL735:
 4971 018a E6E7     		b	.L441
 4972              		.cfi_endproc
 4973              	.LFE369:
 4975              		.section	.text.f_write,"ax",%progbits
 4976              		.align	1
 4977              		.global	f_write
 4978              		.syntax unified
 4979              		.thumb
 4980              		.thumb_func
 4981              		.fpu fpv4-sp-d16
 4983              	f_write:
 4984              	.LFB370:
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4985              		.loc 1 3617 0
 4986              		.cfi_startproc
 4987              		@ args = 0, pretend = 0, frame = 16
 4988              		@ frame_needed = 0, uses_anonymous_args = 0
 4989              	.LVL736:
 4990 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4991              	.LCFI56:
 4992              		.cfi_def_cfa_offset 36
 4993              		.cfi_offset 4, -36
 4994              		.cfi_offset 5, -32
 4995              		.cfi_offset 6, -28
 4996              		.cfi_offset 7, -24
 4997              		.cfi_offset 8, -20
 4998              		.cfi_offset 9, -16
 4999              		.cfi_offset 10, -12
 5000              		.cfi_offset 11, -8
 5001              		.cfi_offset 14, -4
 5002 0004 85B0     		sub	sp, sp, #20
 5003              	.LCFI57:
 5004              		.cfi_def_cfa_offset 56
 5005 0006 0446     		mov	r4, r0
 5006 0008 8846     		mov	r8, r1
 5007 000a 1546     		mov	r5, r2
 5008 000c 9946     		mov	r9, r3
 5009              	.LVL737:
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 5010              		.loc 1 3625 0
 5011 000e 0023     		movs	r3, #0
 5012              	.LVL738:
 5013 0010 C9F80030 		str	r3, [r9]
ARM GAS  /tmp/ccJz23SP.s 			page 205


3626:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 5014              		.loc 1 3626 0
 5015 0014 0090     		str	r0, [sp]
 5016 0016 03A9     		add	r1, sp, #12
 5017              	.LVL739:
 5018 0018 FFF7FEFF 		bl	validate
 5019              	.LVL740:
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5020              		.loc 1 3627 0
 5021 001c 0746     		mov	r7, r0
 5022 001e 0028     		cmp	r0, #0
 5023 0020 42D1     		bne	.L475
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5024              		.loc 1 3627 0 is_stmt 0 discriminator 2
 5025 0022 677D     		ldrb	r7, [r4, #21]	@ zero_extendqisi2
 5026              	.LVL741:
 5027 0024 002F     		cmp	r7, #0
 5028 0026 3FD1     		bne	.L475
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5029              		.loc 1 3628 0 is_stmt 1
 5030 0028 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5031 002a 13F0020F 		tst	r3, #2
 5032 002e 00F0C880 		beq	.L497
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 5033              		.loc 1 3631 0
 5034 0032 A369     		ldr	r3, [r4, #24]
 5035 0034 EB42     		cmn	r3, r5
 5036 0036 C0F09A80 		bcc	.L495
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5037              		.loc 1 3632 0
 5038 003a DD43     		mvns	r5, r3
 5039              	.LVL742:
 5040 003c 97E0     		b	.L495
 5041              	.LVL743:
 5042              	.L479:
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 5043              		.loc 1 3647 0
 5044 003e E36A     		ldr	r3, [r4, #44]
 5045 0040 002B     		cmp	r3, #0
 5046 0042 35D0     		beq	.L481
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 5047              		.loc 1 3648 0
 5048 0044 2046     		mov	r0, r4
 5049 0046 FFF7FEFF 		bl	clmt_clust
 5050              	.LVL744:
 5051              	.L480:
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 5052              		.loc 1 3655 0
 5053 004a 0028     		cmp	r0, #0
 5054 004c 00F0B480 		beq	.L482
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5055              		.loc 1 3656 0
 5056 0050 0128     		cmp	r0, #1
 5057 0052 32D0     		beq	.L500
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5058              		.loc 1 3657 0
 5059 0054 B0F1FF3F 		cmp	r0, #-1
ARM GAS  /tmp/ccJz23SP.s 			page 206


 5060 0058 32D0     		beq	.L501
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 5061              		.loc 1 3658 0
 5062 005a E061     		str	r0, [r4, #28]
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5063              		.loc 1 3659 0
 5064 005c A368     		ldr	r3, [r4, #8]
 5065 005e 03B9     		cbnz	r3, .L478
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5066              		.loc 1 3659 0 is_stmt 0 discriminator 1
 5067 0060 A060     		str	r0, [r4, #8]
 5068              	.LVL745:
 5069              	.L478:
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5070              		.loc 1 3664 0 is_stmt 1
 5071 0062 94F91430 		ldrsb	r3, [r4, #20]
 5072 0066 002B     		cmp	r3, #0
 5073 0068 2DDB     		blt	.L502
 5074              	.L485:
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 5075              		.loc 1 3669 0
 5076 006a 039B     		ldr	r3, [sp, #12]
 5077 006c 0193     		str	r3, [sp, #4]
 5078 006e E169     		ldr	r1, [r4, #28]
 5079 0070 1846     		mov	r0, r3
 5080 0072 FFF7FEFF 		bl	clust2sect
 5081              	.LVL746:
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5082              		.loc 1 3670 0
 5083 0076 8246     		mov	r10, r0
 5084 0078 0028     		cmp	r0, #0
 5085 007a 35D0     		beq	.L503
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 5086              		.loc 1 3671 0
 5087 007c B244     		add	r10, r10, r6
 5088              	.LVL747:
3673:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 5089              		.loc 1 3673 0
 5090 007e 5FEA552B 		lsrs	fp, r5, #9
 5091              	.LVL748:
 5092 0082 49D0     		beq	.L488
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 5093              		.loc 1 3674 0
 5094 0084 06EB0B03 		add	r3, r6, fp
 5095 0088 019A     		ldr	r2, [sp, #4]
 5096 008a 5289     		ldrh	r2, [r2, #10]
 5097 008c 9342     		cmp	r3, r2
 5098 008e 01D9     		bls	.L489
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5099              		.loc 1 3675 0
 5100 0090 A2EB060B 		sub	fp, r2, r6
 5101              	.LVL749:
 5102              	.L489:
3677:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5103              		.loc 1 3677 0
 5104 0094 5B46     		mov	r3, fp
 5105 0096 5246     		mov	r2, r10
ARM GAS  /tmp/ccJz23SP.s 			page 207


 5106 0098 4146     		mov	r1, r8
 5107 009a 0198     		ldr	r0, [sp, #4]
 5108 009c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5109 009e FFF7FEFF 		bl	disk_write
 5110              	.LVL750:
 5111 00a2 20B3     		cbz	r0, .L490
3677:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5112              		.loc 1 3677 0 is_stmt 0 discriminator 1
 5113 00a4 0127     		movs	r7, #1
 5114              	.LVL751:
 5115 00a6 6775     		strb	r7, [r4, #21]
 5116              	.LVL752:
 5117              	.L475:
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5118              		.loc 1 3723 0 is_stmt 1
 5119 00a8 3846     		mov	r0, r7
 5120 00aa 05B0     		add	sp, sp, #20
 5121              	.LCFI58:
 5122              		.cfi_remember_state
 5123              		.cfi_def_cfa_offset 36
 5124              		@ sp needed
 5125 00ac BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5126              	.LVL753:
 5127              	.L481:
 5128              	.LCFI59:
 5129              		.cfi_restore_state
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5130              		.loc 1 3652 0
 5131 00b0 E169     		ldr	r1, [r4, #28]
 5132 00b2 0098     		ldr	r0, [sp]
 5133 00b4 FFF7FEFF 		bl	create_chain
 5134              	.LVL754:
 5135 00b8 C7E7     		b	.L480
 5136              	.L500:
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5137              		.loc 1 3656 0 discriminator 1
 5138 00ba 0227     		movs	r7, #2
 5139              	.LVL755:
 5140 00bc 6775     		strb	r7, [r4, #21]
 5141 00be F3E7     		b	.L475
 5142              	.LVL756:
 5143              	.L501:
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5144              		.loc 1 3657 0 discriminator 1
 5145 00c0 0127     		movs	r7, #1
 5146              	.LVL757:
 5147 00c2 6775     		strb	r7, [r4, #21]
 5148 00c4 F0E7     		b	.L475
 5149              	.LVL758:
 5150              	.L502:
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5151              		.loc 1 3665 0
 5152 00c6 0123     		movs	r3, #1
 5153 00c8 226A     		ldr	r2, [r4, #32]
 5154 00ca 04F13001 		add	r1, r4, #48
 5155 00ce 0398     		ldr	r0, [sp, #12]
 5156 00d0 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccJz23SP.s 			page 208


 5157 00d2 FFF7FEFF 		bl	disk_write
 5158              	.LVL759:
 5159 00d6 20B9     		cbnz	r0, .L504
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5160              		.loc 1 3666 0
 5161 00d8 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5162 00da 03F07F03 		and	r3, r3, #127
 5163 00de 2375     		strb	r3, [r4, #20]
 5164 00e0 C3E7     		b	.L485
 5165              	.L504:
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5166              		.loc 1 3665 0 discriminator 1
 5167 00e2 0127     		movs	r7, #1
 5168              	.LVL760:
 5169 00e4 6775     		strb	r7, [r4, #21]
 5170 00e6 DFE7     		b	.L475
 5171              	.LVL761:
 5172              	.L503:
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5173              		.loc 1 3670 0 discriminator 1
 5174 00e8 0227     		movs	r7, #2
 5175              	.LVL762:
 5176 00ea 6775     		strb	r7, [r4, #21]
 5177 00ec DCE7     		b	.L475
 5178              	.LVL763:
 5179              	.L490:
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 5180              		.loc 1 3685 0
 5181 00ee 216A     		ldr	r1, [r4, #32]
 5182 00f0 A1EB0A01 		sub	r1, r1, r10
 5183 00f4 5945     		cmp	r1, fp
 5184 00f6 02D3     		bcc	.L505
 5185              	.L491:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 5186              		.loc 1 3691 0
 5187 00f8 4FEA4B26 		lsl	r6, fp, #9
 5188              	.LVL764:
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5189              		.loc 1 3692 0
 5190 00fc 28E0     		b	.L492
 5191              	.LVL765:
 5192              	.L505:
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5193              		.loc 1 3686 0
 5194 00fe 4FF40072 		mov	r2, #512
 5195 0102 08EB4121 		add	r1, r8, r1, lsl #9
 5196 0106 04F13000 		add	r0, r4, #48
 5197 010a FFF7FEFF 		bl	mem_cpy
 5198              	.LVL766:
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5199              		.loc 1 3687 0
 5200 010e 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5201 0110 03F07F03 		and	r3, r3, #127
 5202 0114 2375     		strb	r3, [r4, #20]
 5203 0116 EFE7     		b	.L491
 5204              	.L488:
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
ARM GAS  /tmp/ccJz23SP.s 			page 209


 5205              		.loc 1 3700 0
 5206 0118 236A     		ldr	r3, [r4, #32]
 5207 011a 5345     		cmp	r3, r10
 5208 011c 03D0     		beq	.L493
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5209              		.loc 1 3701 0 discriminator 1
 5210 011e A269     		ldr	r2, [r4, #24]
 5211 0120 E368     		ldr	r3, [r4, #12]
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5212              		.loc 1 3700 0 discriminator 1
 5213 0122 9A42     		cmp	r2, r3
 5214 0124 3BD3     		bcc	.L506
 5215              	.L493:
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5216              		.loc 1 3706 0
 5217 0126 C4F820A0 		str	r10, [r4, #32]
 5218              	.LVL767:
 5219              	.L477:
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 5220              		.loc 1 3708 0
 5221 012a A369     		ldr	r3, [r4, #24]
 5222 012c C3F30803 		ubfx	r3, r3, #0, #9
 5223 0130 C3F50076 		rsb	r6, r3, #512
 5224              	.LVL768:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 5225              		.loc 1 3709 0
 5226 0134 B542     		cmp	r5, r6
 5227 0136 00D2     		bcs	.L494
 5228 0138 2E46     		mov	r6, r5
 5229              	.LVL769:
 5230              	.L494:
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
 5231              		.loc 1 3715 0
 5232 013a 04F13000 		add	r0, r4, #48
 5233 013e 3246     		mov	r2, r6
 5234 0140 4146     		mov	r1, r8
 5235 0142 1844     		add	r0, r0, r3
 5236 0144 FFF7FEFF 		bl	mem_cpy
 5237              	.LVL770:
3716:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5238              		.loc 1 3716 0
 5239 0148 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5240 014a 63F07F03 		orn	r3, r3, #127
 5241 014e 2375     		strb	r3, [r4, #20]
 5242              	.L492:
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 5243              		.loc 1 3636 0
 5244 0150 B044     		add	r8, r8, r6
 5245              	.LVL771:
 5246 0152 A369     		ldr	r3, [r4, #24]
 5247 0154 3344     		add	r3, r3, r6
 5248 0156 A361     		str	r3, [r4, #24]
 5249 0158 E268     		ldr	r2, [r4, #12]
 5250 015a 9342     		cmp	r3, r2
 5251 015c 38BF     		it	cc
 5252 015e 1346     		movcc	r3, r2
 5253 0160 E360     		str	r3, [r4, #12]
ARM GAS  /tmp/ccJz23SP.s 			page 210


 5254 0162 D9F80030 		ldr	r3, [r9]
 5255 0166 3344     		add	r3, r3, r6
 5256 0168 C9F80030 		str	r3, [r9]
 5257 016c AD1B     		subs	r5, r5, r6
 5258              	.LVL772:
 5259              	.L495:
3635:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 5260              		.loc 1 3635 0
 5261 016e 1DB3     		cbz	r5, .L482
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 5262              		.loc 1 3637 0
 5263 0170 A169     		ldr	r1, [r4, #24]
 5264 0172 C1F30803 		ubfx	r3, r1, #0, #9
 5265 0176 002B     		cmp	r3, #0
 5266 0178 D7D1     		bne	.L477
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 5267              		.loc 1 3638 0
 5268 017a 039B     		ldr	r3, [sp, #12]
 5269 017c 5E89     		ldrh	r6, [r3, #10]
 5270 017e 013E     		subs	r6, r6, #1
 5271              	.LVL773:
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 5272              		.loc 1 3639 0
 5273 0180 16EA5126 		ands	r6, r6, r1, lsr #9
 5274              	.LVL774:
 5275 0184 7FF46DAF 		bne	.L478
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 5276              		.loc 1 3640 0
 5277 0188 0029     		cmp	r1, #0
 5278 018a 7FF458AF 		bne	.L479
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 5279              		.loc 1 3641 0
 5280 018e A068     		ldr	r0, [r4, #8]
 5281              	.LVL775:
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 5282              		.loc 1 3642 0
 5283 0190 0028     		cmp	r0, #0
 5284 0192 7FF45AAF 		bne	.L480
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5285              		.loc 1 3643 0
 5286 0196 0098     		ldr	r0, [sp]
 5287              	.LVL776:
 5288 0198 FFF7FEFF 		bl	create_chain
 5289              	.LVL777:
 5290 019c 55E7     		b	.L480
 5291              	.LVL778:
 5292              	.L506:
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 5293              		.loc 1 3702 0
 5294 019e 0123     		movs	r3, #1
 5295 01a0 5246     		mov	r2, r10
 5296 01a2 04F13001 		add	r1, r4, #48
 5297 01a6 0198     		ldr	r0, [sp, #4]
 5298 01a8 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5299 01aa FFF7FEFF 		bl	disk_read
 5300              	.LVL779:
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
ARM GAS  /tmp/ccJz23SP.s 			page 211


 5301              		.loc 1 3701 0
 5302 01ae 0028     		cmp	r0, #0
 5303 01b0 B9D0     		beq	.L493
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5304              		.loc 1 3703 0
 5305 01b2 0127     		movs	r7, #1
 5306              	.LVL780:
 5307 01b4 6775     		strb	r7, [r4, #21]
 5308 01b6 77E7     		b	.L475
 5309              	.LVL781:
 5310              	.L482:
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5311              		.loc 1 3720 0
 5312 01b8 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5313 01ba 43F04003 		orr	r3, r3, #64
 5314 01be 2375     		strb	r3, [r4, #20]
3722:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5315              		.loc 1 3722 0
 5316 01c0 72E7     		b	.L475
 5317              	.LVL782:
 5318              	.L497:
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5319              		.loc 1 3628 0
 5320 01c2 0727     		movs	r7, #7
 5321              	.LVL783:
 5322 01c4 70E7     		b	.L475
 5323              		.cfi_endproc
 5324              	.LFE370:
 5326              		.section	.text.putc_bfd,"ax",%progbits
 5327              		.align	1
 5328              		.syntax unified
 5329              		.thumb
 5330              		.thumb_func
 5331              		.fpu fpv4-sp-d16
 5333              	putc_bfd:
 5334              	.LFB385:
5921:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
 5335              		.loc 1 5921 0
 5336              		.cfi_startproc
 5337              		@ args = 0, pretend = 0, frame = 8
 5338              		@ frame_needed = 0, uses_anonymous_args = 0
 5339              	.LVL784:
 5340 0000 70B5     		push	{r4, r5, r6, lr}
 5341              	.LCFI60:
 5342              		.cfi_def_cfa_offset 16
 5343              		.cfi_offset 4, -16
 5344              		.cfi_offset 5, -12
 5345              		.cfi_offset 6, -8
 5346              		.cfi_offset 14, -4
 5347 0002 82B0     		sub	sp, sp, #8
 5348              	.LCFI61:
 5349              		.cfi_def_cfa_offset 24
 5350 0004 0446     		mov	r4, r0
 5351 0006 0D46     		mov	r5, r1
5926:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
 5352              		.loc 1 5926 0
 5353 0008 0A29     		cmp	r1, #10
ARM GAS  /tmp/ccJz23SP.s 			page 212


 5354 000a 0DD0     		beq	.L514
 5355              	.LVL785:
 5356              	.L508:
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 5357              		.loc 1 5930 0
 5358 000c 6368     		ldr	r3, [r4, #4]
 5359              	.LVL786:
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5360              		.loc 1 5931 0
 5361 000e 002B     		cmp	r3, #0
 5362 0010 08DB     		blt	.L507
5960:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5363              		.loc 1 5960 0
 5364 0012 5E1C     		adds	r6, r3, #1
 5365              	.LVL787:
 5366 0014 2344     		add	r3, r3, r4
 5367 0016 1D73     		strb	r5, [r3, #12]
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 5368              		.loc 1 5963 0
 5369 0018 3C2E     		cmp	r6, #60
 5370 001a 09DC     		bgt	.L515
 5371              	.LVL788:
 5372              	.L510:
5967:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 5373              		.loc 1 5967 0
 5374 001c 6660     		str	r6, [r4, #4]
5968:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5375              		.loc 1 5968 0
 5376 001e A368     		ldr	r3, [r4, #8]
 5377 0020 0133     		adds	r3, r3, #1
 5378 0022 A360     		str	r3, [r4, #8]
 5379              	.LVL789:
 5380              	.L507:
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5381              		.loc 1 5969 0
 5382 0024 02B0     		add	sp, sp, #8
 5383              	.LCFI62:
 5384              		.cfi_remember_state
 5385              		.cfi_def_cfa_offset 16
 5386              		@ sp needed
 5387 0026 70BD     		pop	{r4, r5, r6, pc}
 5388              	.LVL790:
 5389              	.L514:
 5390              	.LCFI63:
 5391              		.cfi_restore_state
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5392              		.loc 1 5927 0
 5393 0028 0D21     		movs	r1, #13
 5394              	.LVL791:
 5395 002a FFF7E9FF 		bl	putc_bfd
 5396              	.LVL792:
 5397 002e EDE7     		b	.L508
 5398              	.LVL793:
 5399              	.L515:
5964:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 5400              		.loc 1 5964 0
 5401 0030 01AB     		add	r3, sp, #4
ARM GAS  /tmp/ccJz23SP.s 			page 213


 5402 0032 3246     		mov	r2, r6
 5403 0034 04F10C01 		add	r1, r4, #12
 5404 0038 2068     		ldr	r0, [r4]
 5405 003a FFF7FEFF 		bl	f_write
 5406              	.LVL794:
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5407              		.loc 1 5965 0
 5408 003e 019B     		ldr	r3, [sp, #4]
 5409 0040 9E42     		cmp	r6, r3
 5410 0042 02D0     		beq	.L516
 5411 0044 4FF0FF36 		mov	r6, #-1
 5412              	.LVL795:
 5413 0048 E8E7     		b	.L510
 5414              	.LVL796:
 5415              	.L516:
 5416 004a 0026     		movs	r6, #0
 5417              	.LVL797:
 5418 004c E6E7     		b	.L510
 5419              		.cfi_endproc
 5420              	.LFE385:
 5422              		.section	.text.putc_flush,"ax",%progbits
 5423              		.align	1
 5424              		.syntax unified
 5425              		.thumb
 5426              		.thumb_func
 5427              		.fpu fpv4-sp-d16
 5429              	putc_flush:
 5430              	.LFB386:
5976:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5431              		.loc 1 5976 0
 5432              		.cfi_startproc
 5433              		@ args = 0, pretend = 0, frame = 8
 5434              		@ frame_needed = 0, uses_anonymous_args = 0
 5435              	.LVL798:
5979:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 5436              		.loc 1 5979 0
 5437 0000 4268     		ldr	r2, [r0, #4]
 5438 0002 002A     		cmp	r2, #0
 5439 0004 10DB     		blt	.L519
5976:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5440              		.loc 1 5976 0
 5441 0006 10B5     		push	{r4, lr}
 5442              	.LCFI64:
 5443              		.cfi_def_cfa_offset 8
 5444              		.cfi_offset 4, -8
 5445              		.cfi_offset 14, -4
 5446 0008 82B0     		sub	sp, sp, #8
 5447              	.LCFI65:
 5448              		.cfi_def_cfa_offset 16
 5449 000a 0446     		mov	r4, r0
5980:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
 5450              		.loc 1 5980 0
 5451 000c 01AB     		add	r3, sp, #4
 5452 000e 00F10C01 		add	r1, r0, #12
 5453 0012 0068     		ldr	r0, [r0]
 5454              	.LVL799:
 5455 0014 FFF7FEFF 		bl	f_write
ARM GAS  /tmp/ccJz23SP.s 			page 214


 5456              	.LVL800:
 5457 0018 48B9     		cbnz	r0, .L520
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5458              		.loc 1 5981 0
 5459 001a 6268     		ldr	r2, [r4, #4]
 5460 001c 019B     		ldr	r3, [sp, #4]
 5461 001e 9A42     		cmp	r2, r3
 5462 0020 08D1     		bne	.L521
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5463              		.loc 1 5981 0 is_stmt 0 discriminator 1
 5464 0022 A068     		ldr	r0, [r4, #8]
 5465              	.L517:
5983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5466              		.loc 1 5983 0 is_stmt 1
 5467 0024 02B0     		add	sp, sp, #8
 5468              	.LCFI66:
 5469              		.cfi_def_cfa_offset 8
 5470              		@ sp needed
 5471 0026 10BD     		pop	{r4, pc}
 5472              	.LVL801:
 5473              	.L519:
 5474              	.LCFI67:
 5475              		.cfi_def_cfa_offset 0
 5476              		.cfi_restore 4
 5477              		.cfi_restore 14
5982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5478              		.loc 1 5982 0
 5479 0028 4FF0FF30 		mov	r0, #-1
 5480              	.LVL802:
5983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5481              		.loc 1 5983 0
 5482 002c 7047     		bx	lr
 5483              	.LVL803:
 5484              	.L520:
 5485              	.LCFI68:
 5486              		.cfi_def_cfa_offset 16
 5487              		.cfi_offset 4, -8
 5488              		.cfi_offset 14, -4
5982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5489              		.loc 1 5982 0
 5490 002e 4FF0FF30 		mov	r0, #-1
 5491 0032 F7E7     		b	.L517
 5492              	.L521:
 5493 0034 4FF0FF30 		mov	r0, #-1
 5494 0038 F4E7     		b	.L517
 5495              		.cfi_endproc
 5496              	.LFE386:
 5498              		.section	.text.f_sync,"ax",%progbits
 5499              		.align	1
 5500              		.global	f_sync
 5501              		.syntax unified
 5502              		.thumb
 5503              		.thumb_func
 5504              		.fpu fpv4-sp-d16
 5506              	f_sync:
 5507              	.LFB371:
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  /tmp/ccJz23SP.s 			page 215


 5508              		.loc 1 3735 0
 5509              		.cfi_startproc
 5510              		@ args = 0, pretend = 0, frame = 8
 5511              		@ frame_needed = 0, uses_anonymous_args = 0
 5512              	.LVL804:
 5513 0000 70B5     		push	{r4, r5, r6, lr}
 5514              	.LCFI69:
 5515              		.cfi_def_cfa_offset 16
 5516              		.cfi_offset 4, -16
 5517              		.cfi_offset 5, -12
 5518              		.cfi_offset 6, -8
 5519              		.cfi_offset 14, -4
 5520 0002 82B0     		sub	sp, sp, #8
 5521              	.LCFI70:
 5522              		.cfi_def_cfa_offset 24
 5523 0004 0446     		mov	r4, r0
3745:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5524              		.loc 1 3745 0
 5525 0006 01A9     		add	r1, sp, #4
 5526 0008 FFF7FEFF 		bl	validate
 5527              	.LVL805:
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 5528              		.loc 1 3746 0
 5529 000c 0346     		mov	r3, r0
 5530 000e 78B9     		cbnz	r0, .L527
3747:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5531              		.loc 1 3747 0
 5532 0010 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5533 0012 12F0400F 		tst	r2, #64
 5534 0016 0BD0     		beq	.L527
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 5535              		.loc 1 3749 0
 5536 0018 12F0800F 		tst	r2, #128
 5537 001c 0BD1     		bne	.L531
 5538              	.LVL806:
 5539              	.L528:
3755:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 5540              		.loc 1 3755 0
 5541 001e FFF7FEFF 		bl	get_fattime
 5542              	.LVL807:
 5543 0022 0646     		mov	r6, r0
 5544              	.LVL808:
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 5545              		.loc 1 3785 0
 5546 0024 616A     		ldr	r1, [r4, #36]
 5547 0026 0198     		ldr	r0, [sp, #4]
 5548              	.LVL809:
 5549 0028 FFF7FEFF 		bl	move_window
 5550              	.LVL810:
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
 5551              		.loc 1 3786 0
 5552 002c 0346     		mov	r3, r0
 5553 002e 80B1     		cbz	r0, .L532
 5554              	.LVL811:
 5555              	.L527:
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5556              		.loc 1 3802 0
ARM GAS  /tmp/ccJz23SP.s 			page 216


 5557 0030 1846     		mov	r0, r3
 5558 0032 02B0     		add	sp, sp, #8
 5559              	.LCFI71:
 5560              		.cfi_remember_state
 5561              		.cfi_def_cfa_offset 16
 5562              		@ sp needed
 5563 0034 70BD     		pop	{r4, r5, r6, pc}
 5564              	.LVL812:
 5565              	.L531:
 5566              	.LCFI72:
 5567              		.cfi_restore_state
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5568              		.loc 1 3750 0
 5569 0036 0123     		movs	r3, #1
 5570 0038 226A     		ldr	r2, [r4, #32]
 5571 003a 04F13001 		add	r1, r4, #48
 5572 003e 0198     		ldr	r0, [sp, #4]
 5573              	.LVL813:
 5574 0040 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5575 0042 FFF7FEFF 		bl	disk_write
 5576              	.LVL814:
 5577 0046 48BB     		cbnz	r0, .L529
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5578              		.loc 1 3751 0
 5579 0048 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5580 004a 03F07F03 		and	r3, r3, #127
 5581 004e 2375     		strb	r3, [r4, #20]
 5582 0050 E5E7     		b	.L528
 5583              	.LVL815:
 5584              	.L532:
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 5585              		.loc 1 3787 0
 5586 0052 A56A     		ldr	r5, [r4, #40]
 5587              	.LVL816:
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 5588              		.loc 1 3788 0
 5589 0054 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 5590 0056 43F02003 		orr	r3, r3, #32
 5591 005a EB72     		strb	r3, [r5, #11]
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 5592              		.loc 1 3789 0
 5593 005c A268     		ldr	r2, [r4, #8]
 5594 005e 2946     		mov	r1, r5
 5595 0060 2068     		ldr	r0, [r4]
 5596              	.LVL817:
 5597 0062 FFF7FEFF 		bl	st_clust
 5598              	.LVL818:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 5599              		.loc 1 3790 0
 5600 0066 E168     		ldr	r1, [r4, #12]
 5601 0068 05F11C00 		add	r0, r5, #28
 5602 006c FFF7FEFF 		bl	st_dword
 5603              	.LVL819:
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 5604              		.loc 1 3791 0
 5605 0070 3146     		mov	r1, r6
 5606 0072 05F11600 		add	r0, r5, #22
ARM GAS  /tmp/ccJz23SP.s 			page 217


 5607 0076 FFF7FEFF 		bl	st_dword
 5608              	.LVL820:
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 5609              		.loc 1 3792 0
 5610 007a 0021     		movs	r1, #0
 5611 007c 05F11200 		add	r0, r5, #18
 5612 0080 FFF7FEFF 		bl	st_word
 5613              	.LVL821:
3793:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 5614              		.loc 1 3793 0
 5615 0084 019B     		ldr	r3, [sp, #4]
 5616 0086 0122     		movs	r2, #1
 5617 0088 DA70     		strb	r2, [r3, #3]
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 5618              		.loc 1 3794 0
 5619 008a 0198     		ldr	r0, [sp, #4]
 5620 008c FFF7FEFF 		bl	sync_fs
 5621              	.LVL822:
 5622 0090 0346     		mov	r3, r0
 5623              	.LVL823:
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5624              		.loc 1 3795 0
 5625 0092 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5626 0094 22F04002 		bic	r2, r2, #64
 5627 0098 2275     		strb	r2, [r4, #20]
 5628 009a C9E7     		b	.L527
 5629              	.LVL824:
 5630              	.L529:
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5631              		.loc 1 3750 0
 5632 009c 0123     		movs	r3, #1
 5633 009e C7E7     		b	.L527
 5634              		.cfi_endproc
 5635              	.LFE371:
 5637              		.section	.text.f_close,"ax",%progbits
 5638              		.align	1
 5639              		.global	f_close
 5640              		.syntax unified
 5641              		.thumb
 5642              		.thumb_func
 5643              		.fpu fpv4-sp-d16
 5645              	f_close:
 5646              	.LFB372:
3816:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5647              		.loc 1 3816 0
 5648              		.cfi_startproc
 5649              		@ args = 0, pretend = 0, frame = 8
 5650              		@ frame_needed = 0, uses_anonymous_args = 0
 5651              	.LVL825:
 5652 0000 10B5     		push	{r4, lr}
 5653              	.LCFI73:
 5654              		.cfi_def_cfa_offset 8
 5655              		.cfi_offset 4, -8
 5656              		.cfi_offset 14, -4
 5657 0002 82B0     		sub	sp, sp, #8
 5658              	.LCFI74:
 5659              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccJz23SP.s 			page 218


 5660 0004 0446     		mov	r4, r0
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 5661              		.loc 1 3821 0
 5662 0006 FFF7FEFF 		bl	f_sync
 5663              	.LVL826:
3822:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5664              		.loc 1 3822 0
 5665 000a 0346     		mov	r3, r0
 5666 000c 10B1     		cbz	r0, .L536
 5667              	.L534:
 5668              	.LVL827:
3840:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5669              		.loc 1 3840 0
 5670 000e 1846     		mov	r0, r3
 5671 0010 02B0     		add	sp, sp, #8
 5672              	.LCFI75:
 5673              		.cfi_remember_state
 5674              		.cfi_def_cfa_offset 8
 5675              		@ sp needed
 5676 0012 10BD     		pop	{r4, pc}
 5677              	.LVL828:
 5678              	.L536:
 5679              	.LCFI76:
 5680              		.cfi_restore_state
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5681              		.loc 1 3825 0
 5682 0014 01A9     		add	r1, sp, #4
 5683 0016 2046     		mov	r0, r4
 5684              	.LVL829:
 5685 0018 FFF7FEFF 		bl	validate
 5686              	.LVL830:
3826:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 5687              		.loc 1 3826 0
 5688 001c 0346     		mov	r3, r0
 5689 001e 0028     		cmp	r0, #0
 5690 0020 F5D1     		bne	.L534
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 5691              		.loc 1 3828 0
 5692 0022 2069     		ldr	r0, [r4, #16]
 5693              	.LVL831:
 5694 0024 FFF7FEFF 		bl	dec_lock
 5695              	.LVL832:
3829:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5696              		.loc 1 3829 0
 5697 0028 0346     		mov	r3, r0
 5698 002a 0028     		cmp	r0, #0
 5699 002c EFD1     		bne	.L534
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5700              		.loc 1 3832 0
 5701 002e 0022     		movs	r2, #0
 5702 0030 2260     		str	r2, [r4]
 5703 0032 ECE7     		b	.L534
 5704              		.cfi_endproc
 5705              	.LFE372:
 5707              		.section	.text.f_lseek,"ax",%progbits
 5708              		.align	1
 5709              		.global	f_lseek
ARM GAS  /tmp/ccJz23SP.s 			page 219


 5710              		.syntax unified
 5711              		.thumb
 5712              		.thumb_func
 5713              		.fpu fpv4-sp-d16
 5715              	f_lseek:
 5716              	.LFB373:
4005:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5717              		.loc 1 4005 0
 5718              		.cfi_startproc
 5719              		@ args = 0, pretend = 0, frame = 16
 5720              		@ frame_needed = 0, uses_anonymous_args = 0
 5721              	.LVL833:
 5722 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5723              	.LCFI77:
 5724              		.cfi_def_cfa_offset 36
 5725              		.cfi_offset 4, -36
 5726              		.cfi_offset 5, -32
 5727              		.cfi_offset 6, -28
 5728              		.cfi_offset 7, -24
 5729              		.cfi_offset 8, -20
 5730              		.cfi_offset 9, -16
 5731              		.cfi_offset 10, -12
 5732              		.cfi_offset 11, -8
 5733              		.cfi_offset 14, -4
 5734 0004 85B0     		sub	sp, sp, #20
 5735              	.LCFI78:
 5736              		.cfi_def_cfa_offset 56
 5737 0006 0446     		mov	r4, r0
 5738 0008 0F46     		mov	r7, r1
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 5739              		.loc 1 4014 0
 5740 000a 0646     		mov	r6, r0
 5741 000c 03A9     		add	r1, sp, #12
 5742              	.LVL834:
 5743 000e FFF7FEFF 		bl	validate
 5744              	.LVL835:
4015:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5745              		.loc 1 4015 0
 5746 0012 0546     		mov	r5, r0
 5747 0014 00B9     		cbnz	r0, .L538
4015:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5748              		.loc 1 4015 0 is_stmt 0 discriminator 1
 5749 0016 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 5750              	.LVL836:
 5751              	.L538:
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5752              		.loc 1 4021 0 is_stmt 1
 5753 0018 6DB9     		cbnz	r5, .L539
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 5754              		.loc 1 4024 0
 5755 001a E36A     		ldr	r3, [r4, #44]
 5756 001c 002B     		cmp	r3, #0
 5757 001e 00F08D80 		beq	.L540
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 5758              		.loc 1 4025 0
 5759 0022 B7F1FF3F 		cmp	r7, #-1
 5760 0026 0AD0     		beq	.L581
ARM GAS  /tmp/ccJz23SP.s 			page 220


4051:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
 5761              		.loc 1 4051 0
 5762 0028 E668     		ldr	r6, [r4, #12]
 5763 002a BE42     		cmp	r6, r7
 5764 002c 00D3     		bcc	.L548
 5765 002e 3E46     		mov	r6, r7
 5766              	.L548:
 5767              	.LVL837:
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 5768              		.loc 1 4052 0
 5769 0030 A661     		str	r6, [r4, #24]
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 5770              		.loc 1 4053 0
 5771 0032 002E     		cmp	r6, #0
 5772 0034 43D1     		bne	.L582
 5773              	.LVL838:
 5774              	.L539:
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5775              		.loc 1 4153 0
 5776 0036 2846     		mov	r0, r5
 5777 0038 05B0     		add	sp, sp, #20
 5778              	.LCFI79:
 5779              		.cfi_remember_state
 5780              		.cfi_def_cfa_offset 36
 5781              		@ sp needed
 5782 003a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5783              	.LVL839:
 5784              	.L581:
 5785              	.LCFI80:
 5786              		.cfi_restore_state
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5787              		.loc 1 4027 0
 5788 003e 1A1D     		adds	r2, r3, #4
 5789 0040 0192     		str	r2, [sp, #4]
 5790              	.LVL840:
 5791 0042 D3F800B0 		ldr	fp, [r3]
 5792              	.LVL841:
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 5793              		.loc 1 4028 0
 5794 0046 D4F808A0 		ldr	r10, [r4, #8]
 5795              	.LVL842:
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 5796              		.loc 1 4029 0
 5797 004a BAF1000F 		cmp	r10, #0
 5798 004e 2AD0     		beq	.L573
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5799              		.loc 1 4027 0
 5800 0050 4FF00209 		mov	r9, #2
 5801              	.LVL843:
 5802              	.L547:
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 5803              		.loc 1 4032 0
 5804 0054 09F10209 		add	r9, r9, #2
 5805              	.LVL844:
 5806 0058 5746     		mov	r7, r10
 5807 005a 4FF00008 		mov	r8, #0
 5808              	.LVL845:
ARM GAS  /tmp/ccJz23SP.s 			page 221


 5809              	.L545:
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 5810              		.loc 1 4034 0
 5811 005e 08F10108 		add	r8, r8, #1
 5812              	.LVL846:
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5813              		.loc 1 4035 0
 5814 0062 3946     		mov	r1, r7
 5815 0064 3046     		mov	r0, r6
 5816 0066 FFF7FEFF 		bl	get_fat
 5817              	.LVL847:
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5818              		.loc 1 4036 0
 5819 006a 0128     		cmp	r0, #1
 5820 006c 15D9     		bls	.L583
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5821              		.loc 1 4037 0
 5822 006e B0F1FF3F 		cmp	r0, #-1
 5823 0072 15D0     		beq	.L584
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5824              		.loc 1 4038 0
 5825 0074 7B1C     		adds	r3, r7, #1
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5826              		.loc 1 4035 0
 5827 0076 0746     		mov	r7, r0
 5828              	.LVL848:
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5829              		.loc 1 4038 0
 5830 0078 8342     		cmp	r3, r0
 5831 007a F0D0     		beq	.L545
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 5832              		.loc 1 4039 0
 5833 007c CB45     		cmp	fp, r9
 5834 007e 06D3     		bcc	.L546
 5835              	.LVL849:
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5836              		.loc 1 4040 0
 5837 0080 019A     		ldr	r2, [sp, #4]
 5838 0082 1346     		mov	r3, r2
 5839              	.LVL850:
 5840 0084 43F8088B 		str	r8, [r3], #8
 5841              	.LVL851:
 5842 0088 C2F804A0 		str	r10, [r2, #4]
 5843 008c 0193     		str	r3, [sp, #4]
 5844              	.LVL852:
 5845              	.L546:
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5846              		.loc 1 4042 0
 5847 008e 039B     		ldr	r3, [sp, #12]
 5848 0090 5B69     		ldr	r3, [r3, #20]
 5849 0092 8342     		cmp	r3, r0
 5850 0094 09D9     		bls	.L542
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5851              		.loc 1 4035 0
 5852 0096 8246     		mov	r10, r0
 5853              	.LVL853:
 5854 0098 DCE7     		b	.L547
ARM GAS  /tmp/ccJz23SP.s 			page 222


 5855              	.LVL854:
 5856              	.L583:
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5857              		.loc 1 4036 0 discriminator 1
 5858 009a 0225     		movs	r5, #2
 5859              	.LVL855:
 5860 009c 6575     		strb	r5, [r4, #21]
 5861 009e CAE7     		b	.L539
 5862              	.LVL856:
 5863              	.L584:
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5864              		.loc 1 4037 0 discriminator 1
 5865 00a0 0125     		movs	r5, #1
 5866              	.LVL857:
 5867 00a2 6575     		strb	r5, [r4, #21]
 5868 00a4 C7E7     		b	.L539
 5869              	.LVL858:
 5870              	.L573:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5871              		.loc 1 4027 0
 5872 00a6 4FF00209 		mov	r9, #2
 5873              	.LVL859:
 5874              	.L542:
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
 5875              		.loc 1 4044 0
 5876 00aa E36A     		ldr	r3, [r4, #44]
 5877 00ac C3F80090 		str	r9, [r3]
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 5878              		.loc 1 4045 0
 5879 00b0 D945     		cmp	r9, fp
 5880 00b2 00F2F880 		bhi	.L575
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 5881              		.loc 1 4046 0
 5882 00b6 0023     		movs	r3, #0
 5883 00b8 019A     		ldr	r2, [sp, #4]
 5884 00ba 1360     		str	r3, [r2]
 5885 00bc BBE7     		b	.L539
 5886              	.LVL860:
 5887              	.L582:
4054:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 5888              		.loc 1 4054 0
 5889 00be 06F1FF39 		add	r9, r6, #-1
 5890 00c2 4946     		mov	r1, r9
 5891 00c4 2046     		mov	r0, r4
 5892 00c6 FFF7FEFF 		bl	clmt_clust
 5893              	.LVL861:
 5894 00ca 0146     		mov	r1, r0
 5895 00cc E061     		str	r0, [r4, #28]
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 5896              		.loc 1 4055 0
 5897 00ce 039F     		ldr	r7, [sp, #12]
 5898 00d0 3846     		mov	r0, r7
 5899 00d2 FFF7FEFF 		bl	clust2sect
 5900              	.LVL862:
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 5901              		.loc 1 4056 0
 5902 00d6 8046     		mov	r8, r0
ARM GAS  /tmp/ccJz23SP.s 			page 223


 5903 00d8 D8B1     		cbz	r0, .L585
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 5904              		.loc 1 4057 0
 5905 00da 7989     		ldrh	r1, [r7, #10]
 5906 00dc 0139     		subs	r1, r1, #1
 5907 00de 01EA5921 		and	r1, r1, r9, lsr #9
 5908 00e2 8844     		add	r8, r8, r1
 5909              	.LVL863:
4058:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5910              		.loc 1 4058 0
 5911 00e4 C6F30806 		ubfx	r6, r6, #0, #9
 5912              	.LVL864:
 5913 00e8 002E     		cmp	r6, #0
 5914 00ea A4D0     		beq	.L539
4058:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5915              		.loc 1 4058 0 is_stmt 0 discriminator 1
 5916 00ec 226A     		ldr	r2, [r4, #32]
 5917 00ee 4245     		cmp	r2, r8
 5918 00f0 A1D0     		beq	.L539
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5919              		.loc 1 4061 0 is_stmt 1
 5920 00f2 94F91430 		ldrsb	r3, [r4, #20]
 5921 00f6 002B     		cmp	r3, #0
 5922 00f8 0EDB     		blt	.L586
 5923              	.L550:
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5924              		.loc 1 4066 0
 5925 00fa 0123     		movs	r3, #1
 5926 00fc 4246     		mov	r2, r8
 5927 00fe 04F13001 		add	r1, r4, #48
 5928 0102 0398     		ldr	r0, [sp, #12]
 5929 0104 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5930 0106 FFF7FEFF 		bl	disk_read
 5931              	.LVL865:
 5932 010a A0B1     		cbz	r0, .L552
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5933              		.loc 1 4066 0 is_stmt 0 discriminator 1
 5934 010c 0125     		movs	r5, #1
 5935              	.LVL866:
 5936 010e 6575     		strb	r5, [r4, #21]
 5937 0110 91E7     		b	.L539
 5938              	.LVL867:
 5939              	.L585:
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 5940              		.loc 1 4056 0 is_stmt 1 discriminator 1
 5941 0112 0225     		movs	r5, #2
 5942              	.LVL868:
 5943 0114 6575     		strb	r5, [r4, #21]
 5944 0116 8EE7     		b	.L539
 5945              	.LVL869:
 5946              	.L586:
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 5947              		.loc 1 4062 0
 5948 0118 0123     		movs	r3, #1
 5949 011a 04F13001 		add	r1, r4, #48
 5950 011e 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 5951 0120 FFF7FEFF 		bl	disk_write
ARM GAS  /tmp/ccJz23SP.s 			page 224


 5952              	.LVL870:
 5953 0124 20B9     		cbnz	r0, .L587
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5954              		.loc 1 4063 0
 5955 0126 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5956 0128 03F07F03 		and	r3, r3, #127
 5957 012c 2375     		strb	r3, [r4, #20]
 5958 012e E4E7     		b	.L550
 5959              	.L587:
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 5960              		.loc 1 4062 0 discriminator 1
 5961 0130 0125     		movs	r5, #1
 5962              	.LVL871:
 5963 0132 6575     		strb	r5, [r4, #21]
 5964 0134 7FE7     		b	.L539
 5965              	.LVL872:
 5966              	.L552:
4068:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5967              		.loc 1 4068 0
 5968 0136 C4F82080 		str	r8, [r4, #32]
 5969 013a 7CE7     		b	.L539
 5970              	.LVL873:
 5971              	.L540:
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 5972              		.loc 1 4080 0
 5973 013c E368     		ldr	r3, [r4, #12]
 5974 013e BB42     		cmp	r3, r7
 5975 0140 04D2     		bcs	.L553
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 5976              		.loc 1 4080 0 is_stmt 0 discriminator 1
 5977 0142 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5978 0144 12F0020F 		tst	r2, #2
 5979 0148 00D1     		bne	.L553
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5980              		.loc 1 4081 0 is_stmt 1
 5981 014a 1F46     		mov	r7, r3
 5982              	.LVL874:
 5983              	.L553:
4083:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 5984              		.loc 1 4083 0
 5985 014c A369     		ldr	r3, [r4, #24]
 5986              	.LVL875:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5987              		.loc 1 4084 0
 5988 014e 0022     		movs	r2, #0
 5989 0150 A261     		str	r2, [r4, #24]
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 5990              		.loc 1 4085 0
 5991 0152 002F     		cmp	r7, #0
 5992 0154 6DD0     		beq	.L577
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 5993              		.loc 1 4086 0
 5994 0156 039A     		ldr	r2, [sp, #12]
 5995 0158 B2F80A90 		ldrh	r9, [r2, #10]
 5996 015c 4FEA4929 		lsl	r9, r9, #9
 5997              	.LVL876:
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
ARM GAS  /tmp/ccJz23SP.s 			page 225


 5998              		.loc 1 4087 0
 5999 0160 7BB1     		cbz	r3, .L555
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 6000              		.loc 1 4088 0 discriminator 1
 6001 0162 7A1E     		subs	r2, r7, #1
 6002 0164 B2FBF9F2 		udiv	r2, r2, r9
 6003 0168 013B     		subs	r3, r3, #1
 6004              	.LVL877:
 6005 016a B3FBF9F1 		udiv	r1, r3, r9
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 6006              		.loc 1 4087 0 discriminator 1
 6007 016e 8A42     		cmp	r2, r1
 6008 0170 07D3     		bcc	.L555
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 6009              		.loc 1 4089 0
 6010 0172 C9F10002 		rsb	r2, r9, #0
 6011 0176 1340     		ands	r3, r3, r2
 6012              	.LVL878:
 6013 0178 A361     		str	r3, [r4, #24]
4090:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 6014              		.loc 1 4090 0
 6015 017a FF1A     		subs	r7, r7, r3
 6016              	.LVL879:
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 6017              		.loc 1 4091 0
 6018 017c D4F81C80 		ldr	r8, [r4, #28]
 6019              	.LVL880:
 6020 0180 06E0     		b	.L556
 6021              	.LVL881:
 6022              	.L555:
4093:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6023              		.loc 1 4093 0
 6024 0182 D4F80880 		ldr	r8, [r4, #8]
 6025              	.LVL882:
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 6026              		.loc 1 4095 0
 6027 0186 B8F1000F 		cmp	r8, #0
 6028 018a 05D0     		beq	.L588
 6029              	.L557:
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6030              		.loc 1 4102 0
 6031 018c C4F81C80 		str	r8, [r4, #28]
 6032              	.L556:
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 6033              		.loc 1 4104 0
 6034 0190 B8F1000F 		cmp	r8, #0
 6035 0194 23D1     		bne	.L560
 6036 0196 4EE0     		b	.L554
 6037              	.L588:
4096:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 6038              		.loc 1 4096 0
 6039 0198 0021     		movs	r1, #0
 6040 019a 2046     		mov	r0, r4
 6041 019c FFF7FEFF 		bl	create_chain
 6042              	.LVL883:
 6043 01a0 8046     		mov	r8, r0
 6044              	.LVL884:
ARM GAS  /tmp/ccJz23SP.s 			page 226


4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6045              		.loc 1 4097 0
 6046 01a2 0128     		cmp	r0, #1
 6047 01a4 04D0     		beq	.L589
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6048              		.loc 1 4098 0
 6049 01a6 B0F1FF3F 		cmp	r0, #-1
 6050 01aa 04D0     		beq	.L590
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6051              		.loc 1 4099 0
 6052 01ac A060     		str	r0, [r4, #8]
 6053 01ae EDE7     		b	.L557
 6054              	.L589:
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6055              		.loc 1 4097 0 discriminator 1
 6056 01b0 0225     		movs	r5, #2
 6057              	.LVL885:
 6058 01b2 6575     		strb	r5, [r4, #21]
 6059 01b4 3FE7     		b	.L539
 6060              	.LVL886:
 6061              	.L590:
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6062              		.loc 1 4098 0 discriminator 1
 6063 01b6 0125     		movs	r5, #1
 6064              	.LVL887:
 6065 01b8 6575     		strb	r5, [r4, #21]
 6066 01ba 3CE7     		b	.L539
 6067              	.LVL888:
 6068              	.L561:
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6069              		.loc 1 4120 0
 6070 01bc 4146     		mov	r1, r8
 6071 01be 3046     		mov	r0, r6
 6072 01c0 FFF7FEFF 		bl	get_fat
 6073              	.LVL889:
 6074 01c4 8046     		mov	r8, r0
 6075              	.LVL890:
 6076              	.L563:
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6077              		.loc 1 4122 0
 6078 01c6 B8F1FF3F 		cmp	r8, #-1
 6079 01ca 29D0     		beq	.L591
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6080              		.loc 1 4123 0
 6081 01cc B8F1010F 		cmp	r8, #1
 6082 01d0 29D9     		bls	.L565
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6083              		.loc 1 4123 0 is_stmt 0 discriminator 2
 6084 01d2 039B     		ldr	r3, [sp, #12]
 6085 01d4 5B69     		ldr	r3, [r3, #20]
 6086 01d6 4345     		cmp	r3, r8
 6087 01d8 25D9     		bls	.L565
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6088              		.loc 1 4124 0 is_stmt 1
 6089 01da C4F81C80 		str	r8, [r4, #28]
 6090              	.LVL891:
 6091              	.L560:
ARM GAS  /tmp/ccJz23SP.s 			page 227


4105:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 6092              		.loc 1 4105 0
 6093 01de 4F45     		cmp	r7, r9
 6094 01e0 10D9     		bls	.L562
4106:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6095              		.loc 1 4106 0
 6096 01e2 A7EB0907 		sub	r7, r7, r9
 6097              	.LVL892:
 6098 01e6 A369     		ldr	r3, [r4, #24]
 6099 01e8 4B44     		add	r3, r3, r9
 6100 01ea A361     		str	r3, [r4, #24]
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 6101              		.loc 1 4108 0
 6102 01ec 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6103 01ee 13F0020F 		tst	r3, #2
 6104 01f2 E3D0     		beq	.L561
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 6105              		.loc 1 4113 0
 6106 01f4 4146     		mov	r1, r8
 6107 01f6 3046     		mov	r0, r6
 6108 01f8 FFF7FEFF 		bl	create_chain
 6109              	.LVL893:
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
 6110              		.loc 1 4114 0
 6111 01fc 8046     		mov	r8, r0
 6112 01fe 0028     		cmp	r0, #0
 6113 0200 E1D1     		bne	.L563
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6114              		.loc 1 4115 0
 6115 0202 0027     		movs	r7, #0
 6116              	.LVL894:
 6117              	.L562:
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
 6118              		.loc 1 4126 0
 6119 0204 A369     		ldr	r3, [r4, #24]
 6120 0206 3B44     		add	r3, r3, r7
 6121 0208 A361     		str	r3, [r4, #24]
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 6122              		.loc 1 4127 0
 6123 020a C7F30803 		ubfx	r3, r7, #0, #9
 6124 020e A3B3     		cbz	r3, .L579
4128:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
 6125              		.loc 1 4128 0
 6126 0210 4146     		mov	r1, r8
 6127 0212 0398     		ldr	r0, [sp, #12]
 6128 0214 FFF7FEFF 		bl	clust2sect
 6129              	.LVL895:
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6130              		.loc 1 4129 0
 6131 0218 40B1     		cbz	r0, .L592
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6132              		.loc 1 4130 0
 6133 021a 00EB5728 		add	r8, r0, r7, lsr #9
 6134              	.LVL896:
 6135 021e 0AE0     		b	.L554
 6136              	.LVL897:
 6137              	.L591:
ARM GAS  /tmp/ccJz23SP.s 			page 228


4122:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6138              		.loc 1 4122 0 discriminator 1
 6139 0220 0125     		movs	r5, #1
 6140              	.LVL898:
 6141 0222 6575     		strb	r5, [r4, #21]
 6142 0224 07E7     		b	.L539
 6143              	.LVL899:
 6144              	.L565:
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6145              		.loc 1 4123 0 discriminator 3
 6146 0226 0225     		movs	r5, #2
 6147              	.LVL900:
 6148 0228 6575     		strb	r5, [r4, #21]
 6149 022a 04E7     		b	.L539
 6150              	.LVL901:
 6151              	.L592:
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6152              		.loc 1 4129 0 discriminator 1
 6153 022c 0225     		movs	r5, #2
 6154              	.LVL902:
 6155 022e 6575     		strb	r5, [r4, #21]
 6156 0230 01E7     		b	.L539
 6157              	.LVL903:
 6158              	.L577:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6159              		.loc 1 4084 0
 6160 0232 4FF00008 		mov	r8, #0
 6161              	.LVL904:
 6162              	.L554:
4134:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
 6163              		.loc 1 4134 0
 6164 0236 A369     		ldr	r3, [r4, #24]
 6165 0238 E268     		ldr	r2, [r4, #12]
 6166 023a 9342     		cmp	r3, r2
 6167 023c 04D9     		bls	.L569
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
 6168              		.loc 1 4135 0
 6169 023e E360     		str	r3, [r4, #12]
4136:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6170              		.loc 1 4136 0
 6171 0240 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6172 0242 42F04002 		orr	r2, r2, #64
 6173 0246 2275     		strb	r2, [r4, #20]
 6174              	.L569:
4138:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6175              		.loc 1 4138 0
 6176 0248 C3F30803 		ubfx	r3, r3, #0, #9
 6177 024c 002B     		cmp	r3, #0
 6178 024e 3FF4F2AE 		beq	.L539
4138:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6179              		.loc 1 4138 0 is_stmt 0 discriminator 1
 6180 0252 226A     		ldr	r2, [r4, #32]
 6181 0254 4245     		cmp	r2, r8
 6182 0256 3FF4EEAE 		beq	.L539
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6183              		.loc 1 4141 0 is_stmt 1
 6184 025a 94F91430 		ldrsb	r3, [r4, #20]
ARM GAS  /tmp/ccJz23SP.s 			page 229


 6185 025e 002B     		cmp	r3, #0
 6186 0260 0EDB     		blt	.L593
 6187              	.L570:
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6188              		.loc 1 4146 0
 6189 0262 0123     		movs	r3, #1
 6190 0264 4246     		mov	r2, r8
 6191 0266 04F13001 		add	r1, r4, #48
 6192 026a 0398     		ldr	r0, [sp, #12]
 6193 026c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6194 026e FFF7FEFF 		bl	disk_read
 6195              	.LVL905:
 6196 0272 A8B9     		cbnz	r0, .L594
4148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6197              		.loc 1 4148 0
 6198 0274 C4F82080 		str	r8, [r4, #32]
 6199 0278 DDE6     		b	.L539
 6200              	.LVL906:
 6201              	.L579:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6202              		.loc 1 4084 0
 6203 027a 4FF00008 		mov	r8, #0
 6204              	.LVL907:
 6205 027e DAE7     		b	.L554
 6206              	.LVL908:
 6207              	.L593:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6208              		.loc 1 4142 0
 6209 0280 0123     		movs	r3, #1
 6210 0282 04F13001 		add	r1, r4, #48
 6211 0286 0398     		ldr	r0, [sp, #12]
 6212 0288 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6213 028a FFF7FEFF 		bl	disk_write
 6214              	.LVL909:
 6215 028e 20B9     		cbnz	r0, .L595
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6216              		.loc 1 4143 0
 6217 0290 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6218 0292 03F07F03 		and	r3, r3, #127
 6219 0296 2375     		strb	r3, [r4, #20]
 6220 0298 E3E7     		b	.L570
 6221              	.L595:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6222              		.loc 1 4142 0 discriminator 1
 6223 029a 0125     		movs	r5, #1
 6224              	.LVL910:
 6225 029c 6575     		strb	r5, [r4, #21]
 6226 029e CAE6     		b	.L539
 6227              	.LVL911:
 6228              	.L594:
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6229              		.loc 1 4146 0 discriminator 1
 6230 02a0 0125     		movs	r5, #1
 6231              	.LVL912:
 6232 02a2 6575     		strb	r5, [r4, #21]
 6233 02a4 C7E6     		b	.L539
 6234              	.LVL913:
ARM GAS  /tmp/ccJz23SP.s 			page 230


 6235              	.L575:
4048:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6236              		.loc 1 4048 0
 6237 02a6 1125     		movs	r5, #17
 6238              	.LVL914:
 6239 02a8 C5E6     		b	.L539
 6240              		.cfi_endproc
 6241              	.LFE373:
 6243              		.section	.text.f_opendir,"ax",%progbits
 6244              		.align	1
 6245              		.global	f_opendir
 6246              		.syntax unified
 6247              		.thumb
 6248              		.thumb_func
 6249              		.fpu fpv4-sp-d16
 6251              	f_opendir:
 6252              	.LFB374:
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6253              		.loc 1 4166 0
 6254              		.cfi_startproc
 6255              		@ args = 0, pretend = 0, frame = 16
 6256              		@ frame_needed = 0, uses_anonymous_args = 0
 6257              	.LVL915:
 6258 0000 30B5     		push	{r4, r5, lr}
 6259              	.LCFI81:
 6260              		.cfi_def_cfa_offset 12
 6261              		.cfi_offset 4, -12
 6262              		.cfi_offset 5, -8
 6263              		.cfi_offset 14, -4
 6264 0002 85B0     		sub	sp, sp, #20
 6265              	.LCFI82:
 6266              		.cfi_def_cfa_offset 32
 6267 0004 0191     		str	r1, [sp, #4]
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6268              		.loc 1 4173 0
 6269 0006 0028     		cmp	r0, #0
 6270 0008 3DD0     		beq	.L603
 6271 000a 0446     		mov	r4, r0
 6272              	.LVL916:
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6273              		.loc 1 4177 0
 6274 000c 0022     		movs	r2, #0
 6275 000e 03A9     		add	r1, sp, #12
 6276              	.LVL917:
 6277 0010 01A8     		add	r0, sp, #4
 6278              	.LVL918:
 6279 0012 FFF7FEFF 		bl	find_volume
 6280              	.LVL919:
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
 6281              		.loc 1 4178 0
 6282 0016 0546     		mov	r5, r0
 6283 0018 28B1     		cbz	r0, .L608
 6284              	.L598:
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6285              		.loc 1 4220 0
 6286 001a 0DB1     		cbz	r5, .L597
 6287              	.L602:
ARM GAS  /tmp/ccJz23SP.s 			page 231


4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6288              		.loc 1 4220 0 is_stmt 0 discriminator 1
 6289 001c 0023     		movs	r3, #0
 6290 001e 2360     		str	r3, [r4]
 6291              	.LVL920:
 6292              	.L597:
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6293              		.loc 1 4223 0 is_stmt 1
 6294 0020 2846     		mov	r0, r5
 6295 0022 05B0     		add	sp, sp, #20
 6296              	.LCFI83:
 6297              		.cfi_remember_state
 6298              		.cfi_def_cfa_offset 12
 6299              		@ sp needed
 6300 0024 30BD     		pop	{r4, r5, pc}
 6301              	.LVL921:
 6302              	.L608:
 6303              	.LCFI84:
 6304              		.cfi_restore_state
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6305              		.loc 1 4179 0
 6306 0026 039B     		ldr	r3, [sp, #12]
 6307 0028 2360     		str	r3, [r4]
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 6308              		.loc 1 4181 0
 6309 002a 0199     		ldr	r1, [sp, #4]
 6310 002c 2046     		mov	r0, r4
 6311 002e FFF7FEFF 		bl	follow_path
 6312              	.LVL922:
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 6313              		.loc 1 4182 0
 6314 0032 0546     		mov	r5, r0
 6315 0034 18BB     		cbnz	r0, .L599
4183:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 6316              		.loc 1 4183 0
 6317 0036 94F92F30 		ldrsb	r3, [r4, #47]
 6318 003a 002B     		cmp	r3, #0
 6319 003c 08DB     		blt	.L600
4184:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 6320              		.loc 1 4184 0
 6321 003e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 6322 0040 13F0100F 		tst	r3, #16
 6323 0044 1AD0     		beq	.L604
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6324              		.loc 1 4196 0
 6325 0046 216A     		ldr	r1, [r4, #32]
 6326 0048 0398     		ldr	r0, [sp, #12]
 6327 004a FFF7FEFF 		bl	ld_clust
 6328              	.LVL923:
 6329 004e A060     		str	r0, [r4, #8]
 6330              	.L600:
4203:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 6331              		.loc 1 4203 0
 6332 0050 039B     		ldr	r3, [sp, #12]
 6333 0052 DB88     		ldrh	r3, [r3, #6]
 6334 0054 A380     		strh	r3, [r4, #4]	@ movhi
4204:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
ARM GAS  /tmp/ccJz23SP.s 			page 232


 6335              		.loc 1 4204 0
 6336 0056 0021     		movs	r1, #0
 6337 0058 2046     		mov	r0, r4
 6338 005a FFF7FEFF 		bl	dir_sdi
 6339              	.LVL924:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
 6340              		.loc 1 4206 0
 6341 005e 0546     		mov	r5, r0
 6342 0060 68B9     		cbnz	r0, .L599
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 6343              		.loc 1 4207 0
 6344 0062 A368     		ldr	r3, [r4, #8]
 6345 0064 13B9     		cbnz	r3, .L609
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6346              		.loc 1 4211 0
 6347 0066 0023     		movs	r3, #0
 6348 0068 2361     		str	r3, [r4, #16]
 6349 006a 08E0     		b	.L599
 6350              	.L609:
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 6351              		.loc 1 4208 0
 6352 006c 0021     		movs	r1, #0
 6353 006e 2046     		mov	r0, r4
 6354 0070 FFF7FEFF 		bl	inc_lock
 6355              	.LVL925:
 6356 0074 2061     		str	r0, [r4, #16]
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6357              		.loc 1 4209 0
 6358 0076 10B9     		cbnz	r0, .L599
 6359              	.LVL926:
 6360 0078 1225     		movs	r5, #18
 6361 007a CEE7     		b	.L598
 6362              	.LVL927:
 6363              	.L604:
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6364              		.loc 1 4199 0
 6365 007c 0525     		movs	r5, #5
 6366              	.LVL928:
 6367              	.L599:
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6368              		.loc 1 4218 0
 6369 007e 042D     		cmp	r5, #4
 6370 0080 CBD1     		bne	.L598
 6371              	.LVL929:
 6372 0082 0525     		movs	r5, #5
 6373 0084 CAE7     		b	.L602
 6374              	.LVL930:
 6375              	.L603:
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6376              		.loc 1 4173 0
 6377 0086 0925     		movs	r5, #9
 6378 0088 CAE7     		b	.L597
 6379              		.cfi_endproc
 6380              	.LFE374:
 6382              		.section	.text.f_closedir,"ax",%progbits
 6383              		.align	1
 6384              		.global	f_closedir
ARM GAS  /tmp/ccJz23SP.s 			page 233


 6385              		.syntax unified
 6386              		.thumb
 6387              		.thumb_func
 6388              		.fpu fpv4-sp-d16
 6390              	f_closedir:
 6391              	.LFB375:
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6392              		.loc 1 4235 0
 6393              		.cfi_startproc
 6394              		@ args = 0, pretend = 0, frame = 8
 6395              		@ frame_needed = 0, uses_anonymous_args = 0
 6396              	.LVL931:
 6397 0000 10B5     		push	{r4, lr}
 6398              	.LCFI85:
 6399              		.cfi_def_cfa_offset 8
 6400              		.cfi_offset 4, -8
 6401              		.cfi_offset 14, -4
 6402 0002 82B0     		sub	sp, sp, #8
 6403              	.LCFI86:
 6404              		.cfi_def_cfa_offset 16
 6405 0004 0446     		mov	r4, r0
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6406              		.loc 1 4240 0
 6407 0006 01A9     		add	r1, sp, #4
 6408 0008 FFF7FEFF 		bl	validate
 6409              	.LVL932:
4241:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6410              		.loc 1 4241 0
 6411 000c 0346     		mov	r3, r0
 6412 000e 20B9     		cbnz	r0, .L611
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 6413              		.loc 1 4243 0
 6414 0010 2069     		ldr	r0, [r4, #16]
 6415              	.LVL933:
 6416 0012 28B9     		cbnz	r0, .L614
 6417              	.L612:
 6418              	.LVL934:
4246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6419              		.loc 1 4246 0
 6420 0014 0BB9     		cbnz	r3, .L611
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6421              		.loc 1 4249 0
 6422 0016 0022     		movs	r2, #0
 6423 0018 2260     		str	r2, [r4]
 6424              	.LVL935:
 6425              	.L611:
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6426              		.loc 1 4256 0
 6427 001a 1846     		mov	r0, r3
 6428 001c 02B0     		add	sp, sp, #8
 6429              	.LCFI87:
 6430              		.cfi_remember_state
 6431              		.cfi_def_cfa_offset 8
 6432              		@ sp needed
 6433 001e 10BD     		pop	{r4, pc}
 6434              	.LVL936:
 6435              	.L614:
ARM GAS  /tmp/ccJz23SP.s 			page 234


 6436              	.LCFI88:
 6437              		.cfi_restore_state
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6438              		.loc 1 4244 0
 6439 0020 FFF7FEFF 		bl	dec_lock
 6440              	.LVL937:
 6441 0024 0346     		mov	r3, r0
 6442              	.LVL938:
 6443 0026 F5E7     		b	.L612
 6444              		.cfi_endproc
 6445              	.LFE375:
 6447              		.section	.text.f_readdir,"ax",%progbits
 6448              		.align	1
 6449              		.global	f_readdir
 6450              		.syntax unified
 6451              		.thumb
 6452              		.thumb_func
 6453              		.fpu fpv4-sp-d16
 6455              	f_readdir:
 6456              	.LFB376:
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6457              		.loc 1 4269 0
 6458              		.cfi_startproc
 6459              		@ args = 0, pretend = 0, frame = 8
 6460              		@ frame_needed = 0, uses_anonymous_args = 0
 6461              	.LVL939:
 6462 0000 70B5     		push	{r4, r5, r6, lr}
 6463              	.LCFI89:
 6464              		.cfi_def_cfa_offset 16
 6465              		.cfi_offset 4, -16
 6466              		.cfi_offset 5, -12
 6467              		.cfi_offset 6, -8
 6468              		.cfi_offset 14, -4
 6469 0002 82B0     		sub	sp, sp, #8
 6470              	.LCFI90:
 6471              		.cfi_def_cfa_offset 24
 6472 0004 0546     		mov	r5, r0
 6473 0006 0E46     		mov	r6, r1
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6474              		.loc 1 4275 0
 6475 0008 01A9     		add	r1, sp, #4
 6476              	.LVL940:
 6477 000a FFF7FEFF 		bl	validate
 6478              	.LVL941:
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 6479              		.loc 1 4276 0
 6480 000e 0446     		mov	r4, r0
 6481 0010 90B9     		cbnz	r0, .L616
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 6482              		.loc 1 4277 0
 6483 0012 A6B1     		cbz	r6, .L621
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6484              		.loc 1 4281 0
 6485 0014 0021     		movs	r1, #0
 6486 0016 2846     		mov	r0, r5
 6487              	.LVL942:
 6488 0018 FFF7FEFF 		bl	dir_read
ARM GAS  /tmp/ccJz23SP.s 			page 235


 6489              	.LVL943:
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 6490              		.loc 1 4282 0
 6491 001c 0428     		cmp	r0, #4
 6492 001e 00D0     		beq	.L618
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 6493              		.loc 1 4283 0
 6494 0020 98B9     		cbnz	r0, .L619
 6495              	.L618:
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 6496              		.loc 1 4284 0
 6497 0022 3146     		mov	r1, r6
 6498 0024 2846     		mov	r0, r5
 6499              	.LVL944:
 6500 0026 FFF7FEFF 		bl	get_fileinfo
 6501              	.LVL945:
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6502              		.loc 1 4285 0
 6503 002a 0021     		movs	r1, #0
 6504 002c 2846     		mov	r0, r5
 6505 002e FFF7FEFF 		bl	dir_next
 6506              	.LVL946:
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6507              		.loc 1 4286 0
 6508 0032 0428     		cmp	r0, #4
 6509 0034 00D0     		beq	.L616
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6510              		.loc 1 4285 0
 6511 0036 0446     		mov	r4, r0
 6512              	.LVL947:
 6513              	.L616:
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6514              		.loc 1 4292 0
 6515 0038 2046     		mov	r0, r4
 6516 003a 02B0     		add	sp, sp, #8
 6517              	.LCFI91:
 6518              		.cfi_remember_state
 6519              		.cfi_def_cfa_offset 16
 6520              		@ sp needed
 6521 003c 70BD     		pop	{r4, r5, r6, pc}
 6522              	.LVL948:
 6523              	.L621:
 6524              	.LCFI92:
 6525              		.cfi_restore_state
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6526              		.loc 1 4278 0
 6527 003e 0021     		movs	r1, #0
 6528 0040 2846     		mov	r0, r5
 6529              	.LVL949:
 6530 0042 FFF7FEFF 		bl	dir_sdi
 6531              	.LVL950:
 6532 0046 0446     		mov	r4, r0
 6533              	.LVL951:
 6534 0048 F6E7     		b	.L616
 6535              	.LVL952:
 6536              	.L619:
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
ARM GAS  /tmp/ccJz23SP.s 			page 236


 6537              		.loc 1 4281 0
 6538 004a 0446     		mov	r4, r0
 6539 004c F4E7     		b	.L616
 6540              		.cfi_endproc
 6541              	.LFE376:
 6543              		.section	.text.f_stat,"ax",%progbits
 6544              		.align	1
 6545              		.global	f_stat
 6546              		.syntax unified
 6547              		.thumb
 6548              		.thumb_func
 6549              		.fpu fpv4-sp-d16
 6551              	f_stat:
 6552              	.LFB377:
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6553              		.loc 1 4357 0
 6554              		.cfi_startproc
 6555              		@ args = 0, pretend = 0, frame = 56
 6556              		@ frame_needed = 0, uses_anonymous_args = 0
 6557              	.LVL953:
 6558 0000 30B5     		push	{r4, r5, lr}
 6559              	.LCFI93:
 6560              		.cfi_def_cfa_offset 12
 6561              		.cfi_offset 4, -12
 6562              		.cfi_offset 5, -8
 6563              		.cfi_offset 14, -4
 6564 0002 8FB0     		sub	sp, sp, #60
 6565              	.LCFI94:
 6566              		.cfi_def_cfa_offset 72
 6567 0004 0190     		str	r0, [sp, #4]
 6568 0006 0D46     		mov	r5, r1
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6569              		.loc 1 4364 0
 6570 0008 0022     		movs	r2, #0
 6571 000a 02A9     		add	r1, sp, #8
 6572              	.LVL954:
 6573 000c 01A8     		add	r0, sp, #4
 6574              	.LVL955:
 6575 000e FFF7FEFF 		bl	find_volume
 6576              	.LVL956:
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 6577              		.loc 1 4365 0
 6578 0012 0446     		mov	r4, r0
 6579 0014 10B1     		cbz	r0, .L626
 6580              	.LVL957:
 6581              	.L623:
4379:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6582              		.loc 1 4379 0
 6583 0016 2046     		mov	r0, r4
 6584 0018 0FB0     		add	sp, sp, #60
 6585              	.LCFI95:
 6586              		.cfi_remember_state
 6587              		.cfi_def_cfa_offset 12
 6588              		@ sp needed
 6589 001a 30BD     		pop	{r4, r5, pc}
 6590              	.LVL958:
 6591              	.L626:
ARM GAS  /tmp/ccJz23SP.s 			page 237


 6592              	.LCFI96:
 6593              		.cfi_restore_state
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6594              		.loc 1 4367 0
 6595 001c 0199     		ldr	r1, [sp, #4]
 6596 001e 02A8     		add	r0, sp, #8
 6597              	.LVL959:
 6598 0020 FFF7FEFF 		bl	follow_path
 6599              	.LVL960:
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 6600              		.loc 1 4368 0
 6601 0024 0446     		mov	r4, r0
 6602 0026 0028     		cmp	r0, #0
 6603 0028 F5D1     		bne	.L623
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 6604              		.loc 1 4369 0
 6605 002a 9DF93730 		ldrsb	r3, [sp, #55]
 6606 002e 002B     		cmp	r3, #0
 6607 0030 06DB     		blt	.L624
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6608              		.loc 1 4372 0
 6609 0032 002D     		cmp	r5, #0
 6610 0034 EFD0     		beq	.L623
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6611              		.loc 1 4372 0 is_stmt 0 discriminator 1
 6612 0036 2946     		mov	r1, r5
 6613 0038 02A8     		add	r0, sp, #8
 6614              	.LVL961:
 6615 003a FFF7FEFF 		bl	get_fileinfo
 6616              	.LVL962:
 6617 003e EAE7     		b	.L623
 6618              	.LVL963:
 6619              	.L624:
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
 6620              		.loc 1 4370 0 is_stmt 1
 6621 0040 0624     		movs	r4, #6
 6622 0042 E8E7     		b	.L623
 6623              		.cfi_endproc
 6624              	.LFE377:
 6626              		.section	.text.f_getfree,"ax",%progbits
 6627              		.align	1
 6628              		.global	f_getfree
 6629              		.syntax unified
 6630              		.thumb
 6631              		.thumb_func
 6632              		.fpu fpv4-sp-d16
 6634              	f_getfree:
 6635              	.LFB378:
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6636              		.loc 1 4393 0
 6637              		.cfi_startproc
 6638              		@ args = 0, pretend = 0, frame = 32
 6639              		@ frame_needed = 0, uses_anonymous_args = 0
 6640              	.LVL964:
 6641 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6642              	.LCFI97:
 6643              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccJz23SP.s 			page 238


 6644              		.cfi_offset 4, -32
 6645              		.cfi_offset 5, -28
 6646              		.cfi_offset 6, -24
 6647              		.cfi_offset 7, -20
 6648              		.cfi_offset 8, -16
 6649              		.cfi_offset 9, -12
 6650              		.cfi_offset 10, -8
 6651              		.cfi_offset 14, -4
 6652 0004 88B0     		sub	sp, sp, #32
 6653              	.LCFI98:
 6654              		.cfi_def_cfa_offset 64
 6655 0006 0190     		str	r0, [sp, #4]
 6656 0008 8A46     		mov	r10, r1
 6657 000a 1446     		mov	r4, r2
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6658              		.loc 1 4403 0
 6659 000c 0022     		movs	r2, #0
 6660              	.LVL965:
 6661 000e 07A9     		add	r1, sp, #28
 6662              	.LVL966:
 6663 0010 01A8     		add	r0, sp, #4
 6664              	.LVL967:
 6665 0012 FFF7FEFF 		bl	find_volume
 6666              	.LVL968:
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 6667              		.loc 1 4404 0
 6668 0016 8046     		mov	r8, r0
 6669 0018 0028     		cmp	r0, #0
 6670 001a 5AD1     		bne	.L628
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 6671              		.loc 1 4405 0
 6672 001c 079B     		ldr	r3, [sp, #28]
 6673 001e 2360     		str	r3, [r4]
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
 6674              		.loc 1 4407 0
 6675 0020 1A69     		ldr	r2, [r3, #16]
 6676 0022 5D69     		ldr	r5, [r3, #20]
 6677 0024 A91E     		subs	r1, r5, #2
 6678 0026 8A42     		cmp	r2, r1
 6679 0028 08D9     		bls	.L643
 6680              	.LVL969:
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
 6681              		.loc 1 4412 0
 6682 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6683 002c 012A     		cmp	r2, #1
 6684 002e 08D0     		beq	.L644
 6685              	.LVL970:
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
 6686              		.loc 1 4440 0
 6687 0030 D3F82090 		ldr	r9, [r3, #32]
 6688              	.LVL971:
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 6689              		.loc 1 4441 0
 6690 0034 0024     		movs	r4, #0
 6691              	.LVL972:
 6692 0036 2646     		mov	r6, r4
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
ARM GAS  /tmp/ccJz23SP.s 			page 239


 6693              		.loc 1 4411 0
 6694 0038 2746     		mov	r7, r4
 6695 003a 32E0     		b	.L639
 6696              	.LVL973:
 6697              	.L643:
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6698              		.loc 1 4408 0
 6699 003c CAF80020 		str	r2, [r10]
 6700 0040 47E0     		b	.L628
 6701              	.LVL974:
 6702              	.L644:
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 6703              		.loc 1 4413 0
 6704 0042 0293     		str	r3, [sp, #8]
 6705 0044 0224     		movs	r4, #2
 6706              	.LVL975:
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 6707              		.loc 1 4411 0
 6708 0046 0027     		movs	r7, #0
 6709 0048 04E0     		b	.L633
 6710              	.LVL976:
 6711              	.L632:
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6712              		.loc 1 4419 0
 6713 004a 0134     		adds	r4, r4, #1
 6714              	.LVL977:
 6715 004c 079B     		ldr	r3, [sp, #28]
 6716 004e 5B69     		ldr	r3, [r3, #20]
 6717 0050 A342     		cmp	r3, r4
 6718 0052 36D9     		bls	.L631
 6719              	.LVL978:
 6720              	.L633:
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 6721              		.loc 1 4415 0
 6722 0054 2146     		mov	r1, r4
 6723 0056 02A8     		add	r0, sp, #8
 6724 0058 FFF7FEFF 		bl	get_fat
 6725              	.LVL979:
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6726              		.loc 1 4416 0
 6727 005c B0F1FF3F 		cmp	r0, #-1
 6728 0060 2DD0     		beq	.L640
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 6729              		.loc 1 4417 0
 6730 0062 0128     		cmp	r0, #1
 6731 0064 39D0     		beq	.L641
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6732              		.loc 1 4418 0
 6733 0066 0028     		cmp	r0, #0
 6734 0068 EFD1     		bne	.L632
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6735              		.loc 1 4418 0 is_stmt 0 discriminator 1
 6736 006a 0137     		adds	r7, r7, #1
 6737              	.LVL980:
 6738 006c EDE7     		b	.L632
 6739              	.LVL981:
 6740              	.L645:
ARM GAS  /tmp/ccJz23SP.s 			page 240


4444:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 6741              		.loc 1 4444 0 is_stmt 1
 6742 006e 09F10106 		add	r6, r9, #1
 6743              	.LVL982:
 6744 0072 4946     		mov	r1, r9
 6745 0074 0798     		ldr	r0, [sp, #28]
 6746 0076 FFF7FEFF 		bl	move_window
 6747              	.LVL983:
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
 6748              		.loc 1 4445 0
 6749 007a 8046     		mov	r8, r0
 6750 007c 08BB     		cbnz	r0, .L631
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
 6751              		.loc 1 4446 0
 6752 007e 079C     		ldr	r4, [sp, #28]
 6753              	.LVL984:
 6754 0080 3034     		adds	r4, r4, #48
 6755              	.LVL985:
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 6756              		.loc 1 4444 0
 6757 0082 B146     		mov	r9, r6
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6758              		.loc 1 4447 0
 6759 0084 4FF40076 		mov	r6, #512
 6760              	.LVL986:
 6761 0088 0DE0     		b	.L634
 6762              	.LVL987:
 6763              	.L646:
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 6764              		.loc 1 4450 0
 6765 008a 2046     		mov	r0, r4
 6766 008c FFF7FEFF 		bl	ld_word
 6767              	.LVL988:
 6768 0090 00B9     		cbnz	r0, .L636
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 6769              		.loc 1 4450 0 is_stmt 0 discriminator 1
 6770 0092 0137     		adds	r7, r7, #1
 6771              	.LVL989:
 6772              	.L636:
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
 6773              		.loc 1 4451 0 is_stmt 1
 6774 0094 0234     		adds	r4, r4, #2
 6775              	.LVL990:
 6776 0096 023E     		subs	r6, r6, #2
 6777              	.LVL991:
 6778 0098 01E0     		b	.L637
 6779              	.L638:
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6780              		.loc 1 4454 0
 6781 009a 0434     		adds	r4, r4, #4
 6782              	.LVL992:
 6783 009c 043E     		subs	r6, r6, #4
 6784              	.LVL993:
 6785              	.L637:
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6786              		.loc 1 4456 0
 6787 009e 013D     		subs	r5, r5, #1
ARM GAS  /tmp/ccJz23SP.s 			page 241


 6788              	.LVL994:
 6789 00a0 0FD0     		beq	.L631
 6790              	.LVL995:
 6791              	.L639:
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
 6792              		.loc 1 4443 0
 6793 00a2 002E     		cmp	r6, #0
 6794 00a4 E3D0     		beq	.L645
 6795              	.LVL996:
 6796              	.L634:
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 6797              		.loc 1 4449 0
 6798 00a6 079B     		ldr	r3, [sp, #28]
 6799 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6800 00aa 022B     		cmp	r3, #2
 6801 00ac EDD0     		beq	.L646
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 6802              		.loc 1 4453 0
 6803 00ae 2046     		mov	r0, r4
 6804 00b0 FFF7FEFF 		bl	ld_dword
 6805              	.LVL997:
 6806 00b4 30F07043 		bics	r3, r0, #-268435456
 6807 00b8 EFD1     		bne	.L638
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 6808              		.loc 1 4453 0 is_stmt 0 discriminator 1
 6809 00ba 0137     		adds	r7, r7, #1
 6810              	.LVL998:
 6811 00bc EDE7     		b	.L638
 6812              	.LVL999:
 6813              	.L640:
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6814              		.loc 1 4416 0 is_stmt 1
 6815 00be 4FF00108 		mov	r8, #1
 6816              	.LVL1000:
 6817              	.L631:
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 6818              		.loc 1 4459 0
 6819 00c2 CAF80070 		str	r7, [r10]
4460:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
 6820              		.loc 1 4460 0
 6821 00c6 079B     		ldr	r3, [sp, #28]
 6822 00c8 1F61     		str	r7, [r3, #16]
4461:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6823              		.loc 1 4461 0
 6824 00ca 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 6825 00cc 42F00102 		orr	r2, r2, #1
 6826 00d0 1A71     		strb	r2, [r3, #4]
 6827              	.LVL1001:
 6828              	.L628:
4466:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6829              		.loc 1 4466 0
 6830 00d2 4046     		mov	r0, r8
 6831 00d4 08B0     		add	sp, sp, #32
 6832              	.LCFI99:
 6833              		.cfi_remember_state
 6834              		.cfi_def_cfa_offset 32
 6835              		@ sp needed
ARM GAS  /tmp/ccJz23SP.s 			page 242


 6836 00d6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6837              	.LVL1002:
 6838              	.L641:
 6839              	.LCFI100:
 6840              		.cfi_restore_state
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 6841              		.loc 1 4417 0
 6842 00da 4FF00208 		mov	r8, #2
 6843 00de F0E7     		b	.L631
 6844              		.cfi_endproc
 6845              	.LFE378:
 6847              		.section	.text.f_truncate,"ax",%progbits
 6848              		.align	1
 6849              		.global	f_truncate
 6850              		.syntax unified
 6851              		.thumb
 6852              		.thumb_func
 6853              		.fpu fpv4-sp-d16
 6855              	f_truncate:
 6856              	.LFB379:
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6857              		.loc 1 4478 0
 6858              		.cfi_startproc
 6859              		@ args = 0, pretend = 0, frame = 8
 6860              		@ frame_needed = 0, uses_anonymous_args = 0
 6861              	.LVL1003:
 6862 0000 30B5     		push	{r4, r5, lr}
 6863              	.LCFI101:
 6864              		.cfi_def_cfa_offset 12
 6865              		.cfi_offset 4, -12
 6866              		.cfi_offset 5, -8
 6867              		.cfi_offset 14, -4
 6868 0002 83B0     		sub	sp, sp, #12
 6869              	.LCFI102:
 6870              		.cfi_def_cfa_offset 24
 6871 0004 0546     		mov	r5, r0
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 6872              		.loc 1 4484 0
 6873 0006 01A9     		add	r1, sp, #4
 6874 0008 FFF7FEFF 		bl	validate
 6875              	.LVL1004:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6876              		.loc 1 4485 0
 6877 000c 0446     		mov	r4, r0
 6878 000e 0028     		cmp	r0, #0
 6879 0010 4BD1     		bne	.L648
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6880              		.loc 1 4485 0 is_stmt 0 discriminator 2
 6881 0012 6C7D     		ldrb	r4, [r5, #21]	@ zero_extendqisi2
 6882              	.LVL1005:
 6883 0014 002C     		cmp	r4, #0
 6884 0016 48D1     		bne	.L648
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6885              		.loc 1 4486 0 is_stmt 1
 6886 0018 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6887 001a 13F0020F 		tst	r3, #2
 6888 001e 43D0     		beq	.L654
ARM GAS  /tmp/ccJz23SP.s 			page 243


4488:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 6889              		.loc 1 4488 0
 6890 0020 AB69     		ldr	r3, [r5, #24]
 6891 0022 EA68     		ldr	r2, [r5, #12]
 6892 0024 9342     		cmp	r3, r2
 6893 0026 40D2     		bcs	.L648
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 6894              		.loc 1 4489 0
 6895 0028 A3B9     		cbnz	r3, .L649
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
 6896              		.loc 1 4490 0
 6897 002a 0022     		movs	r2, #0
 6898 002c A968     		ldr	r1, [r5, #8]
 6899 002e 2846     		mov	r0, r5
 6900 0030 FFF7FEFF 		bl	remove_chain
 6901              	.LVL1006:
 6902 0034 0446     		mov	r4, r0
 6903              	.LVL1007:
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 6904              		.loc 1 4491 0
 6905 0036 0023     		movs	r3, #0
 6906 0038 AB60     		str	r3, [r5, #8]
 6907              	.LVL1008:
 6908              	.L650:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
 6909              		.loc 1 4501 0
 6910 003a AB69     		ldr	r3, [r5, #24]
 6911 003c EB60     		str	r3, [r5, #12]
4502:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6912              		.loc 1 4502 0
 6913 003e 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6914 0040 43F04003 		orr	r3, r3, #64
 6915 0044 2B75     		strb	r3, [r5, #20]
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 6916              		.loc 1 4504 0
 6917 0046 14B9     		cbnz	r4, .L652
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 6918              		.loc 1 4504 0 is_stmt 0 discriminator 1
 6919 0048 13F0800F 		tst	r3, #128
 6920 004c 1CD1     		bne	.L659
 6921              	.L652:
4512:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6922              		.loc 1 4512 0 is_stmt 1
 6923 004e 64B3     		cbz	r4, .L648
 6924              	.LVL1009:
 6925              	.L653:
4512:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6926              		.loc 1 4512 0 is_stmt 0 discriminator 1
 6927 0050 6C75     		strb	r4, [r5, #21]
 6928 0052 2AE0     		b	.L648
 6929              	.LVL1010:
 6930              	.L649:
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 6931              		.loc 1 4493 0 is_stmt 1
 6932 0054 E969     		ldr	r1, [r5, #28]
 6933 0056 2846     		mov	r0, r5
 6934 0058 FFF7FEFF 		bl	get_fat
ARM GAS  /tmp/ccJz23SP.s 			page 244


 6935              	.LVL1011:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 6936              		.loc 1 4495 0
 6937 005c B0F1FF3F 		cmp	r0, #-1
 6938 0060 0ED0     		beq	.L660
 6939              	.L651:
 6940              	.LVL1012:
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 6941              		.loc 1 4496 0
 6942 0062 0128     		cmp	r0, #1
 6943 0064 0ED0     		beq	.L656
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 6944              		.loc 1 4497 0
 6945 0066 002C     		cmp	r4, #0
 6946 0068 E7D1     		bne	.L650
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 6947              		.loc 1 4497 0 is_stmt 0 discriminator 1
 6948 006a 019B     		ldr	r3, [sp, #4]
 6949 006c 5B69     		ldr	r3, [r3, #20]
 6950 006e 8342     		cmp	r3, r0
 6951 0070 E3D9     		bls	.L650
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6952              		.loc 1 4498 0 is_stmt 1
 6953 0072 EA69     		ldr	r2, [r5, #28]
 6954 0074 0146     		mov	r1, r0
 6955 0076 2846     		mov	r0, r5
 6956              	.LVL1013:
 6957 0078 FFF7FEFF 		bl	remove_chain
 6958              	.LVL1014:
 6959 007c 0446     		mov	r4, r0
 6960              	.LVL1015:
 6961 007e DCE7     		b	.L650
 6962              	.LVL1016:
 6963              	.L660:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 6964              		.loc 1 4495 0
 6965 0080 0124     		movs	r4, #1
 6966 0082 EEE7     		b	.L651
 6967              	.LVL1017:
 6968              	.L656:
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 6969              		.loc 1 4496 0
 6970 0084 0224     		movs	r4, #2
 6971              	.LVL1018:
 6972 0086 D8E7     		b	.L650
 6973              	.LVL1019:
 6974              	.L659:
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 6975              		.loc 1 4505 0
 6976 0088 0123     		movs	r3, #1
 6977 008a 2A6A     		ldr	r2, [r5, #32]
 6978 008c 05F13001 		add	r1, r5, #48
 6979 0090 0198     		ldr	r0, [sp, #4]
 6980 0092 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6981 0094 FFF7FEFF 		bl	disk_write
 6982              	.LVL1020:
 6983 0098 20B9     		cbnz	r0, .L657
ARM GAS  /tmp/ccJz23SP.s 			page 245


4508:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6984              		.loc 1 4508 0
 6985 009a 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6986 009c 03F07F03 		and	r3, r3, #127
 6987 00a0 2B75     		strb	r3, [r5, #20]
 6988 00a2 D4E7     		b	.L652
 6989              	.L657:
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6990              		.loc 1 4506 0
 6991 00a4 0124     		movs	r4, #1
 6992              	.LVL1021:
 6993 00a6 D3E7     		b	.L653
 6994              	.LVL1022:
 6995              	.L654:
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6996              		.loc 1 4486 0
 6997 00a8 0724     		movs	r4, #7
 6998              	.LVL1023:
 6999              	.L648:
4516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7000              		.loc 1 4516 0
 7001 00aa 2046     		mov	r0, r4
 7002 00ac 03B0     		add	sp, sp, #12
 7003              	.LCFI103:
 7004              		.cfi_def_cfa_offset 12
 7005              		@ sp needed
 7006 00ae 30BD     		pop	{r4, r5, pc}
 7007              		.cfi_endproc
 7008              	.LFE379:
 7010              		.section	.text.f_unlink,"ax",%progbits
 7011              		.align	1
 7012              		.global	f_unlink
 7013              		.syntax unified
 7014              		.thumb
 7015              		.thumb_func
 7016              		.fpu fpv4-sp-d16
 7018              	f_unlink:
 7019              	.LFB380:
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7020              		.loc 1 4528 0
 7021              		.cfi_startproc
 7022              		@ args = 0, pretend = 0, frame = 112
 7023              		@ frame_needed = 0, uses_anonymous_args = 0
 7024              	.LVL1024:
 7025 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7026              	.LCFI104:
 7027              		.cfi_def_cfa_offset 20
 7028              		.cfi_offset 4, -20
 7029              		.cfi_offset 5, -16
 7030              		.cfi_offset 6, -12
 7031              		.cfi_offset 7, -8
 7032              		.cfi_offset 14, -4
 7033 0002 9DB0     		sub	sp, sp, #116
 7034              	.LCFI105:
 7035              		.cfi_def_cfa_offset 136
 7036 0004 0190     		str	r0, [sp, #4]
 7037              	.LVL1025:
ARM GAS  /tmp/ccJz23SP.s 			page 246


4540:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7038              		.loc 1 4540 0
 7039 0006 0222     		movs	r2, #2
 7040 0008 03A9     		add	r1, sp, #12
 7041 000a 01A8     		add	r0, sp, #4
 7042              	.LVL1026:
 7043 000c FFF7FEFF 		bl	find_volume
 7044              	.LVL1027:
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7045              		.loc 1 4541 0
 7046 0010 039B     		ldr	r3, [sp, #12]
 7047 0012 1093     		str	r3, [sp, #64]
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7048              		.loc 1 4542 0
 7049 0014 0446     		mov	r4, r0
 7050 0016 10B1     		cbz	r0, .L671
 7051              	.LVL1028:
 7052              	.L662:
4611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7053              		.loc 1 4611 0
 7054 0018 2046     		mov	r0, r4
 7055 001a 1DB0     		add	sp, sp, #116
 7056              	.LCFI106:
 7057              		.cfi_remember_state
 7058              		.cfi_def_cfa_offset 20
 7059              		@ sp needed
 7060 001c F0BD     		pop	{r4, r5, r6, r7, pc}
 7061              	.LVL1029:
 7062              	.L671:
 7063              	.LCFI107:
 7064              		.cfi_restore_state
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 7065              		.loc 1 4544 0
 7066 001e 0199     		ldr	r1, [sp, #4]
 7067 0020 10A8     		add	r0, sp, #64
 7068              	.LVL1030:
 7069 0022 FFF7FEFF 		bl	follow_path
 7070              	.LVL1031:
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7071              		.loc 1 4549 0
 7072 0026 0446     		mov	r4, r0
 7073 0028 20B9     		cbnz	r0, .L663
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7074              		.loc 1 4549 0 is_stmt 0 discriminator 1
 7075 002a 0221     		movs	r1, #2
 7076 002c 10A8     		add	r0, sp, #64
 7077              	.LVL1032:
 7078 002e FFF7FEFF 		bl	chk_lock
 7079              	.LVL1033:
 7080 0032 0446     		mov	r4, r0
 7081              	.LVL1034:
 7082              	.L663:
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 7083              		.loc 1 4551 0 is_stmt 1
 7084 0034 002C     		cmp	r4, #0
 7085 0036 EFD1     		bne	.L662
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
ARM GAS  /tmp/ccJz23SP.s 			page 247


 7086              		.loc 1 4552 0
 7087 0038 9DF96F30 		ldrsb	r3, [sp, #111]
 7088 003c 002B     		cmp	r3, #0
 7089 003e 1EDB     		blt	.L667
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 7090              		.loc 1 4555 0
 7091 0040 9DF84650 		ldrb	r5, [sp, #70]	@ zero_extendqisi2
 7092 0044 15F0010F 		tst	r5, #1
 7093 0048 2AD1     		bne	.L668
4569:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7094              		.loc 1 4569 0
 7095 004a 039F     		ldr	r7, [sp, #12]
 7096 004c 1899     		ldr	r1, [sp, #96]
 7097 004e 3846     		mov	r0, r7
 7098 0050 FFF7FEFF 		bl	ld_clust
 7099              	.LVL1035:
 7100 0054 0646     		mov	r6, r0
 7101              	.LVL1036:
4571:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 7102              		.loc 1 4571 0
 7103 0056 15F0100F 		tst	r5, #16
 7104 005a 12D0     		beq	.L664
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
 7105              		.loc 1 4578 0
 7106 005c 0497     		str	r7, [sp, #16]
4579:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7107              		.loc 1 4579 0
 7108 005e 0690     		str	r0, [sp, #24]
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 7109              		.loc 1 4586 0
 7110 0060 0021     		movs	r1, #0
 7111 0062 04A8     		add	r0, sp, #16
 7112              	.LVL1037:
 7113 0064 FFF7FEFF 		bl	dir_sdi
 7114              	.LVL1038:
4587:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 7115              		.loc 1 4587 0
 7116 0068 0446     		mov	r4, r0
 7117 006a 50B9     		cbnz	r0, .L664
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 7118              		.loc 1 4588 0
 7119 006c 0021     		movs	r1, #0
 7120 006e 04A8     		add	r0, sp, #16
 7121              	.LVL1039:
 7122 0070 FFF7FEFF 		bl	dir_read
 7123              	.LVL1040:
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 7124              		.loc 1 4589 0
 7125 0074 0446     		mov	r4, r0
 7126 0076 B0B1     		cbz	r0, .L669
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7127              		.loc 1 4590 0
 7128 0078 0428     		cmp	r0, #4
 7129 007a 02D1     		bne	.L664
 7130 007c 03E0     		b	.L665
 7131              	.LVL1041:
 7132              	.L667:
ARM GAS  /tmp/ccJz23SP.s 			page 248


4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 7133              		.loc 1 4531 0
 7134 007e 0026     		movs	r6, #0
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7135              		.loc 1 4553 0
 7136 0080 0624     		movs	r4, #6
 7137              	.LVL1042:
 7138              	.L664:
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 7139              		.loc 1 4595 0
 7140 0082 002C     		cmp	r4, #0
 7141 0084 C8D1     		bne	.L662
 7142              	.LVL1043:
 7143              	.L665:
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 7144              		.loc 1 4596 0
 7145 0086 10A8     		add	r0, sp, #64
 7146 0088 FFF7FEFF 		bl	dir_remove
 7147              	.LVL1044:
4597:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7148              		.loc 1 4597 0
 7149 008c 0446     		mov	r4, r0
 7150 008e 00B9     		cbnz	r0, .L666
4597:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7151              		.loc 1 4597 0 is_stmt 0 discriminator 1
 7152 0090 5EB9     		cbnz	r6, .L672
 7153              	.LVL1045:
 7154              	.L666:
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7155              		.loc 1 4604 0 is_stmt 1
 7156 0092 002C     		cmp	r4, #0
 7157 0094 C0D1     		bne	.L662
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7158              		.loc 1 4604 0 is_stmt 0 discriminator 1
 7159 0096 0398     		ldr	r0, [sp, #12]
 7160 0098 FFF7FEFF 		bl	sync_fs
 7161              	.LVL1046:
 7162 009c 0446     		mov	r4, r0
 7163              	.LVL1047:
 7164 009e BBE7     		b	.L662
 7165              	.LVL1048:
 7166              	.L668:
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 7167              		.loc 1 4531 0 is_stmt 1
 7168 00a0 0026     		movs	r6, #0
4556:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7169              		.loc 1 4556 0
 7170 00a2 0724     		movs	r4, #7
 7171              	.LVL1049:
 7172 00a4 EDE7     		b	.L664
 7173              	.LVL1050:
 7174              	.L669:
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 7175              		.loc 1 4589 0
 7176 00a6 0724     		movs	r4, #7
 7177 00a8 EBE7     		b	.L664
 7178              	.L672:
ARM GAS  /tmp/ccJz23SP.s 			page 249


4601:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7179              		.loc 1 4601 0
 7180 00aa 0022     		movs	r2, #0
 7181 00ac 3146     		mov	r1, r6
 7182 00ae 10A8     		add	r0, sp, #64
 7183              	.LVL1051:
 7184 00b0 FFF7FEFF 		bl	remove_chain
 7185              	.LVL1052:
 7186 00b4 0446     		mov	r4, r0
 7187              	.LVL1053:
 7188 00b6 ECE7     		b	.L666
 7189              		.cfi_endproc
 7190              	.LFE380:
 7192              		.section	.text.f_mkdir,"ax",%progbits
 7193              		.align	1
 7194              		.global	f_mkdir
 7195              		.syntax unified
 7196              		.thumb
 7197              		.thumb_func
 7198              		.fpu fpv4-sp-d16
 7200              	f_mkdir:
 7201              	.LFB381:
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7202              		.loc 1 4623 0
 7203              		.cfi_startproc
 7204              		@ args = 0, pretend = 0, frame = 64
 7205              		@ frame_needed = 0, uses_anonymous_args = 0
 7206              	.LVL1054:
 7207 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7208              	.LCFI108:
 7209              		.cfi_def_cfa_offset 36
 7210              		.cfi_offset 4, -36
 7211              		.cfi_offset 5, -32
 7212              		.cfi_offset 6, -28
 7213              		.cfi_offset 7, -24
 7214              		.cfi_offset 8, -20
 7215              		.cfi_offset 9, -16
 7216              		.cfi_offset 10, -12
 7217              		.cfi_offset 11, -8
 7218              		.cfi_offset 14, -4
 7219 0004 91B0     		sub	sp, sp, #68
 7220              	.LCFI109:
 7221              		.cfi_def_cfa_offset 104
 7222 0006 0190     		str	r0, [sp, #4]
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7223              		.loc 1 4634 0
 7224 0008 0222     		movs	r2, #2
 7225 000a 03A9     		add	r1, sp, #12
 7226 000c 01A8     		add	r0, sp, #4
 7227              	.LVL1055:
 7228 000e FFF7FEFF 		bl	find_volume
 7229              	.LVL1056:
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7230              		.loc 1 4635 0
 7231 0012 039B     		ldr	r3, [sp, #12]
 7232 0014 0493     		str	r3, [sp, #16]
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
ARM GAS  /tmp/ccJz23SP.s 			page 250


 7233              		.loc 1 4636 0
 7234 0016 0446     		mov	r4, r0
 7235 0018 18B1     		cbz	r0, .L691
 7236              	.LVL1057:
 7237              	.L674:
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7238              		.loc 1 4708 0
 7239 001a 2046     		mov	r0, r4
 7240 001c 11B0     		add	sp, sp, #68
 7241              	.LCFI110:
 7242              		.cfi_remember_state
 7243              		.cfi_def_cfa_offset 36
 7244              		@ sp needed
 7245 001e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7246              	.LVL1058:
 7247              	.L691:
 7248              	.LCFI111:
 7249              		.cfi_restore_state
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7250              		.loc 1 4638 0
 7251 0022 0199     		ldr	r1, [sp, #4]
 7252 0024 04A8     		add	r0, sp, #16
 7253              	.LVL1059:
 7254 0026 FFF7FEFF 		bl	follow_path
 7255              	.LVL1060:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 7256              		.loc 1 4639 0
 7257 002a 0028     		cmp	r0, #0
 7258 002c 00F09980 		beq	.L684
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 7259              		.loc 1 4643 0
 7260 0030 0428     		cmp	r0, #4
 7261 0032 01D0     		beq	.L692
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7262              		.loc 1 4638 0
 7263 0034 0446     		mov	r4, r0
 7264 0036 F0E7     		b	.L674
 7265              	.L692:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 7266              		.loc 1 4644 0
 7267 0038 0021     		movs	r1, #0
 7268 003a 04A8     		add	r0, sp, #16
 7269              	.LVL1061:
 7270 003c FFF7FEFF 		bl	create_chain
 7271              	.LVL1062:
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7272              		.loc 1 4645 0
 7273 0040 039A     		ldr	r2, [sp, #12]
 7274 0042 5389     		ldrh	r3, [r2, #10]
 7275 0044 5B02     		lsls	r3, r3, #9
 7276 0046 0793     		str	r3, [sp, #28]
 7277              	.LVL1063:
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 7278              		.loc 1 4647 0
 7279 0048 0746     		mov	r7, r0
 7280 004a 00B9     		cbnz	r0, .L675
 7281 004c 0724     		movs	r4, #7
ARM GAS  /tmp/ccJz23SP.s 			page 251


 7282              	.L675:
 7283              	.LVL1064:
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7284              		.loc 1 4648 0
 7285 004e 012F     		cmp	r7, #1
 7286 0050 11D0     		beq	.L693
 7287              	.LVL1065:
 7288              	.L676:
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7289              		.loc 1 4649 0
 7290 0052 B7F1FF3F 		cmp	r7, #-1
 7291 0056 15D0     		beq	.L688
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7292              		.loc 1 4650 0
 7293 0058 7CB1     		cbz	r4, .L694
 7294              	.LVL1066:
 7295              	.L677:
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 7296              		.loc 1 4651 0
 7297 005a FFF7FEFF 		bl	get_fattime
 7298              	.LVL1067:
 7299 005e 8246     		mov	r10, r0
 7300              	.LVL1068:
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
 7301              		.loc 1 4652 0
 7302 0060 94B1     		cbz	r4, .L695
 7303              	.LVL1069:
 7304              	.L678:
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 7305              		.loc 1 4675 0
 7306 0062 002C     		cmp	r4, #0
 7307 0064 63D0     		beq	.L696
 7308              	.L682:
4678:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7309              		.loc 1 4678 0
 7310 0066 002C     		cmp	r4, #0
 7311 0068 66D0     		beq	.L697
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7312              		.loc 1 4701 0
 7313 006a 0022     		movs	r2, #0
 7314 006c 3946     		mov	r1, r7
 7315 006e 04A8     		add	r0, sp, #16
 7316 0070 FFF7FEFF 		bl	remove_chain
 7317              	.LVL1070:
 7318 0074 D1E7     		b	.L674
 7319              	.LVL1071:
 7320              	.L693:
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7321              		.loc 1 4648 0
 7322 0076 0224     		movs	r4, #2
 7323              	.LVL1072:
 7324 0078 EBE7     		b	.L676
 7325              	.LVL1073:
 7326              	.L694:
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7327              		.loc 1 4650 0 discriminator 1
 7328 007a 1046     		mov	r0, r2
ARM GAS  /tmp/ccJz23SP.s 			page 252


 7329              	.LVL1074:
 7330 007c FFF7FEFF 		bl	sync_window
 7331              	.LVL1075:
 7332 0080 0446     		mov	r4, r0
 7333              	.LVL1076:
 7334 0082 EAE7     		b	.L677
 7335              	.LVL1077:
 7336              	.L688:
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7337              		.loc 1 4649 0
 7338 0084 0124     		movs	r4, #1
 7339              	.LVL1078:
 7340 0086 E8E7     		b	.L677
 7341              	.LVL1079:
 7342              	.L695:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
 7343              		.loc 1 4653 0
 7344 0088 039D     		ldr	r5, [sp, #12]
 7345 008a 3946     		mov	r1, r7
 7346 008c 2846     		mov	r0, r5
 7347              	.LVL1080:
 7348 008e FFF7FEFF 		bl	clust2sect
 7349              	.LVL1081:
 7350 0092 0646     		mov	r6, r0
 7351              	.LVL1082:
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
 7352              		.loc 1 4654 0
 7353 0094 05F13009 		add	r9, r5, #48
 7354              	.LVL1083:
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 7355              		.loc 1 4655 0
 7356 0098 4FF40072 		mov	r2, #512
 7357 009c 0021     		movs	r1, #0
 7358 009e 4846     		mov	r0, r9
 7359              	.LVL1084:
 7360 00a0 FFF7FEFF 		bl	mem_set
 7361              	.LVL1085:
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
 7362              		.loc 1 4657 0
 7363 00a4 0B22     		movs	r2, #11
 7364 00a6 2021     		movs	r1, #32
 7365 00a8 4846     		mov	r0, r9
 7366 00aa FFF7FEFF 		bl	mem_set
 7367              	.LVL1086:
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 7368              		.loc 1 4658 0
 7369 00ae 4FF02E0B 		mov	fp, #46
 7370 00b2 85F830B0 		strb	fp, [r5, #48]
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 7371              		.loc 1 4659 0
 7372 00b6 1023     		movs	r3, #16
 7373 00b8 85F83B30 		strb	r3, [r5, #59]
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
 7374              		.loc 1 4660 0
 7375 00bc 5146     		mov	r1, r10
 7376 00be 05F14600 		add	r0, r5, #70
 7377 00c2 FFF7FEFF 		bl	st_dword
ARM GAS  /tmp/ccJz23SP.s 			page 253


 7378              	.LVL1087:
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 7379              		.loc 1 4661 0
 7380 00c6 3A46     		mov	r2, r7
 7381 00c8 4946     		mov	r1, r9
 7382 00ca 0398     		ldr	r0, [sp, #12]
 7383 00cc FFF7FEFF 		bl	st_clust
 7384              	.LVL1088:
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 7385              		.loc 1 4662 0
 7386 00d0 05F15008 		add	r8, r5, #80
 7387 00d4 2022     		movs	r2, #32
 7388 00d6 4946     		mov	r1, r9
 7389 00d8 4046     		mov	r0, r8
 7390 00da FFF7FEFF 		bl	mem_cpy
 7391              	.LVL1089:
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 7392              		.loc 1 4663 0
 7393 00de 85F851B0 		strb	fp, [r5, #81]
 7394 00e2 069A     		ldr	r2, [sp, #24]
 7395              	.LVL1090:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7396              		.loc 1 4664 0
 7397 00e4 0398     		ldr	r0, [sp, #12]
 7398 00e6 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 7399 00e8 032B     		cmp	r3, #3
 7400 00ea 1BD0     		beq	.L698
 7401              	.LVL1091:
 7402              	.L679:
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7403              		.loc 1 4665 0
 7404 00ec 4146     		mov	r1, r8
 7405 00ee FFF7FEFF 		bl	st_clust
 7406              	.LVL1092:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7407              		.loc 1 4667 0
 7408 00f2 039B     		ldr	r3, [sp, #12]
 7409 00f4 5D89     		ldrh	r5, [r3, #10]
 7410              	.LVL1093:
 7411              	.L680:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7412              		.loc 1 4667 0 is_stmt 0 discriminator 1
 7413 00f6 002D     		cmp	r5, #0
 7414 00f8 B3D0     		beq	.L678
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7415              		.loc 1 4668 0 is_stmt 1
 7416 00fa 06F10108 		add	r8, r6, #1
 7417              	.LVL1094:
 7418 00fe 039B     		ldr	r3, [sp, #12]
 7419 0100 DE62     		str	r6, [r3, #44]
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
 7420              		.loc 1 4669 0
 7421 0102 0122     		movs	r2, #1
 7422 0104 DA70     		strb	r2, [r3, #3]
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 7423              		.loc 1 4670 0
 7424 0106 0398     		ldr	r0, [sp, #12]
ARM GAS  /tmp/ccJz23SP.s 			page 254


 7425 0108 FFF7FEFF 		bl	sync_window
 7426              	.LVL1095:
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
 7427              		.loc 1 4671 0
 7428 010c 0446     		mov	r4, r0
 7429 010e 0028     		cmp	r0, #0
 7430 0110 A7D1     		bne	.L678
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7431              		.loc 1 4672 0 discriminator 2
 7432 0112 4FF40072 		mov	r2, #512
 7433 0116 0021     		movs	r1, #0
 7434 0118 4846     		mov	r0, r9
 7435              	.LVL1096:
 7436 011a FFF7FEFF 		bl	mem_set
 7437              	.LVL1097:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7438              		.loc 1 4667 0 discriminator 2
 7439 011e 013D     		subs	r5, r5, #1
 7440              	.LVL1098:
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7441              		.loc 1 4668 0 discriminator 2
 7442 0120 4646     		mov	r6, r8
 7443 0122 E8E7     		b	.L680
 7444              	.LVL1099:
 7445              	.L698:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7446              		.loc 1 4664 0 discriminator 1
 7447 0124 436A     		ldr	r3, [r0, #36]
 7448 0126 9342     		cmp	r3, r2
 7449 0128 E0D1     		bne	.L679
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7450              		.loc 1 4664 0 is_stmt 0
 7451 012a 0022     		movs	r2, #0
 7452              	.LVL1100:
 7453 012c DEE7     		b	.L679
 7454              	.LVL1101:
 7455              	.L696:
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7456              		.loc 1 4676 0 is_stmt 1
 7457 012e 04A8     		add	r0, sp, #16
 7458 0130 FFF7FEFF 		bl	dir_register
 7459              	.LVL1102:
 7460 0134 0446     		mov	r4, r0
 7461              	.LVL1103:
 7462 0136 96E7     		b	.L682
 7463              	.L697:
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 7464              		.loc 1 4691 0
 7465 0138 0C9C     		ldr	r4, [sp, #48]
 7466              	.LVL1104:
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 7467              		.loc 1 4692 0
 7468 013a 5146     		mov	r1, r10
 7469 013c 04F11600 		add	r0, r4, #22
 7470 0140 FFF7FEFF 		bl	st_dword
 7471              	.LVL1105:
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
ARM GAS  /tmp/ccJz23SP.s 			page 255


 7472              		.loc 1 4693 0
 7473 0144 3A46     		mov	r2, r7
 7474 0146 2146     		mov	r1, r4
 7475 0148 0398     		ldr	r0, [sp, #12]
 7476 014a FFF7FEFF 		bl	st_clust
 7477              	.LVL1106:
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7478              		.loc 1 4694 0
 7479 014e 1023     		movs	r3, #16
 7480 0150 E372     		strb	r3, [r4, #11]
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7481              		.loc 1 4695 0
 7482 0152 039B     		ldr	r3, [sp, #12]
 7483 0154 0122     		movs	r2, #1
 7484 0156 DA70     		strb	r2, [r3, #3]
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7485              		.loc 1 4698 0
 7486 0158 0398     		ldr	r0, [sp, #12]
 7487 015a FFF7FEFF 		bl	sync_fs
 7488              	.LVL1107:
 7489 015e 0446     		mov	r4, r0
 7490              	.LVL1108:
 7491 0160 5BE7     		b	.L674
 7492              	.LVL1109:
 7493              	.L684:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 7494              		.loc 1 4639 0
 7495 0162 0824     		movs	r4, #8
 7496 0164 59E7     		b	.L674
 7497              		.cfi_endproc
 7498              	.LFE381:
 7500              		.section	.text.f_rename,"ax",%progbits
 7501              		.align	1
 7502              		.global	f_rename
 7503              		.syntax unified
 7504              		.thumb
 7505              		.thumb_func
 7506              		.fpu fpv4-sp-d16
 7508              	f_rename:
 7509              	.LFB382:
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7510              		.loc 1 4721 0
 7511              		.cfi_startproc
 7512              		@ args = 0, pretend = 0, frame = 136
 7513              		@ frame_needed = 0, uses_anonymous_args = 0
 7514              	.LVL1110:
 7515 0000 30B5     		push	{r4, r5, lr}
 7516              	.LCFI112:
 7517              		.cfi_def_cfa_offset 12
 7518              		.cfi_offset 4, -12
 7519              		.cfi_offset 5, -8
 7520              		.cfi_offset 14, -4
 7521 0002 A3B0     		sub	sp, sp, #140
 7522              	.LCFI113:
 7523              		.cfi_def_cfa_offset 152
 7524 0004 0190     		str	r0, [sp, #4]
 7525 0006 22A8     		add	r0, sp, #136
ARM GAS  /tmp/ccJz23SP.s 			page 256


 7526              	.LVL1111:
 7527 0008 40F8881D 		str	r1, [r0, #-136]!
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 7528              		.loc 1 4730 0
 7529 000c FFF7FEFF 		bl	get_ldnumber
 7530              	.LVL1112:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7531              		.loc 1 4731 0
 7532 0010 0222     		movs	r2, #2
 7533 0012 09A9     		add	r1, sp, #36
 7534 0014 01A8     		add	r0, sp, #4
 7535 0016 FFF7FEFF 		bl	find_volume
 7536              	.LVL1113:
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
 7537              		.loc 1 4732 0
 7538 001a 0446     		mov	r4, r0
 7539 001c 10B1     		cbz	r0, .L710
 7540              	.LVL1114:
 7541              	.L700:
4811:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7542              		.loc 1 4811 0
 7543 001e 2046     		mov	r0, r4
 7544 0020 23B0     		add	sp, sp, #140
 7545              	.LCFI114:
 7546              		.cfi_remember_state
 7547              		.cfi_def_cfa_offset 12
 7548              		@ sp needed
 7549 0022 30BD     		pop	{r4, r5, pc}
 7550              	.LVL1115:
 7551              	.L710:
 7552              	.LCFI115:
 7553              		.cfi_restore_state
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7554              		.loc 1 4733 0
 7555 0024 099B     		ldr	r3, [sp, #36]
 7556 0026 1693     		str	r3, [sp, #88]
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 7557              		.loc 1 4735 0
 7558 0028 0199     		ldr	r1, [sp, #4]
 7559 002a 16A8     		add	r0, sp, #88
 7560              	.LVL1116:
 7561 002c FFF7FEFF 		bl	follow_path
 7562              	.LVL1117:
4736:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7563              		.loc 1 4736 0
 7564 0030 0446     		mov	r4, r0
 7565 0032 20B9     		cbnz	r0, .L701
4736:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7566              		.loc 1 4736 0 is_stmt 0 discriminator 1
 7567 0034 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 7568 0038 13F0A00F 		tst	r3, #160
 7569 003c 1ED1     		bne	.L706
 7570              	.L701:
 7571              	.LVL1118:
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
 7572              		.loc 1 4738 0 is_stmt 1
 7573 003e 24B9     		cbnz	r4, .L702
ARM GAS  /tmp/ccJz23SP.s 			page 257


4739:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7574              		.loc 1 4739 0
 7575 0040 0221     		movs	r1, #2
 7576 0042 16A8     		add	r0, sp, #88
 7577 0044 FFF7FEFF 		bl	chk_lock
 7578              	.LVL1119:
 7579 0048 0446     		mov	r4, r0
 7580              	.LVL1120:
 7581              	.L702:
4742:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7582              		.loc 1 4742 0
 7583 004a 002C     		cmp	r4, #0
 7584 004c E7D1     		bne	.L700
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7585              		.loc 1 4769 0
 7586 004e 1522     		movs	r2, #21
 7587 0050 1E99     		ldr	r1, [sp, #120]
 7588 0052 0B31     		adds	r1, r1, #11
 7589 0054 03A8     		add	r0, sp, #12
 7590 0056 FFF7FEFF 		bl	mem_cpy
 7591              	.LVL1121:
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 7592              		.loc 1 4770 0
 7593 005a 3022     		movs	r2, #48
 7594 005c 16A9     		add	r1, sp, #88
 7595 005e 0AA8     		add	r0, sp, #40
 7596 0060 FFF7FEFF 		bl	mem_cpy
 7597              	.LVL1122:
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 7598              		.loc 1 4771 0
 7599 0064 0099     		ldr	r1, [sp]
 7600 0066 0AA8     		add	r0, sp, #40
 7601 0068 FFF7FEFF 		bl	follow_path
 7602              	.LVL1123:
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 7603              		.loc 1 4772 0
 7604 006c 0446     		mov	r4, r0
 7605 006e 68B9     		cbnz	r0, .L703
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7606              		.loc 1 4773 0
 7607 0070 0C9A     		ldr	r2, [sp, #48]
 7608 0072 189B     		ldr	r3, [sp, #96]
 7609 0074 9A42     		cmp	r2, r3
 7610 0076 03D0     		beq	.L711
 7611 0078 0824     		movs	r4, #8
 7612 007a 09E0     		b	.L704
 7613              	.L706:
4736:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7614              		.loc 1 4736 0
 7615 007c 0624     		movs	r4, #6
 7616 007e E4E7     		b	.L702
 7617              	.L711:
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7618              		.loc 1 4773 0 discriminator 1
 7619 0080 0F9A     		ldr	r2, [sp, #60]
 7620 0082 1B9B     		ldr	r3, [sp, #108]
 7621 0084 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccJz23SP.s 			page 258


 7622 0086 10D0     		beq	.L705
 7623 0088 0824     		movs	r4, #8
 7624 008a 01E0     		b	.L704
 7625              	.L703:
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 7626              		.loc 1 4775 0
 7627 008c 0428     		cmp	r0, #4
 7628 008e 0CD0     		beq	.L705
 7629              	.LVL1124:
 7630              	.L704:
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 7631              		.loc 1 4799 0
 7632 0090 002C     		cmp	r4, #0
 7633 0092 C4D1     		bne	.L700
4800:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 7634              		.loc 1 4800 0
 7635 0094 16A8     		add	r0, sp, #88
 7636 0096 FFF7FEFF 		bl	dir_remove
 7637              	.LVL1125:
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
 7638              		.loc 1 4801 0
 7639 009a 0446     		mov	r4, r0
 7640 009c 0028     		cmp	r0, #0
 7641 009e BED1     		bne	.L700
4802:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7642              		.loc 1 4802 0
 7643 00a0 0998     		ldr	r0, [sp, #36]
 7644              	.LVL1126:
 7645 00a2 FFF7FEFF 		bl	sync_fs
 7646              	.LVL1127:
 7647 00a6 0446     		mov	r4, r0
 7648              	.LVL1128:
 7649 00a8 B9E7     		b	.L700
 7650              	.LVL1129:
 7651              	.L705:
4776:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 7652              		.loc 1 4776 0
 7653 00aa 0AA8     		add	r0, sp, #40
 7654              	.LVL1130:
 7655 00ac FFF7FEFF 		bl	dir_register
 7656              	.LVL1131:
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 7657              		.loc 1 4777 0
 7658 00b0 0446     		mov	r4, r0
 7659 00b2 0028     		cmp	r0, #0
 7660 00b4 ECD1     		bne	.L704
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 7661              		.loc 1 4778 0
 7662 00b6 129D     		ldr	r5, [sp, #72]
 7663              	.LVL1132:
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 7664              		.loc 1 4779 0
 7665 00b8 1322     		movs	r2, #19
 7666 00ba 0DF10E01 		add	r1, sp, #14
 7667 00be 05F10D00 		add	r0, r5, #13
 7668              	.LVL1133:
 7669 00c2 FFF7FEFF 		bl	mem_cpy
ARM GAS  /tmp/ccJz23SP.s 			page 259


 7670              	.LVL1134:
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 7671              		.loc 1 4780 0
 7672 00c6 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 7673 00ca 43F02003 		orr	r3, r3, #32
 7674 00ce EB72     		strb	r3, [r5, #11]
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 7675              		.loc 1 4781 0
 7676 00d0 099B     		ldr	r3, [sp, #36]
 7677 00d2 0122     		movs	r2, #1
 7678 00d4 DA70     		strb	r2, [r3, #3]
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 7679              		.loc 1 4782 0
 7680 00d6 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 7681 00d8 13F0100F 		tst	r3, #16
 7682 00dc D8D0     		beq	.L704
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 7683              		.loc 1 4782 0 is_stmt 0 discriminator 1
 7684 00de 189A     		ldr	r2, [sp, #96]
 7685 00e0 0C9B     		ldr	r3, [sp, #48]
 7686 00e2 9A42     		cmp	r2, r3
 7687 00e4 D4D0     		beq	.L704
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 7688              		.loc 1 4783 0 is_stmt 1
 7689 00e6 099C     		ldr	r4, [sp, #36]
 7690 00e8 2946     		mov	r1, r5
 7691 00ea 2046     		mov	r0, r4
 7692 00ec FFF7FEFF 		bl	ld_clust
 7693              	.LVL1135:
 7694 00f0 0146     		mov	r1, r0
 7695 00f2 2046     		mov	r0, r4
 7696 00f4 FFF7FEFF 		bl	clust2sect
 7697              	.LVL1136:
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 7698              		.loc 1 4784 0
 7699 00f8 0146     		mov	r1, r0
 7700 00fa A0B1     		cbz	r0, .L708
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 7701              		.loc 1 4788 0
 7702 00fc 2046     		mov	r0, r4
 7703              	.LVL1137:
 7704 00fe FFF7FEFF 		bl	move_window
 7705              	.LVL1138:
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 7706              		.loc 1 4789 0
 7707 0102 099B     		ldr	r3, [sp, #36]
 7708 0104 03F15001 		add	r1, r3, #80
 7709              	.LVL1139:
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 7710              		.loc 1 4790 0
 7711 0108 0446     		mov	r4, r0
 7712 010a 0028     		cmp	r0, #0
 7713 010c C0D1     		bne	.L704
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 7714              		.loc 1 4790 0 is_stmt 0 discriminator 1
 7715 010e 93F85120 		ldrb	r2, [r3, #81]	@ zero_extendqisi2
 7716 0112 2E2A     		cmp	r2, #46
ARM GAS  /tmp/ccJz23SP.s 			page 260


 7717 0114 BCD1     		bne	.L704
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
 7718              		.loc 1 4791 0 is_stmt 1
 7719 0116 0C9A     		ldr	r2, [sp, #48]
 7720 0118 1846     		mov	r0, r3
 7721              	.LVL1140:
 7722 011a FFF7FEFF 		bl	st_clust
 7723              	.LVL1141:
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 7724              		.loc 1 4792 0
 7725 011e 099B     		ldr	r3, [sp, #36]
 7726 0120 0122     		movs	r2, #1
 7727 0122 DA70     		strb	r2, [r3, #3]
 7728 0124 B4E7     		b	.L704
 7729              	.LVL1142:
 7730              	.L708:
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 7731              		.loc 1 4785 0
 7732 0126 0224     		movs	r4, #2
 7733 0128 79E7     		b	.L700
 7734              		.cfi_endproc
 7735              	.LFE382:
 7737              		.section	.text.f_mkfs,"ax",%progbits
 7738              		.align	1
 7739              		.global	f_mkfs
 7740              		.syntax unified
 7741              		.thumb
 7742              		.thumb_func
 7743              		.fpu fpv4-sp-d16
 7745              	f_mkfs:
 7746              	.LFB383:
5308:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 7747              		.loc 1 5308 0
 7748              		.cfi_startproc
 7749              		@ args = 4, pretend = 0, frame = 40
 7750              		@ frame_needed = 0, uses_anonymous_args = 0
 7751              	.LVL1143:
 7752 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7753              	.LCFI116:
 7754              		.cfi_def_cfa_offset 36
 7755              		.cfi_offset 4, -36
 7756              		.cfi_offset 5, -32
 7757              		.cfi_offset 6, -28
 7758              		.cfi_offset 7, -24
 7759              		.cfi_offset 8, -20
 7760              		.cfi_offset 9, -16
 7761              		.cfi_offset 10, -12
 7762              		.cfi_offset 11, -8
 7763              		.cfi_offset 14, -4
 7764 0004 8BB0     		sub	sp, sp, #44
 7765              	.LCFI117:
 7766              		.cfi_def_cfa_offset 80
 7767 0006 0AAC     		add	r4, sp, #40
 7768 0008 44F80C0D 		str	r0, [r4, #-12]!
 7769 000c 8846     		mov	r8, r1
 7770 000e 1546     		mov	r5, r2
 7771 0010 1F46     		mov	r7, r3
ARM GAS  /tmp/ccJz23SP.s 			page 261


 7772              	.LVL1144:
5327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 7773              		.loc 1 5327 0
 7774 0012 2046     		mov	r0, r4
 7775              	.LVL1145:
 7776 0014 FFF7FEFF 		bl	get_ldnumber
 7777              	.LVL1146:
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 7778              		.loc 1 5328 0
 7779 0018 0028     		cmp	r0, #0
 7780 001a C0F2D982 		blt	.L757
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 7781              		.loc 1 5329 0
 7782 001e 944B     		ldr	r3, .L805
 7783 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
 7784 0024 0BB1     		cbz	r3, .L714
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 7785              		.loc 1 5329 0 is_stmt 0 discriminator 1
 7786 0026 0022     		movs	r2, #0
 7787 0028 1A70     		strb	r2, [r3]
 7788              	.L714:
5330:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 7789              		.loc 1 5330 0 is_stmt 1
 7790 002a C4B2     		uxtb	r4, r0
 7791              	.LVL1147:
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 7792              		.loc 1 5334 0
 7793 002c 2046     		mov	r0, r4
 7794              	.LVL1148:
 7795 002e FFF7FEFF 		bl	disk_initialize
 7796              	.LVL1149:
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 7797              		.loc 1 5335 0
 7798 0032 10F0010F 		tst	r0, #1
 7799 0036 40F0CD82 		bne	.L758
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 7800              		.loc 1 5336 0
 7801 003a 10F0040F 		tst	r0, #4
 7802 003e 40F0CB82 		bne	.L759
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7803              		.loc 1 5337 0
 7804 0042 09AA     		add	r2, sp, #36
 7805 0044 0321     		movs	r1, #3
 7806 0046 2046     		mov	r0, r4
 7807              	.LVL1150:
 7808 0048 FFF7FEFF 		bl	disk_ioctl
 7809              	.LVL1151:
 7810 004c 38B9     		cbnz	r0, .L715
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7811              		.loc 1 5337 0 is_stmt 0 discriminator 2
 7812 004e 099B     		ldr	r3, [sp, #36]
 7813 0050 2BB1     		cbz	r3, .L715
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7814              		.loc 1 5337 0 discriminator 4
 7815 0052 B3F5004F 		cmp	r3, #32768
 7816 0056 02D8     		bhi	.L715
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
ARM GAS  /tmp/ccJz23SP.s 			page 262


 7817              		.loc 1 5337 0 discriminator 6
 7818 0058 5A1E     		subs	r2, r3, #1
 7819 005a 1342     		tst	r3, r2
 7820 005c 01D0     		beq	.L716
 7821              	.L715:
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7822              		.loc 1 5337 0 discriminator 7
 7823 005e 0123     		movs	r3, #1
 7824 0060 0993     		str	r3, [sp, #36]
 7825              	.L716:
 7826              	.LVL1152:
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7827              		.loc 1 5344 0 is_stmt 1
 7828 0062 1DB1     		cbz	r5, .L717
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7829              		.loc 1 5344 0 is_stmt 0 discriminator 1
 7830 0064 B5F5007F 		cmp	r5, #512
 7831 0068 C0F0BA82 		bcc	.L760
 7832              	.L717:
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7833              		.loc 1 5344 0 discriminator 4
 7834 006c B5F1807F 		cmp	r5, #16777216
 7835 0070 00F2B882 		bhi	.L761
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7836              		.loc 1 5344 0 discriminator 6
 7837 0074 6B1E     		subs	r3, r5, #1
 7838 0076 2B42     		tst	r3, r5
 7839 0078 40F0B682 		bne	.L762
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7840              		.loc 1 5345 0 is_stmt 1
 7841 007c 6D0A     		lsrs	r5, r5, #9
 7842              	.LVL1153:
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 7843              		.loc 1 5349 0
 7844 007e 149B     		ldr	r3, [sp, #80]
 7845 0080 4FEA532A 		lsr	r10, r3, #9
 7846              	.LVL1154:
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
 7847              		.loc 1 5350 0
 7848 0084 23F4FF76 		bic	r6, r3, #510
 7849 0088 26F00106 		bic	r6, r6, #1
 7850              	.LVL1155:
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7851              		.loc 1 5351 0
 7852 008c 002E     		cmp	r6, #0
 7853 008e 00F0AD82 		beq	.L763
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 7854              		.loc 1 5364 0
 7855 0092 08AA     		add	r2, sp, #32
 7856 0094 0121     		movs	r1, #1
 7857 0096 2046     		mov	r0, r4
 7858 0098 FFF7FEFF 		bl	disk_ioctl
 7859              	.LVL1156:
 7860 009c 0028     		cmp	r0, #0
 7861 009e 40F0A782 		bne	.L764
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 7862              		.loc 1 5365 0
ARM GAS  /tmp/ccJz23SP.s 			page 263


 7863 00a2 18F00803 		ands	r3, r8, #8
 7864 00a6 0093     		str	r3, [sp]
 7865 00a8 70D0     		beq	.L765
 7866 00aa 4FF00009 		mov	r9, #0
 7867              	.L718:
 7868              	.LVL1157:
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 7869              		.loc 1 5366 0 discriminator 4
 7870 00ae 089B     		ldr	r3, [sp, #32]
 7871 00b0 4B45     		cmp	r3, r9
 7872 00b2 C0F09F82 		bcc	.L766
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7873              		.loc 1 5367 0
 7874 00b6 A3EB0903 		sub	r3, r3, r9
 7875 00ba 0893     		str	r3, [sp, #32]
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7876              		.loc 1 5369 0
 7877 00bc 7F2B     		cmp	r3, #127
 7878 00be 40F29B82 		bls	.L767
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 7879              		.loc 1 5378 0
 7880 00c2 802D     		cmp	r5, #128
 7881 00c4 00F29A82 		bhi	.L768
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 7882              		.loc 1 5379 0
 7883 00c8 18F00200 		ands	r0, r8, #2
 7884 00cc 06D0     		beq	.L719
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 7885              		.loc 1 5380 0
 7886 00ce 08F00702 		and	r2, r8, #7
 7887 00d2 022A     		cmp	r2, #2
 7888 00d4 5DD0     		beq	.L769
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 7889              		.loc 1 5380 0 is_stmt 0 discriminator 1
 7890 00d6 18F0010F 		tst	r8, #1
 7891 00da 61D0     		beq	.L770
 7892              	.L719:
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 7893              		.loc 1 5384 0 is_stmt 1
 7894 00dc 18F0010F 		tst	r8, #1
 7895 00e0 00F08E82 		beq	.L771
5385:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
 7896              		.loc 1 5385 0
 7897 00e4 4FF0020B 		mov	fp, #2
 7898 00e8 0194     		str	r4, [sp, #4]
 7899 00ea CDF808A0 		str	r10, [sp, #8]
 7900 00ee 0396     		str	r6, [sp, #12]
 7901              	.LVL1158:
 7902              	.L721:
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
 7903              		.loc 1 5555 0
 7904 00f0 BBF1030F 		cmp	fp, #3
 7905 00f4 5FD0     		beq	.L739
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 7906              		.loc 1 5566 0
 7907 00f6 002D     		cmp	r5, #0
 7908 00f8 00F08280 		beq	.L796
ARM GAS  /tmp/ccJz23SP.s 			page 264


 7909 00fc A846     		mov	r8, r5
 7910              	.LVL1159:
 7911              	.L727:
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
 7912              		.loc 1 5570 0
 7913 00fe B3FBF8F2 		udiv	r2, r3, r8
 7914              	.LVL1160:
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 7915              		.loc 1 5571 0
 7916 0102 40F6F571 		movw	r1, #4085
 7917 0106 8A42     		cmp	r2, r1
 7918 0108 40F28B80 		bls	.L730
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 7919              		.loc 1 5572 0
 7920 010c 0232     		adds	r2, r2, #2
 7921              	.LVL1161:
 7922 010e 5200     		lsls	r2, r2, #1
 7923              	.LVL1162:
 7924              	.L731:
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 7925              		.loc 1 5577 0
 7926 0110 02F2FF12 		addw	r2, r2, #511
 7927              	.LVL1163:
 7928 0114 520A     		lsrs	r2, r2, #9
 7929              	.LVL1164:
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7930              		.loc 1 5579 0
 7931 0116 4FF0200E 		mov	lr, #32
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 7932              		.loc 1 5578 0
 7933 011a 4FF0010C 		mov	ip, #1
 7934              	.LVL1165:
 7935              	.L726:
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
 7936              		.loc 1 5581 0
 7937 011e 0CEB090A 		add	r10, ip, r9
 7938              	.LVL1166:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7939              		.loc 1 5582 0
 7940 0122 02EB0A01 		add	r1, r2, r10
 7941 0126 7144     		add	r1, r1, lr
 7942              	.LVL1167:
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 7943              		.loc 1 5585 0
 7944 0128 099E     		ldr	r6, [sp, #36]
 7945 012a 7418     		adds	r4, r6, r1
 7946 012c 013C     		subs	r4, r4, #1
 7947 012e 7642     		negs	r6, r6
 7948 0130 3440     		ands	r4, r4, r6
 7949 0132 641A     		subs	r4, r4, r1
 7950              	.LVL1168:
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
 7951              		.loc 1 5586 0
 7952 0134 BBF1030F 		cmp	fp, #3
 7953 0138 7BD0     		beq	.L797
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7954              		.loc 1 5589 0
ARM GAS  /tmp/ccJz23SP.s 			page 265


 7955 013a 2244     		add	r2, r2, r4
 7956              	.LVL1169:
 7957              	.L733:
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 7958              		.loc 1 5593 0
 7959 013c 01EB0811 		add	r1, r1, r8, lsl #4
 7960              	.LVL1170:
 7961 0140 A1EB0901 		sub	r1, r1, r9
 7962 0144 8B42     		cmp	r3, r1
 7963 0146 C0F05F82 		bcc	.L775
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 7964              		.loc 1 5594 0
 7965 014a A3EB0C01 		sub	r1, r3, ip
 7966 014e 891A     		subs	r1, r1, r2
 7967 0150 A1EB0E01 		sub	r1, r1, lr
 7968 0154 B1FBF8F1 		udiv	r1, r1, r8
 7969              	.LVL1171:
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 7970              		.loc 1 5595 0
 7971 0158 BBF1030F 		cmp	fp, #3
 7972 015c 6CD0     		beq	.L798
 7973              	.LVL1172:
 7974              	.L734:
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 7975              		.loc 1 5601 0
 7976 015e BBF1020F 		cmp	fp, #2
 7977 0162 40F08D80 		bne	.L736
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 7978              		.loc 1 5602 0
 7979 0166 4FF6F574 		movw	r4, #65525
 7980 016a A142     		cmp	r1, r4
 7981 016c 71D9     		bls	.L737
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 7982              		.loc 1 5603 0
 7983 016e 1DB9     		cbnz	r5, .L738
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 7984              		.loc 1 5603 0 is_stmt 0 discriminator 1
 7985 0170 4FEA4802 		lsl	r2, r8, #1
 7986              	.LVL1173:
 7987 0174 402A     		cmp	r2, #64
 7988 0176 1AD9     		bls	.L777
 7989              	.L738:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 7990              		.loc 1 5606 0 is_stmt 1
 7991 0178 D8B9     		cbnz	r0, .L778
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 7992              		.loc 1 5609 0
 7993 017a 002D     		cmp	r5, #0
 7994 017c 40F04882 		bne	.L779
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 7995              		.loc 1 5609 0 is_stmt 0 discriminator 1
 7996 0180 4FEA4805 		lsl	r5, r8, #1
 7997              	.LVL1174:
 7998 0184 802D     		cmp	r5, #128
 7999 0186 B3D9     		bls	.L721
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8000              		.loc 1 5610 0 is_stmt 1
ARM GAS  /tmp/ccJz23SP.s 			page 266


 8001 0188 0E20     		movs	r0, #14
 8002 018a 26E2     		b	.L713
 8003              	.LVL1175:
 8004              	.L765:
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 8005              		.loc 1 5365 0
 8006 018c 4FF03F09 		mov	r9, #63
 8007 0190 8DE7     		b	.L718
 8008              	.LVL1176:
 8009              	.L769:
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8010              		.loc 1 5381 0
 8011 0192 4FF0030B 		mov	fp, #3
 8012 0196 0194     		str	r4, [sp, #4]
 8013 0198 CDF808A0 		str	r10, [sp, #8]
 8014 019c 0396     		str	r6, [sp, #12]
 8015 019e A7E7     		b	.L721
 8016              	.L770:
 8017 01a0 4FF0030B 		mov	fp, #3
 8018 01a4 0194     		str	r4, [sp, #4]
 8019 01a6 CDF808A0 		str	r10, [sp, #8]
 8020 01aa 0396     		str	r6, [sp, #12]
 8021 01ac A0E7     		b	.L721
 8022              	.LVL1177:
 8023              	.L777:
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8024              		.loc 1 5604 0
 8025 01ae 1546     		mov	r5, r2
 8026              	.LVL1178:
 8027 01b0 9EE7     		b	.L721
 8028              	.LVL1179:
 8029              	.L778:
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8030              		.loc 1 5607 0
 8031 01b2 4FF0030B 		mov	fp, #3
 8032              	.LVL1180:
 8033              	.L739:
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 8034              		.loc 1 5556 0
 8035 01b6 9DB1     		cbz	r5, .L799
 8036 01b8 A846     		mov	r8, r5
 8037              	.L723:
 8038              	.LVL1181:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 8039              		.loc 1 5560 0
 8040 01ba B3FBF8F1 		udiv	r1, r3, r8
 8041              	.LVL1182:
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 8042              		.loc 1 5561 0
 8043 01be 8A1C     		adds	r2, r1, #2
 8044 01c0 9200     		lsls	r2, r2, #2
 8045 01c2 02F2FF12 		addw	r2, r2, #511
 8046 01c6 520A     		lsrs	r2, r2, #9
 8047              	.LVL1183:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 8048              		.loc 1 5564 0
 8049 01c8 A1F57F41 		sub	r1, r1, #65280
ARM GAS  /tmp/ccJz23SP.s 			page 267


 8050              	.LVL1184:
 8051 01cc F639     		subs	r1, r1, #246
 8052              	.LVL1185:
 8053 01ce 294C     		ldr	r4, .L805+4
 8054 01d0 A142     		cmp	r1, r4
 8055 01d2 00F21782 		bhi	.L773
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 8056              		.loc 1 5563 0
 8057 01d6 4FF0000E 		mov	lr, #0
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
 8058              		.loc 1 5562 0
 8059 01da 4FF0200C 		mov	ip, #32
 8060 01de 9EE7     		b	.L726
 8061              	.LVL1186:
 8062              	.L799:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8063              		.loc 1 5557 0
 8064 01e0 5C0C     		lsrs	r4, r3, #17
 8065              	.LVL1187:
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8066              		.loc 1 5558 0
 8067 01e2 0021     		movs	r1, #0
 8068 01e4 4FF00108 		mov	r8, #1
 8069 01e8 02E0     		b	.L724
 8070              	.LVL1188:
 8071              	.L725:
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8072              		.loc 1 5558 0 is_stmt 0 discriminator 4
 8073 01ea 0131     		adds	r1, r1, #1
 8074              	.LVL1189:
 8075 01ec 4FEA4808 		lsl	r8, r8, #1
 8076              	.LVL1190:
 8077              	.L724:
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8078              		.loc 1 5558 0 discriminator 1
 8079 01f0 214A     		ldr	r2, .L805+8
 8080 01f2 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 8081 01f6 002A     		cmp	r2, #0
 8082 01f8 DFD0     		beq	.L723
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8083              		.loc 1 5558 0 discriminator 3
 8084 01fa A242     		cmp	r2, r4
 8085 01fc F5D9     		bls	.L725
 8086 01fe DCE7     		b	.L723
 8087              	.LVL1191:
 8088              	.L796:
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8089              		.loc 1 5567 0 is_stmt 1
 8090 0200 1C0B     		lsrs	r4, r3, #12
 8091              	.LVL1192:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8092              		.loc 1 5568 0
 8093 0202 0021     		movs	r1, #0
 8094 0204 4FF00108 		mov	r8, #1
 8095 0208 02E0     		b	.L728
 8096              	.LVL1193:
 8097              	.L729:
ARM GAS  /tmp/ccJz23SP.s 			page 268


5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8098              		.loc 1 5568 0 is_stmt 0 discriminator 4
 8099 020a 0131     		adds	r1, r1, #1
 8100              	.LVL1194:
 8101 020c 4FEA4808 		lsl	r8, r8, #1
 8102              	.LVL1195:
 8103              	.L728:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8104              		.loc 1 5568 0 discriminator 1
 8105 0210 1A4A     		ldr	r2, .L805+12
 8106 0212 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 8107 0216 002A     		cmp	r2, #0
 8108 0218 3FF471AF 		beq	.L727
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8109              		.loc 1 5568 0 discriminator 3
 8110 021c A242     		cmp	r2, r4
 8111 021e F4D9     		bls	.L729
 8112 0220 6DE7     		b	.L727
 8113              	.LVL1196:
 8114              	.L730:
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8115              		.loc 1 5575 0 is_stmt 1
 8116 0222 02EB4202 		add	r2, r2, r2, lsl #1
 8117              	.LVL1197:
 8118 0226 0132     		adds	r2, r2, #1
 8119 0228 5208     		lsrs	r2, r2, #1
 8120 022a 0332     		adds	r2, r2, #3
 8121              	.LVL1198:
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 8122              		.loc 1 5574 0
 8123 022c 4FF0010B 		mov	fp, #1
 8124 0230 6EE7     		b	.L731
 8125              	.LVL1199:
 8126              	.L797:
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
 8127              		.loc 1 5587 0
 8128 0232 A444     		add	ip, ip, r4
 8129              	.LVL1200:
 8130 0234 A244     		add	r10, r10, r4
 8131              	.LVL1201:
 8132 0236 81E7     		b	.L733
 8133              	.LVL1202:
 8134              	.L798:
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 8135              		.loc 1 5596 0
 8136 0238 4FF6F574 		movw	r4, #65525
 8137              	.LVL1203:
 8138 023c A142     		cmp	r1, r4
 8139 023e 8ED8     		bhi	.L734
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8140              		.loc 1 5597 0
 8141 0240 002D     		cmp	r5, #0
 8142 0242 40F0E381 		bne	.L776
 8143              	.LVL1204:
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8144              		.loc 1 5597 0 is_stmt 0 discriminator 1
 8145 0246 5FEA5805 		lsrs	r5, r8, #1
ARM GAS  /tmp/ccJz23SP.s 			page 269


 8146              	.LVL1205:
 8147 024a 7FF451AF 		bne	.L721
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8148              		.loc 1 5598 0 is_stmt 1
 8149 024e 0E20     		movs	r0, #14
 8150 0250 C3E1     		b	.L713
 8151              	.L737:
5612:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 8152              		.loc 1 5612 0
 8153 0252 40F6F574 		movw	r4, #4085
 8154 0256 A142     		cmp	r1, r4
 8155 0258 12D8     		bhi	.L736
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8156              		.loc 1 5613 0
 8157 025a 002D     		cmp	r5, #0
 8158 025c 40F0DA81 		bne	.L780
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8159              		.loc 1 5613 0 is_stmt 0 discriminator 1
 8160 0260 4FEA4805 		lsl	r5, r8, #1
 8161              	.LVL1206:
 8162 0264 802D     		cmp	r5, #128
 8163 0266 7FF643AF 		bls	.L721
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8164              		.loc 1 5614 0 is_stmt 1
 8165 026a 0E20     		movs	r0, #14
 8166 026c B5E1     		b	.L713
 8167              	.L806:
 8168 026e 00BF     		.align	2
 8169              	.L805:
 8170 0270 00000000 		.word	.LANCHOR2
 8171 0274 FFFFFE0F 		.word	268369919
 8172 0278 00000000 		.word	.LANCHOR4
 8173 027c 00000000 		.word	.LANCHOR5
 8174              	.L736:
 8175 0280 CDF818E0 		str	lr, [sp, #24]
 8176 0284 6546     		mov	r5, ip
 8177              	.LVL1207:
 8178 0286 0592     		str	r2, [sp, #20]
 8179 0288 CDF810A0 		str	r10, [sp, #16]
 8180 028c 019C     		ldr	r4, [sp, #4]
 8181 028e DDF808A0 		ldr	r10, [sp, #8]
 8182              	.LVL1208:
 8183 0292 039E     		ldr	r6, [sp, #12]
 8184 0294 0291     		str	r1, [sp, #8]
 8185              	.LVL1209:
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8186              		.loc 1 5617 0
 8187 0296 BBF1010F 		cmp	fp, #1
 8188 029a 04D1     		bne	.L740
 8189              	.LVL1210:
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8190              		.loc 1 5617 0 is_stmt 0 discriminator 1
 8191 029c 40F6F573 		movw	r3, #4085
 8192 02a0 9942     		cmp	r1, r3
 8193 02a2 00F2B981 		bhi	.L781
 8194              	.L740:
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
ARM GAS  /tmp/ccJz23SP.s 			page 270


 8195              		.loc 1 5628 0 is_stmt 1
 8196 02a6 4FF40072 		mov	r2, #512
 8197              	.LVL1211:
 8198 02aa 0021     		movs	r1, #0
 8199              	.LVL1212:
 8200 02ac 3846     		mov	r0, r7
 8201 02ae FFF7FEFF 		bl	mem_set
 8202              	.LVL1213:
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
 8203              		.loc 1 5629 0
 8204 02b2 0B22     		movs	r2, #11
 8205 02b4 DA49     		ldr	r1, .L807
 8206 02b6 3846     		mov	r0, r7
 8207 02b8 FFF7FEFF 		bl	mem_cpy
 8208              	.LVL1214:
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
 8209              		.loc 1 5630 0
 8210 02bc 4FF40071 		mov	r1, #512
 8211 02c0 07F10B00 		add	r0, r7, #11
 8212 02c4 FFF7FEFF 		bl	st_word
 8213              	.LVL1215:
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 8214              		.loc 1 5631 0
 8215 02c8 87F80D80 		strb	r8, [r7, #13]
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 8216              		.loc 1 5632 0
 8217 02cc A9B2     		uxth	r1, r5
 8218 02ce 07F10E00 		add	r0, r7, #14
 8219 02d2 FFF7FEFF 		bl	st_word
 8220              	.LVL1216:
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 8221              		.loc 1 5633 0
 8222 02d6 0123     		movs	r3, #1
 8223 02d8 3B74     		strb	r3, [r7, #16]
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8224              		.loc 1 5634 0
 8225 02da 07F11100 		add	r0, r7, #17
 8226 02de BBF1030F 		cmp	fp, #3
 8227 02e2 00F0CA80 		beq	.L782
 8228 02e6 4FF40071 		mov	r1, #512
 8229              	.L741:
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8230              		.loc 1 5634 0 is_stmt 0 discriminator 4
 8231 02ea FFF7FEFF 		bl	st_word
 8232              	.LVL1217:
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 8233              		.loc 1 5635 0 is_stmt 1 discriminator 4
 8234 02ee 0899     		ldr	r1, [sp, #32]
 8235 02f0 B1F5803F 		cmp	r1, #65536
 8236 02f4 80F0C380 		bcs	.L742
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8237              		.loc 1 5636 0
 8238 02f8 89B2     		uxth	r1, r1
 8239 02fa 07F11300 		add	r0, r7, #19
 8240 02fe FFF7FEFF 		bl	st_word
 8241              	.LVL1218:
 8242              	.L743:
ARM GAS  /tmp/ccJz23SP.s 			page 271


5640:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 8243              		.loc 1 5640 0
 8244 0302 F823     		movs	r3, #248
 8245 0304 7B75     		strb	r3, [r7, #21]
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
 8246              		.loc 1 5641 0
 8247 0306 3F21     		movs	r1, #63
 8248 0308 07F11800 		add	r0, r7, #24
 8249 030c FFF7FEFF 		bl	st_word
 8250              	.LVL1219:
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
 8251              		.loc 1 5642 0
 8252 0310 FF21     		movs	r1, #255
 8253 0312 07F11A00 		add	r0, r7, #26
 8254 0316 FFF7FEFF 		bl	st_word
 8255              	.LVL1220:
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 8256              		.loc 1 5643 0
 8257 031a 4946     		mov	r1, r9
 8258 031c 07F11C00 		add	r0, r7, #28
 8259 0320 FFF7FEFF 		bl	st_dword
 8260              	.LVL1221:
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 8261              		.loc 1 5644 0
 8262 0324 BBF1030F 		cmp	fp, #3
 8263 0328 00F0AE80 		beq	.L800
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
 8264              		.loc 1 5654 0
 8265 032c FFF7FEFF 		bl	get_fattime
 8266              	.LVL1222:
 8267 0330 0146     		mov	r1, r0
 8268 0332 07F12700 		add	r0, r7, #39
 8269 0336 FFF7FEFF 		bl	st_dword
 8270              	.LVL1223:
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 8271              		.loc 1 5655 0
 8272 033a BDF81410 		ldrh	r1, [sp, #20]
 8273 033e 07F11600 		add	r0, r7, #22
 8274 0342 FFF7FEFF 		bl	st_word
 8275              	.LVL1224:
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 8276              		.loc 1 5656 0
 8277 0346 8023     		movs	r3, #128
 8278 0348 87F82430 		strb	r3, [r7, #36]
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 8279              		.loc 1 5657 0
 8280 034c 2923     		movs	r3, #41
 8281 034e 87F82630 		strb	r3, [r7, #38]
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8282              		.loc 1 5658 0
 8283 0352 1322     		movs	r2, #19
 8284 0354 B349     		ldr	r1, .L807+4
 8285 0356 07F12B00 		add	r0, r7, #43
 8286 035a FFF7FEFF 		bl	mem_cpy
 8287              	.LVL1225:
 8288              	.L745:
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
ARM GAS  /tmp/ccJz23SP.s 			page 272


 8289              		.loc 1 5660 0
 8290 035e 07F5FF73 		add	r3, r7, #510
 8291 0362 0193     		str	r3, [sp, #4]
 8292              	.LVL1226:
 8293 0364 4AF65521 		movw	r1, #43605
 8294 0368 1846     		mov	r0, r3
 8295 036a FFF7FEFF 		bl	st_word
 8296              	.LVL1227:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8297              		.loc 1 5661 0
 8298 036e 0123     		movs	r3, #1
 8299 0370 4A46     		mov	r2, r9
 8300 0372 3946     		mov	r1, r7
 8301 0374 2046     		mov	r0, r4
 8302 0376 FFF7FEFF 		bl	disk_write
 8303              	.LVL1228:
 8304 037a 0028     		cmp	r0, #0
 8305 037c 40F04E81 		bne	.L783
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 8306              		.loc 1 5664 0
 8307 0380 BBF1030F 		cmp	fp, #3
 8308 0384 00F0A880 		beq	.L801
 8309              	.L746:
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
 8310              		.loc 1 5677 0
 8311 0388 3246     		mov	r2, r6
 8312 038a 0021     		movs	r1, #0
 8313 038c 3846     		mov	r0, r7
 8314 038e FFF7FEFF 		bl	mem_set
 8315              	.LVL1229:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8316              		.loc 1 5679 0
 8317 0392 0025     		movs	r5, #0
 8318              	.LVL1230:
 8319 0394 CDF80880 		str	r8, [sp, #8]
 8320              	.LVL1231:
 8321              	.L747:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8322              		.loc 1 5679 0 is_stmt 0 discriminator 1
 8323 0398 002D     		cmp	r5, #0
 8324 039a 00F0D280 		beq	.L752
 8325 039e DDF80880 		ldr	r8, [sp, #8]
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 8326              		.loc 1 5697 0 is_stmt 1
 8327 03a2 BBF1030F 		cmp	fp, #3
 8328 03a6 00F00681 		beq	.L802
 8329 03aa 069E     		ldr	r6, [sp, #24]
 8330 03ac DDF81080 		ldr	r8, [sp, #16]
 8331              	.LVL1232:
 8332              	.L754:
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8333              		.loc 1 5699 0
 8334 03b0 3546     		mov	r5, r6
 8335 03b2 5645     		cmp	r6, r10
 8336 03b4 28BF     		it	cs
 8337 03b6 5546     		movcs	r5, r10
 8338              	.LVL1233:
ARM GAS  /tmp/ccJz23SP.s 			page 273


5700:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 8339              		.loc 1 5700 0
 8340 03b8 2B46     		mov	r3, r5
 8341 03ba 4246     		mov	r2, r8
 8342 03bc 3946     		mov	r1, r7
 8343 03be 2046     		mov	r0, r4
 8344 03c0 FFF7FEFF 		bl	disk_write
 8345              	.LVL1234:
 8346 03c4 0028     		cmp	r0, #0
 8347 03c6 40F03981 		bne	.L786
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
 8348              		.loc 1 5701 0
 8349 03ca A844     		add	r8, r8, r5
 8350              	.LVL1235:
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8351              		.loc 1 5702 0
 8352 03cc 761B     		subs	r6, r6, r5
 8353              	.LVL1236:
 8354 03ce EFD1     		bne	.L754
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 8355              		.loc 1 5709 0
 8356 03d0 BBF1030F 		cmp	fp, #3
 8357 03d4 00F0F380 		beq	.L787
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 8358              		.loc 1 5712 0
 8359 03d8 089B     		ldr	r3, [sp, #32]
 8360 03da B3F5803F 		cmp	r3, #65536
 8361 03de 80F0F180 		bcs	.L788
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8362              		.loc 1 5715 0
 8363 03e2 BBF1020F 		cmp	fp, #2
 8364 03e6 40F0F080 		bne	.L789
 8365 03ea 4FF00408 		mov	r8, #4
 8366              	.LVL1237:
 8367              	.L755:
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8368              		.loc 1 5727 0
 8369 03ee 009B     		ldr	r3, [sp]
 8370 03f0 CBBB     		cbnz	r3, .L756
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
 8371              		.loc 1 5728 0
 8372 03f2 4FF40072 		mov	r2, #512
 8373 03f6 0021     		movs	r1, #0
 8374 03f8 3846     		mov	r0, r7
 8375 03fa FFF7FEFF 		bl	mem_set
 8376              	.LVL1238:
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
 8377              		.loc 1 5729 0
 8378 03fe 4AF65521 		movw	r1, #43605
 8379 0402 0198     		ldr	r0, [sp, #4]
 8380 0404 FFF7FEFF 		bl	st_word
 8381              	.LVL1239:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 8382              		.loc 1 5731 0
 8383 0408 0025     		movs	r5, #0
 8384              	.LVL1240:
 8385 040a 87F8BE51 		strb	r5, [r7, #446]
ARM GAS  /tmp/ccJz23SP.s 			page 274


5732:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 8386              		.loc 1 5732 0
 8387 040e 0126     		movs	r6, #1
 8388              	.LVL1241:
 8389 0410 87F8BF61 		strb	r6, [r7, #447]
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 8390              		.loc 1 5733 0
 8391 0414 87F8C061 		strb	r6, [r7, #448]
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 8392              		.loc 1 5734 0
 8393 0418 87F8C151 		strb	r5, [r7, #449]
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
 8394              		.loc 1 5735 0
 8395 041c 87F8C281 		strb	r8, [r7, #450]
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 8396              		.loc 1 5736 0
 8397 0420 089B     		ldr	r3, [sp, #32]
 8398 0422 4B44     		add	r3, r3, r9
 8399 0424 43F6C162 		movw	r2, #16065
 8400 0428 B3FBF2F3 		udiv	r3, r3, r2
 8401              	.LVL1242:
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 8402              		.loc 1 5737 0
 8403 042c FE22     		movs	r2, #254
 8404 042e 87F8C321 		strb	r2, [r7, #451]
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 8405              		.loc 1 5738 0
 8406 0432 9A08     		lsrs	r2, r3, #2
 8407 0434 42F03F02 		orr	r2, r2, #63
 8408 0438 87F8C421 		strb	r2, [r7, #452]
5739:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
 8409              		.loc 1 5739 0
 8410 043c 87F8C531 		strb	r3, [r7, #453]
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
 8411              		.loc 1 5740 0
 8412 0440 4946     		mov	r1, r9
 8413 0442 07F5E370 		add	r0, r7, #454
 8414 0446 FFF7FEFF 		bl	st_dword
 8415              	.LVL1243:
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 8416              		.loc 1 5741 0
 8417 044a 0899     		ldr	r1, [sp, #32]
 8418 044c 07F5E570 		add	r0, r7, #458
 8419 0450 FFF7FEFF 		bl	st_dword
 8420              	.LVL1244:
5742:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8421              		.loc 1 5742 0
 8422 0454 3346     		mov	r3, r6
 8423 0456 2A46     		mov	r2, r5
 8424 0458 3946     		mov	r1, r7
 8425 045a 2046     		mov	r0, r4
 8426 045c FFF7FEFF 		bl	disk_write
 8427              	.LVL1245:
 8428 0460 0028     		cmp	r0, #0
 8429 0462 40F0ED80 		bne	.L790
 8430              	.LVL1246:
 8431              	.L756:
ARM GAS  /tmp/ccJz23SP.s 			page 275


5746:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8432              		.loc 1 5746 0
 8433 0466 0022     		movs	r2, #0
 8434 0468 1146     		mov	r1, r2
 8435 046a 2046     		mov	r0, r4
 8436 046c FFF7FEFF 		bl	disk_ioctl
 8437              	.LVL1247:
 8438 0470 0028     		cmp	r0, #0
 8439 0472 00F0E780 		beq	.L791
 8440 0476 0120     		movs	r0, #1
 8441 0478 AFE0     		b	.L713
 8442              	.LVL1248:
 8443              	.L782:
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8444              		.loc 1 5634 0
 8445 047a 0021     		movs	r1, #0
 8446 047c 35E7     		b	.L741
 8447              	.L742:
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8448              		.loc 1 5638 0
 8449 047e 07F12000 		add	r0, r7, #32
 8450 0482 FFF7FEFF 		bl	st_dword
 8451              	.LVL1249:
 8452 0486 3CE7     		b	.L743
 8453              	.L800:
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
 8454              		.loc 1 5645 0
 8455 0488 FFF7FEFF 		bl	get_fattime
 8456              	.LVL1250:
 8457 048c 0146     		mov	r1, r0
 8458 048e 07F14300 		add	r0, r7, #67
 8459 0492 FFF7FEFF 		bl	st_dword
 8460              	.LVL1251:
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
 8461              		.loc 1 5646 0
 8462 0496 0599     		ldr	r1, [sp, #20]
 8463 0498 07F12400 		add	r0, r7, #36
 8464 049c FFF7FEFF 		bl	st_dword
 8465              	.LVL1252:
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
 8466              		.loc 1 5647 0
 8467 04a0 0221     		movs	r1, #2
 8468 04a2 07F12C00 		add	r0, r7, #44
 8469 04a6 FFF7FEFF 		bl	st_dword
 8470              	.LVL1253:
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
 8471              		.loc 1 5648 0
 8472 04aa 0121     		movs	r1, #1
 8473 04ac 07F13000 		add	r0, r7, #48
 8474 04b0 FFF7FEFF 		bl	st_word
 8475              	.LVL1254:
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 8476              		.loc 1 5649 0
 8477 04b4 0621     		movs	r1, #6
 8478 04b6 07F13200 		add	r0, r7, #50
 8479 04ba FFF7FEFF 		bl	st_word
 8480              	.LVL1255:
ARM GAS  /tmp/ccJz23SP.s 			page 276


5650:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 8481              		.loc 1 5650 0
 8482 04be 8023     		movs	r3, #128
 8483 04c0 87F84030 		strb	r3, [r7, #64]
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 8484              		.loc 1 5651 0
 8485 04c4 2923     		movs	r3, #41
 8486 04c6 87F84230 		strb	r3, [r7, #66]
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8487              		.loc 1 5652 0
 8488 04ca 1322     		movs	r2, #19
 8489 04cc 5649     		ldr	r1, .L807+8
 8490 04ce 07F14700 		add	r0, r7, #71
 8491 04d2 FFF7FEFF 		bl	mem_cpy
 8492              	.LVL1256:
 8493 04d6 42E7     		b	.L745
 8494              	.LVL1257:
 8495              	.L801:
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8496              		.loc 1 5665 0
 8497 04d8 0123     		movs	r3, #1
 8498 04da 09F10602 		add	r2, r9, #6
 8499 04de 3946     		mov	r1, r7
 8500 04e0 2046     		mov	r0, r4
 8501 04e2 FFF7FEFF 		bl	disk_write
 8502              	.LVL1258:
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
 8503              		.loc 1 5666 0
 8504 04e6 4FF40072 		mov	r2, #512
 8505 04ea 0021     		movs	r1, #0
 8506 04ec 3846     		mov	r0, r7
 8507 04ee FFF7FEFF 		bl	mem_set
 8508              	.LVL1259:
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
 8509              		.loc 1 5667 0
 8510 04f2 4E49     		ldr	r1, .L807+12
 8511 04f4 3846     		mov	r0, r7
 8512 04f6 FFF7FEFF 		bl	st_dword
 8513              	.LVL1260:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 8514              		.loc 1 5668 0
 8515 04fa 4D49     		ldr	r1, .L807+16
 8516 04fc 07F5F270 		add	r0, r7, #484
 8517 0500 FFF7FEFF 		bl	st_dword
 8518              	.LVL1261:
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 8519              		.loc 1 5669 0
 8520 0504 029B     		ldr	r3, [sp, #8]
 8521 0506 591E     		subs	r1, r3, #1
 8522 0508 07F5F470 		add	r0, r7, #488
 8523 050c FFF7FEFF 		bl	st_dword
 8524              	.LVL1262:
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
 8525              		.loc 1 5670 0
 8526 0510 0221     		movs	r1, #2
 8527 0512 07F5F670 		add	r0, r7, #492
 8528 0516 FFF7FEFF 		bl	st_dword
ARM GAS  /tmp/ccJz23SP.s 			page 277


 8529              	.LVL1263:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 8530              		.loc 1 5671 0
 8531 051a 4AF65521 		movw	r1, #43605
 8532 051e 0198     		ldr	r0, [sp, #4]
 8533 0520 FFF7FEFF 		bl	st_word
 8534              	.LVL1264:
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 8535              		.loc 1 5672 0
 8536 0524 0123     		movs	r3, #1
 8537 0526 09F10702 		add	r2, r9, #7
 8538 052a 3946     		mov	r1, r7
 8539 052c 2046     		mov	r0, r4
 8540 052e FFF7FEFF 		bl	disk_write
 8541              	.LVL1265:
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8542              		.loc 1 5673 0
 8543 0532 0123     		movs	r3, #1
 8544 0534 09EB0302 		add	r2, r9, r3
 8545 0538 3946     		mov	r1, r7
 8546 053a 2046     		mov	r0, r4
 8547 053c FFF7FEFF 		bl	disk_write
 8548              	.LVL1266:
 8549 0540 22E7     		b	.L746
 8550              	.LVL1267:
 8551              	.L752:
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 8552              		.loc 1 5680 0
 8553 0542 BBF1030F 		cmp	fp, #3
 8554 0546 23D0     		beq	.L803
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8555              		.loc 1 5685 0
 8556 0548 BBF1010F 		cmp	fp, #1
 8557 054c 31D0     		beq	.L804
 8558 054e 6FF00701 		mvn	r1, #7
 8559              	.L750:
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8560              		.loc 1 5685 0 is_stmt 0 discriminator 4
 8561 0552 3846     		mov	r0, r7
 8562 0554 FFF7FEFF 		bl	st_dword
 8563              	.LVL1268:
 8564              	.L749:
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8565              		.loc 1 5685 0
 8566 0558 DDF81480 		ldr	r8, [sp, #20]
 8567              	.L751:
 8568              	.LVL1269:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8569              		.loc 1 5689 0 is_stmt 1
 8570 055c 4646     		mov	r6, r8
 8571 055e D045     		cmp	r8, r10
 8572 0560 28BF     		it	cs
 8573 0562 5646     		movcs	r6, r10
 8574              	.LVL1270:
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 8575              		.loc 1 5690 0
 8576 0564 3346     		mov	r3, r6
ARM GAS  /tmp/ccJz23SP.s 			page 278


 8577 0566 049A     		ldr	r2, [sp, #16]
 8578 0568 3946     		mov	r1, r7
 8579 056a 2046     		mov	r0, r4
 8580 056c FFF7FEFF 		bl	disk_write
 8581              	.LVL1271:
 8582 0570 0028     		cmp	r0, #0
 8583 0572 61D1     		bne	.L785
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
 8584              		.loc 1 5691 0
 8585 0574 4FF40072 		mov	r2, #512
 8586 0578 0021     		movs	r1, #0
 8587 057a 3846     		mov	r0, r7
 8588 057c FFF7FEFF 		bl	mem_set
 8589              	.LVL1272:
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
 8590              		.loc 1 5692 0
 8591 0580 049B     		ldr	r3, [sp, #16]
 8592 0582 3344     		add	r3, r3, r6
 8593 0584 0493     		str	r3, [sp, #16]
 8594              	.LVL1273:
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8595              		.loc 1 5693 0
 8596 0586 B8EB0608 		subs	r8, r8, r6
 8597              	.LVL1274:
 8598 058a E7D1     		bne	.L751
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8599              		.loc 1 5679 0 discriminator 2
 8600 058c 0135     		adds	r5, r5, #1
 8601              	.LVL1275:
 8602 058e 03E7     		b	.L747
 8603              	.LVL1276:
 8604              	.L803:
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
 8605              		.loc 1 5681 0
 8606 0590 6FF00701 		mvn	r1, #7
 8607 0594 3846     		mov	r0, r7
 8608 0596 FFF7FEFF 		bl	st_dword
 8609              	.LVL1277:
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
 8610              		.loc 1 5682 0
 8611 059a 4FF0FF31 		mov	r1, #-1
 8612 059e 381D     		adds	r0, r7, #4
 8613 05a0 FFF7FEFF 		bl	st_dword
 8614              	.LVL1278:
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8615              		.loc 1 5683 0
 8616 05a4 6FF07041 		mvn	r1, #-268435456
 8617 05a8 07F10800 		add	r0, r7, #8
 8618 05ac FFF7FEFF 		bl	st_dword
 8619              	.LVL1279:
 8620 05b0 D2E7     		b	.L749
 8621              	.L804:
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8622              		.loc 1 5685 0
 8623 05b2 2049     		ldr	r1, .L807+20
 8624 05b4 CDE7     		b	.L750
 8625              	.L802:
ARM GAS  /tmp/ccJz23SP.s 			page 279


5697:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 8626              		.loc 1 5697 0
 8627 05b6 4646     		mov	r6, r8
 8628 05b8 DDF81080 		ldr	r8, [sp, #16]
 8629 05bc F8E6     		b	.L754
 8630              	.LVL1280:
 8631              	.L787:
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8632              		.loc 1 5710 0
 8633 05be 4FF00C08 		mov	r8, #12
 8634              	.LVL1281:
 8635 05c2 14E7     		b	.L755
 8636              	.LVL1282:
 8637              	.L788:
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8638              		.loc 1 5713 0
 8639 05c4 4FF00608 		mov	r8, #6
 8640              	.LVL1283:
 8641 05c8 11E7     		b	.L755
 8642              	.LVL1284:
 8643              	.L789:
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8644              		.loc 1 5715 0
 8645 05ca 4FF00108 		mov	r8, #1
 8646              	.LVL1285:
 8647 05ce 0EE7     		b	.L755
 8648              	.LVL1286:
 8649              	.L757:
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 8650              		.loc 1 5328 0
 8651 05d0 0B20     		movs	r0, #11
 8652              	.LVL1287:
 8653 05d2 02E0     		b	.L713
 8654              	.LVL1288:
 8655              	.L758:
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 8656              		.loc 1 5335 0
 8657 05d4 0320     		movs	r0, #3
 8658              	.LVL1289:
 8659 05d6 00E0     		b	.L713
 8660              	.LVL1290:
 8661              	.L759:
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 8662              		.loc 1 5336 0
 8663 05d8 0A20     		movs	r0, #10
 8664              	.LVL1291:
 8665              	.L713:
5749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8666              		.loc 1 5749 0
 8667 05da 0BB0     		add	sp, sp, #44
 8668              	.LCFI118:
 8669              		.cfi_remember_state
 8670              		.cfi_def_cfa_offset 36
 8671              		@ sp needed
 8672 05dc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8673              	.LVL1292:
 8674              	.L760:
ARM GAS  /tmp/ccJz23SP.s 			page 280


 8675              	.LCFI119:
 8676              		.cfi_restore_state
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8677              		.loc 1 5344 0
 8678 05e0 1320     		movs	r0, #19
 8679 05e2 FAE7     		b	.L713
 8680              	.L761:
 8681 05e4 1320     		movs	r0, #19
 8682 05e6 F8E7     		b	.L713
 8683              	.L762:
 8684 05e8 1320     		movs	r0, #19
 8685 05ea F6E7     		b	.L713
 8686              	.LVL1293:
 8687              	.L763:
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8688              		.loc 1 5351 0
 8689 05ec 0E20     		movs	r0, #14
 8690 05ee F4E7     		b	.L713
 8691              	.L764:
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 8692              		.loc 1 5364 0
 8693 05f0 0120     		movs	r0, #1
 8694 05f2 F2E7     		b	.L713
 8695              	.LVL1294:
 8696              	.L766:
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 8697              		.loc 1 5366 0
 8698 05f4 0E20     		movs	r0, #14
 8699 05f6 F0E7     		b	.L713
 8700              	.L767:
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8701              		.loc 1 5369 0
 8702 05f8 0E20     		movs	r0, #14
 8703 05fa EEE7     		b	.L713
 8704              	.L768:
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 8705              		.loc 1 5378 0
 8706 05fc 1320     		movs	r0, #19
 8707 05fe ECE7     		b	.L713
 8708              	.L771:
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 8709              		.loc 1 5384 0
 8710 0600 1320     		movs	r0, #19
 8711 0602 EAE7     		b	.L713
 8712              	.LVL1295:
 8713              	.L773:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 8714              		.loc 1 5564 0
 8715 0604 0E20     		movs	r0, #14
 8716 0606 E8E7     		b	.L713
 8717              	.LVL1296:
 8718              	.L775:
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 8719              		.loc 1 5593 0
 8720 0608 0E20     		movs	r0, #14
 8721 060a E6E7     		b	.L713
 8722              	.LVL1297:
ARM GAS  /tmp/ccJz23SP.s 			page 281


 8723              	.L776:
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8724              		.loc 1 5598 0
 8725 060c 0E20     		movs	r0, #14
 8726 060e E4E7     		b	.L713
 8727              	.LVL1298:
 8728              	.L779:
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8729              		.loc 1 5610 0
 8730 0610 0E20     		movs	r0, #14
 8731 0612 E2E7     		b	.L713
 8732              	.LVL1299:
 8733              	.L780:
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8734              		.loc 1 5614 0
 8735 0614 0E20     		movs	r0, #14
 8736 0616 E0E7     		b	.L713
 8737              	.LVL1300:
 8738              	.L781:
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8739              		.loc 1 5617 0
 8740 0618 0E20     		movs	r0, #14
 8741 061a DEE7     		b	.L713
 8742              	.LVL1301:
 8743              	.L783:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8744              		.loc 1 5661 0
 8745 061c 0120     		movs	r0, #1
 8746 061e DCE7     		b	.L713
 8747              	.L808:
 8748              		.align	2
 8749              	.L807:
 8750 0620 00000000 		.word	.LC1
 8751 0624 20000000 		.word	.LC3
 8752 0628 0C000000 		.word	.LC2
 8753 062c 52526141 		.word	1096897106
 8754 0630 72724161 		.word	1631679090
 8755 0634 F8FFFF00 		.word	16777208
 8756              	.LVL1302:
 8757              	.L785:
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 8758              		.loc 1 5690 0
 8759 0638 0120     		movs	r0, #1
 8760 063a CEE7     		b	.L713
 8761              	.LVL1303:
 8762              	.L786:
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 8763              		.loc 1 5700 0
 8764 063c 0120     		movs	r0, #1
 8765 063e CCE7     		b	.L713
 8766              	.LVL1304:
 8767              	.L790:
5742:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8768              		.loc 1 5742 0
 8769 0640 0120     		movs	r0, #1
 8770 0642 CAE7     		b	.L713
 8771              	.LVL1305:
ARM GAS  /tmp/ccJz23SP.s 			page 282


 8772              	.L791:
5748:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8773              		.loc 1 5748 0
 8774 0644 0020     		movs	r0, #0
 8775 0646 C8E7     		b	.L713
 8776              		.cfi_endproc
 8777              	.LFE383:
 8779              		.section	.text.f_gets,"ax",%progbits
 8780              		.align	1
 8781              		.global	f_gets
 8782              		.syntax unified
 8783              		.thumb
 8784              		.thumb_func
 8785              		.fpu fpv4-sp-d16
 8787              	f_gets:
 8788              	.LFB384:
5835:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 8789              		.loc 1 5835 0
 8790              		.cfi_startproc
 8791              		@ args = 0, pretend = 0, frame = 8
 8792              		@ frame_needed = 0, uses_anonymous_args = 0
 8793              	.LVL1306:
 8794 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8795              	.LCFI120:
 8796              		.cfi_def_cfa_offset 24
 8797              		.cfi_offset 4, -24
 8798              		.cfi_offset 5, -20
 8799              		.cfi_offset 6, -16
 8800              		.cfi_offset 7, -12
 8801              		.cfi_offset 8, -8
 8802              		.cfi_offset 14, -4
 8803 0004 82B0     		sub	sp, sp, #8
 8804              	.LCFI121:
 8805              		.cfi_def_cfa_offset 32
 8806 0006 8046     		mov	r8, r0
 8807 0008 0E46     		mov	r6, r1
 8808 000a 1746     		mov	r7, r2
 8809              	.LVL1307:
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 8810              		.loc 1 5837 0
 8811 000c 0446     		mov	r4, r0
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 8812              		.loc 1 5836 0
 8813 000e 0025     		movs	r5, #0
5842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 8814              		.loc 1 5842 0
 8815 0010 01E0     		b	.L810
 8816              	.LVL1308:
 8817              	.L815:
 8818 0012 2246     		mov	r2, r4
 8819              	.LVL1309:
 8820              	.L812:
 8821 0014 1446     		mov	r4, r2
 8822              	.LVL1310:
 8823              	.L810:
 8824 0016 731E     		subs	r3, r6, #1
 8825 0018 AB42     		cmp	r3, r5
ARM GAS  /tmp/ccJz23SP.s 			page 283


 8826 001a 12DD     		ble	.L811
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 8827              		.loc 1 5887 0
 8828 001c 6B46     		mov	r3, sp
 8829 001e 0122     		movs	r2, #1
 8830 0020 01A9     		add	r1, sp, #4
 8831 0022 3846     		mov	r0, r7
 8832 0024 FFF7FEFF 		bl	f_read
 8833              	.LVL1311:
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 8834              		.loc 1 5888 0
 8835 0028 009B     		ldr	r3, [sp]
 8836 002a 012B     		cmp	r3, #1
 8837 002c 09D1     		bne	.L811
5889:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8838              		.loc 1 5889 0
 8839 002e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 8840              	.LVL1312:
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 8841              		.loc 1 5891 0
 8842 0032 0D2B     		cmp	r3, #13
 8843 0034 EDD0     		beq	.L815
5892:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8844              		.loc 1 5892 0
 8845 0036 621C     		adds	r2, r4, #1
 8846              	.LVL1313:
 8847 0038 2370     		strb	r3, [r4]
5893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 8848              		.loc 1 5893 0
 8849 003a 0135     		adds	r5, r5, #1
 8850              	.LVL1314:
5894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8851              		.loc 1 5894 0
 8852 003c 0A2B     		cmp	r3, #10
 8853 003e E9D1     		bne	.L812
5892:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8854              		.loc 1 5892 0
 8855 0040 1446     		mov	r4, r2
 8856              	.LVL1315:
 8857              	.L811:
5896:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 8858              		.loc 1 5896 0
 8859 0042 0023     		movs	r3, #0
 8860 0044 2370     		strb	r3, [r4]
5897:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8861              		.loc 1 5897 0
 8862 0046 1DB1     		cbz	r5, .L817
 8863 0048 4046     		mov	r0, r8
 8864              	.L809:
5898:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8865              		.loc 1 5898 0
 8866 004a 02B0     		add	sp, sp, #8
 8867              	.LCFI122:
 8868              		.cfi_remember_state
 8869              		.cfi_def_cfa_offset 24
 8870              		@ sp needed
 8871 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/ccJz23SP.s 			page 284


 8872              	.LVL1316:
 8873              	.L817:
 8874              	.LCFI123:
 8875              		.cfi_restore_state
5897:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8876              		.loc 1 5897 0
 8877 0050 0020     		movs	r0, #0
 8878 0052 FAE7     		b	.L809
 8879              		.cfi_endproc
 8880              	.LFE384:
 8882              		.section	.text.f_putc,"ax",%progbits
 8883              		.align	1
 8884              		.global	f_putc
 8885              		.syntax unified
 8886              		.thumb
 8887              		.thumb_func
 8888              		.fpu fpv4-sp-d16
 8890              	f_putc:
 8891              	.LFB388:
5995:Middlewares/Third_Party/FatFs/src/ff.c **** 
5996:Middlewares/Third_Party/FatFs/src/ff.c **** 
5997:Middlewares/Third_Party/FatFs/src/ff.c **** 
5998:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
5999:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
6000:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
6001:Middlewares/Third_Party/FatFs/src/ff.c **** )
6002:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8892              		.loc 1 6002 0
 8893              		.cfi_startproc
 8894              		@ args = 0, pretend = 0, frame = 80
 8895              		@ frame_needed = 0, uses_anonymous_args = 0
 8896              	.LVL1317:
 8897 0000 10B5     		push	{r4, lr}
 8898              	.LCFI124:
 8899              		.cfi_def_cfa_offset 8
 8900              		.cfi_offset 4, -8
 8901              		.cfi_offset 14, -4
 8902 0002 94B0     		sub	sp, sp, #80
 8903              	.LCFI125:
 8904              		.cfi_def_cfa_offset 88
 8905 0004 0446     		mov	r4, r0
6003:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6004:Middlewares/Third_Party/FatFs/src/ff.c **** 
6005:Middlewares/Third_Party/FatFs/src/ff.c **** 
6006:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 8906              		.loc 1 6006 0
 8907 0006 01A8     		add	r0, sp, #4
 8908              	.LVL1318:
 8909 0008 FFF7FEFF 		bl	putc_init
 8910              	.LVL1319:
6007:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put the character */
 8911              		.loc 1 6007 0
 8912 000c 2146     		mov	r1, r4
 8913 000e 01A8     		add	r0, sp, #4
 8914 0010 FFF7FEFF 		bl	putc_bfd
 8915              	.LVL1320:
6008:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
ARM GAS  /tmp/ccJz23SP.s 			page 285


 8916              		.loc 1 6008 0
 8917 0014 01A8     		add	r0, sp, #4
 8918 0016 FFF7FEFF 		bl	putc_flush
 8919              	.LVL1321:
6009:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8920              		.loc 1 6009 0
 8921 001a 14B0     		add	sp, sp, #80
 8922              	.LCFI126:
 8923              		.cfi_def_cfa_offset 8
 8924              		@ sp needed
 8925 001c 10BD     		pop	{r4, pc}
 8926              		.cfi_endproc
 8927              	.LFE388:
 8929              		.section	.text.f_puts,"ax",%progbits
 8930              		.align	1
 8931              		.global	f_puts
 8932              		.syntax unified
 8933              		.thumb
 8934              		.thumb_func
 8935              		.fpu fpv4-sp-d16
 8937              	f_puts:
 8938              	.LFB389:
6010:Middlewares/Third_Party/FatFs/src/ff.c **** 
6011:Middlewares/Third_Party/FatFs/src/ff.c **** 
6012:Middlewares/Third_Party/FatFs/src/ff.c **** 
6013:Middlewares/Third_Party/FatFs/src/ff.c **** 
6014:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6015:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
6016:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6017:Middlewares/Third_Party/FatFs/src/ff.c **** 
6018:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
6019:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
6020:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
6021:Middlewares/Third_Party/FatFs/src/ff.c **** )
6022:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8939              		.loc 1 6022 0
 8940              		.cfi_startproc
 8941              		@ args = 0, pretend = 0, frame = 80
 8942              		@ frame_needed = 0, uses_anonymous_args = 0
 8943              	.LVL1322:
 8944 0000 10B5     		push	{r4, lr}
 8945              	.LCFI127:
 8946              		.cfi_def_cfa_offset 8
 8947              		.cfi_offset 4, -8
 8948              		.cfi_offset 14, -4
 8949 0002 94B0     		sub	sp, sp, #80
 8950              	.LCFI128:
 8951              		.cfi_def_cfa_offset 88
 8952 0004 0446     		mov	r4, r0
6023:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6024:Middlewares/Third_Party/FatFs/src/ff.c **** 
6025:Middlewares/Third_Party/FatFs/src/ff.c **** 
6026:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 8953              		.loc 1 6026 0
 8954 0006 01A8     		add	r0, sp, #4
 8955              	.LVL1323:
 8956 0008 FFF7FEFF 		bl	putc_init
ARM GAS  /tmp/ccJz23SP.s 			page 286


 8957              	.LVL1324:
6027:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 8958              		.loc 1 6027 0
 8959 000c 03E0     		b	.L822
 8960              	.L823:
 8961              		.loc 1 6027 0 is_stmt 0 discriminator 2
 8962 000e 0134     		adds	r4, r4, #1
 8963              	.LVL1325:
 8964 0010 01A8     		add	r0, sp, #4
 8965 0012 FFF7FEFF 		bl	putc_bfd
 8966              	.LVL1326:
 8967              	.L822:
 8968              		.loc 1 6027 0 discriminator 1
 8969 0016 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 8970 0018 0029     		cmp	r1, #0
 8971 001a F8D1     		bne	.L823
6028:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 8972              		.loc 1 6028 0 is_stmt 1
 8973 001c 01A8     		add	r0, sp, #4
 8974 001e FFF7FEFF 		bl	putc_flush
 8975              	.LVL1327:
6029:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8976              		.loc 1 6029 0
 8977 0022 14B0     		add	sp, sp, #80
 8978              	.LCFI129:
 8979              		.cfi_def_cfa_offset 8
 8980              		@ sp needed
 8981 0024 10BD     		pop	{r4, pc}
 8982              		.cfi_endproc
 8983              	.LFE389:
 8985              		.section	.text.f_printf,"ax",%progbits
 8986              		.align	1
 8987              		.global	f_printf
 8988              		.syntax unified
 8989              		.thumb
 8990              		.thumb_func
 8991              		.fpu fpv4-sp-d16
 8993              	f_printf:
 8994              	.LFB390:
6030:Middlewares/Third_Party/FatFs/src/ff.c **** 
6031:Middlewares/Third_Party/FatFs/src/ff.c **** 
6032:Middlewares/Third_Party/FatFs/src/ff.c **** 
6033:Middlewares/Third_Party/FatFs/src/ff.c **** 
6034:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6035:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
6036:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6037:Middlewares/Third_Party/FatFs/src/ff.c **** 
6038:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
6039:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
6040:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
6041:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
6042:Middlewares/Third_Party/FatFs/src/ff.c **** )
6043:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8995              		.loc 1 6043 0
 8996              		.cfi_startproc
 8997              		@ args = 4, pretend = 12, frame = 112
 8998              		@ frame_needed = 0, uses_anonymous_args = 1
ARM GAS  /tmp/ccJz23SP.s 			page 287


 8999              	.LVL1328:
 9000 0000 0EB4     		push	{r1, r2, r3}
 9001              	.LCFI130:
 9002              		.cfi_def_cfa_offset 12
 9003              		.cfi_offset 1, -12
 9004              		.cfi_offset 2, -8
 9005              		.cfi_offset 3, -4
 9006 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9007              	.LCFI131:
 9008              		.cfi_def_cfa_offset 44
 9009              		.cfi_offset 4, -44
 9010              		.cfi_offset 5, -40
 9011              		.cfi_offset 6, -36
 9012              		.cfi_offset 7, -32
 9013              		.cfi_offset 8, -28
 9014              		.cfi_offset 9, -24
 9015              		.cfi_offset 10, -20
 9016              		.cfi_offset 14, -16
 9017 0006 9DB0     		sub	sp, sp, #116
 9018              	.LCFI132:
 9019              		.cfi_def_cfa_offset 160
 9020 0008 25AC     		add	r4, sp, #148
 9021 000a 54F8046B 		ldr	r6, [r4], #4
6044:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
6045:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, w;
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, str[32], *p;
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 
6051:Middlewares/Third_Party/FatFs/src/ff.c **** 
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9022              		.loc 1 6052 0
 9023 000e 0146     		mov	r1, r0
 9024 0010 08A8     		add	r0, sp, #32
 9025              	.LVL1329:
 9026 0012 FFF7FEFF 		bl	putc_init
 9027              	.LVL1330:
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 
6054:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 9028              		.loc 1 6054 0
 9029 0016 1B94     		str	r4, [sp, #108]
 9030 0018 03E0     		b	.L826
 9031              	.LVL1331:
 9032              	.L878:
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 
6056:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
6060:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9033              		.loc 1 6060 0
 9034 001a 08A8     		add	r0, sp, #32
 9035 001c FFF7FEFF 		bl	putc_bfd
 9036              	.LVL1332:
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9037              		.loc 1 6057 0
ARM GAS  /tmp/ccJz23SP.s 			page 288


 9038 0020 2646     		mov	r6, r4
 9039              	.LVL1333:
 9040              	.L826:
 9041 0022 741C     		adds	r4, r6, #1
 9042              	.LVL1334:
 9043 0024 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9044              	.LVL1335:
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 9045              		.loc 1 6058 0
 9046 0026 0029     		cmp	r1, #0
 9047 0028 00F0FE80 		beq	.L827
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9048              		.loc 1 6059 0
 9049 002c 2529     		cmp	r1, #37
 9050 002e F4D1     		bne	.L878
 9051              	.LVL1336:
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6062:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9052              		.loc 1 6064 0
 9053 0030 B21C     		adds	r2, r6, #2
 9054              	.LVL1337:
 9055 0032 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 9056              	.LVL1338:
6065:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 9057              		.loc 1 6065 0
 9058 0034 3029     		cmp	r1, #48
 9059 0036 04D0     		beq	.L879
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
6067:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
6068:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 9060              		.loc 1 6068 0
 9061 0038 2D29     		cmp	r1, #45
 9062 003a 06D0     		beq	.L880
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9063              		.loc 1 6063 0
 9064 003c 0027     		movs	r7, #0
 9065              	.LVL1339:
 9066              	.L831:
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 9067              		.loc 1 6066 0
 9068 003e 0024     		movs	r4, #0
 9069 0040 0FE0     		b	.L832
 9070              	.LVL1340:
 9071              	.L879:
 9072 0042 F21C     		adds	r2, r6, #3
 9073              	.LVL1341:
 9074 0044 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 9075              	.LVL1342:
 9076 0046 0127     		movs	r7, #1
 9077 0048 F9E7     		b	.L831
 9078              	.LVL1343:
 9079              	.L880:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 9080              		.loc 1 6069 0
 9081 004a F21C     		adds	r2, r6, #3
ARM GAS  /tmp/ccJz23SP.s 			page 289


 9082              	.LVL1344:
 9083 004c B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 9084              	.LVL1345:
 9085 004e 0227     		movs	r7, #2
 9086 0050 F5E7     		b	.L831
 9087              	.LVL1346:
 9088              	.L833:
6070:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
6073:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9089              		.loc 1 6073 0
 9090 0052 04EB8404 		add	r4, r4, r4, lsl #2
 9091              	.LVL1347:
 9092 0056 6300     		lsls	r3, r4, #1
 9093 0058 1944     		add	r1, r1, r3
 9094              	.LVL1348:
 9095 005a A1F13004 		sub	r4, r1, #48
 9096              	.LVL1349:
6074:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 9097              		.loc 1 6074 0
 9098 005e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 9099              	.LVL1350:
 9100 0060 0132     		adds	r2, r2, #1
 9101              	.LVL1351:
 9102              	.L832:
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9103              		.loc 1 6072 0
 9104 0062 A1F13003 		sub	r3, r1, #48
 9105 0066 DBB2     		uxtb	r3, r3
 9106 0068 092B     		cmp	r3, #9
 9107 006a F2D9     		bls	.L833
6075:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6076:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 9108              		.loc 1 6076 0
 9109 006c 6C29     		cmp	r1, #108
 9110 006e 03D0     		beq	.L834
 9111              		.loc 1 6076 0 is_stmt 0 discriminator 1
 9112 0070 4C29     		cmp	r1, #76
 9113 0072 01D0     		beq	.L834
 9114 0074 1646     		mov	r6, r2
 9115 0076 03E0     		b	.L835
 9116              	.L834:
6077:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 9117              		.loc 1 6077 0 is_stmt 1
 9118 0078 47F00407 		orr	r7, r7, #4
 9119              	.LVL1352:
 9120 007c 561C     		adds	r6, r2, #1
 9121              	.LVL1353:
 9122 007e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 9123              	.LVL1354:
 9124              	.L835:
6078:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 9125              		.loc 1 6079 0
 9126 0080 0029     		cmp	r1, #0
 9127 0082 00F0D180 		beq	.L827
ARM GAS  /tmp/ccJz23SP.s 			page 290


 9128              	.LVL1355:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
6081:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 9129              		.loc 1 6081 0
 9130 0086 A1F16103 		sub	r3, r1, #97
 9131 008a DBB2     		uxtb	r3, r3
 9132 008c 192B     		cmp	r3, #25
 9133 008e 14D8     		bhi	.L872
 9134              		.loc 1 6081 0 is_stmt 0 discriminator 1
 9135 0090 A1F12003 		sub	r3, r1, #32
 9136 0094 DBB2     		uxtb	r3, r3
 9137              	.LVL1356:
 9138              	.L836:
6082:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 9139              		.loc 1 6082 0 is_stmt 1
 9140 0096 A3F14202 		sub	r2, r3, #66
 9141 009a 162A     		cmp	r2, #22
 9142 009c 4CD8     		bhi	.L837
 9143 009e DFE802F0 		tbb	[pc, r2]
 9144              	.L839:
 9145 00a2 4F       		.byte	(.L838-.L839)/2
 9146 00a3 3D       		.byte	(.L840-.L839)/2
 9147 00a4 45       		.byte	(.L841-.L839)/2
 9148 00a5 4B       		.byte	(.L837-.L839)/2
 9149 00a6 4B       		.byte	(.L837-.L839)/2
 9150 00a7 4B       		.byte	(.L837-.L839)/2
 9151 00a8 4B       		.byte	(.L837-.L839)/2
 9152 00a9 4B       		.byte	(.L837-.L839)/2
 9153 00aa 4B       		.byte	(.L837-.L839)/2
 9154 00ab 4B       		.byte	(.L837-.L839)/2
 9155 00ac 4B       		.byte	(.L837-.L839)/2
 9156 00ad 4B       		.byte	(.L837-.L839)/2
 9157 00ae 4B       		.byte	(.L837-.L839)/2
 9158 00af 52       		.byte	(.L873-.L839)/2
 9159 00b0 4B       		.byte	(.L837-.L839)/2
 9160 00b1 4B       		.byte	(.L837-.L839)/2
 9161 00b2 4B       		.byte	(.L837-.L839)/2
 9162 00b3 0E       		.byte	(.L843-.L839)/2
 9163 00b4 4B       		.byte	(.L837-.L839)/2
 9164 00b5 45       		.byte	(.L841-.L839)/2
 9165 00b6 4B       		.byte	(.L837-.L839)/2
 9166 00b7 4B       		.byte	(.L837-.L839)/2
 9167 00b8 48       		.byte	(.L844-.L839)/2
 9168              	.LVL1357:
 9169 00b9 00       		.p2align 1
 9170              	.L872:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 9171              		.loc 1 6080 0
 9172 00ba 0B46     		mov	r3, r1
 9173 00bc EBE7     		b	.L836
 9174              	.LVL1358:
 9175              	.L843:
6083:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
6084:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 9176              		.loc 1 6084 0
 9177 00be 1B9B     		ldr	r3, [sp, #108]
 9178              	.LVL1359:
ARM GAS  /tmp/ccJz23SP.s 			page 291


 9179 00c0 1A1D     		adds	r2, r3, #4
 9180 00c2 1B92     		str	r2, [sp, #108]
 9181 00c4 D3F80080 		ldr	r8, [r3]
 9182              	.LVL1360:
6085:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 9183              		.loc 1 6085 0
 9184 00c8 0025     		movs	r5, #0
 9185 00ca 00E0     		b	.L845
 9186              	.LVL1361:
 9187              	.L846:
 9188              		.loc 1 6085 0 is_stmt 0 discriminator 3
 9189 00cc 0135     		adds	r5, r5, #1
 9190              	.LVL1362:
 9191              	.L845:
 9192              		.loc 1 6085 0 discriminator 1
 9193 00ce 18F80530 		ldrb	r3, [r8, r5]	@ zero_extendqisi2
 9194 00d2 002B     		cmp	r3, #0
 9195 00d4 FAD1     		bne	.L846
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 9196              		.loc 1 6086 0 is_stmt 1
 9197 00d6 17F0020F 		tst	r7, #2
 9198 00da 10D1     		bne	.L850
 9199 00dc 05E0     		b	.L847
 9200              	.LVL1363:
 9201              	.L849:
6087:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 9202              		.loc 1 6087 0 discriminator 2
 9203 00de 2021     		movs	r1, #32
 9204 00e0 0DEB0100 		add	r0, sp, r1
 9205 00e4 FFF7FEFF 		bl	putc_bfd
 9206              	.LVL1364:
 9207 00e8 3D46     		mov	r5, r7
 9208              	.LVL1365:
 9209              	.L847:
 9210              		.loc 1 6087 0 is_stmt 0 discriminator 1
 9211 00ea 6F1C     		adds	r7, r5, #1
 9212              	.LVL1366:
 9213 00ec A542     		cmp	r5, r4
 9214 00ee F6D3     		bcc	.L849
 9215              		.loc 1 6087 0
 9216 00f0 3D46     		mov	r5, r7
 9217 00f2 04E0     		b	.L850
 9218              	.LVL1367:
 9219              	.L851:
6088:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 9220              		.loc 1 6089 0 is_stmt 1 discriminator 2
 9221 00f4 08F10108 		add	r8, r8, #1
 9222              	.LVL1368:
 9223 00f8 08A8     		add	r0, sp, #32
 9224 00fa FFF7FEFF 		bl	putc_bfd
 9225              	.LVL1369:
 9226              	.L850:
 9227              		.loc 1 6089 0 is_stmt 0 discriminator 1
 9228 00fe 98F80010 		ldrb	r1, [r8]	@ zero_extendqisi2
 9229 0102 0029     		cmp	r1, #0
 9230 0104 F6D1     		bne	.L851
ARM GAS  /tmp/ccJz23SP.s 			page 292


 9231 0106 05E0     		b	.L852
 9232              	.LVL1370:
 9233              	.L853:
6090:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 9234              		.loc 1 6090 0 is_stmt 1 discriminator 2
 9235 0108 2021     		movs	r1, #32
 9236 010a 0DEB0100 		add	r0, sp, r1
 9237 010e FFF7FEFF 		bl	putc_bfd
 9238              	.LVL1371:
 9239 0112 3D46     		mov	r5, r7
 9240              	.LVL1372:
 9241              	.L852:
 9242              		.loc 1 6090 0 is_stmt 0 discriminator 1
 9243 0114 6F1C     		adds	r7, r5, #1
 9244              	.LVL1373:
 9245 0116 A542     		cmp	r5, r4
 9246 0118 F6D3     		bcc	.L853
 9247 011a 82E7     		b	.L826
 9248              	.LVL1374:
 9249              	.L840:
6091:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6092:Middlewares/Third_Party/FatFs/src/ff.c **** 
6093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
6094:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 9250              		.loc 1 6094 0 is_stmt 1
 9251 011c 1B9B     		ldr	r3, [sp, #108]
 9252              	.LVL1375:
 9253 011e 1A1D     		adds	r2, r3, #4
 9254 0120 1B92     		str	r2, [sp, #108]
 9255 0122 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9256              	.LVL1376:
 9257 0124 08A8     		add	r0, sp, #32
 9258 0126 FFF7FEFF 		bl	putc_bfd
 9259              	.LVL1377:
 9260 012a 7AE7     		b	.L826
 9261              	.LVL1378:
 9262              	.L841:
6095:Middlewares/Third_Party/FatFs/src/ff.c **** 
6096:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
6098:Middlewares/Third_Party/FatFs/src/ff.c **** 
6099:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
6101:Middlewares/Third_Party/FatFs/src/ff.c **** 
6102:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
6104:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 9263              		.loc 1 6104 0
 9264 012c 4FF00A0E 		mov	lr, #10
 9265 0130 0BE0     		b	.L842
 9266              	.LVL1379:
 9267              	.L844:
6105:Middlewares/Third_Party/FatFs/src/ff.c **** 
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
6107:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 9268              		.loc 1 6107 0
 9269 0132 4FF0100E 		mov	lr, #16
ARM GAS  /tmp/ccJz23SP.s 			page 293


 9270 0136 08E0     		b	.L842
 9271              	.LVL1380:
 9272              	.L837:
6108:Middlewares/Third_Party/FatFs/src/ff.c **** 
6109:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 9273              		.loc 1 6110 0
 9274 0138 08A8     		add	r0, sp, #32
 9275 013a FFF7FEFF 		bl	putc_bfd
 9276              	.LVL1381:
 9277 013e 70E7     		b	.L826
 9278              	.LVL1382:
 9279              	.L838:
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9280              		.loc 1 6097 0
 9281 0140 4FF0020E 		mov	lr, #2
 9282 0144 01E0     		b	.L842
 9283              	.L873:
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9284              		.loc 1 6100 0
 9285 0146 4FF0080E 		mov	lr, #8
 9286              	.L842:
 9287              	.LVL1383:
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 
6113:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 9288              		.loc 1 6114 0
 9289 014a 17F0040F 		tst	r7, #4
 9290 014e 08D0     		beq	.L854
 9291 0150 1B9A     		ldr	r2, [sp, #108]
 9292 0152 101D     		adds	r0, r2, #4
 9293 0154 1B90     		str	r0, [sp, #108]
 9294 0156 1068     		ldr	r0, [r2]
 9295              	.L855:
 9296              	.LVL1384:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9297              		.loc 1 6115 0 discriminator 8
 9298 0158 442B     		cmp	r3, #68
 9299 015a 0ED0     		beq	.L881
 9300              	.L857:
 9301              	.LVL1385:
6116:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
6117:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
6118:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6119:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 9302              		.loc 1 6119 0
 9303 015c 4FF0000C 		mov	ip, #0
 9304 0160 20E0     		b	.L861
 9305              	.LVL1386:
 9306              	.L854:
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9307              		.loc 1 6114 0 discriminator 2
 9308 0162 442B     		cmp	r3, #68
 9309 0164 04D0     		beq	.L882
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9310              		.loc 1 6114 0 is_stmt 0
ARM GAS  /tmp/ccJz23SP.s 			page 294


 9311 0166 1B9A     		ldr	r2, [sp, #108]
 9312 0168 101D     		adds	r0, r2, #4
 9313 016a 1B90     		str	r0, [sp, #108]
 9314 016c 1068     		ldr	r0, [r2]
 9315 016e F3E7     		b	.L855
 9316              	.L882:
 9317 0170 1B9A     		ldr	r2, [sp, #108]
 9318 0172 101D     		adds	r0, r2, #4
 9319 0174 1B90     		str	r0, [sp, #108]
 9320 0176 1068     		ldr	r0, [r2]
 9321 0178 EEE7     		b	.L855
 9322              	.LVL1387:
 9323              	.L881:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9324              		.loc 1 6115 0 is_stmt 1 discriminator 1
 9325 017a 0028     		cmp	r0, #0
 9326 017c EEDA     		bge	.L857
6116:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 9327              		.loc 1 6116 0
 9328 017e 4042     		negs	r0, r0
 9329              	.LVL1388:
6117:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9330              		.loc 1 6117 0
 9331 0180 47F00807 		orr	r7, r7, #8
 9332              	.LVL1389:
 9333 0184 EAE7     		b	.L857
 9334              	.LVL1390:
 9335              	.L883:
6120:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9336              		.loc 1 6122 0
 9337 0186 2725     		movs	r5, #39
 9338              	.L859:
 9339              		.loc 1 6122 0 is_stmt 0 discriminator 5
 9340 0188 2B44     		add	r3, r3, r5
 9341              	.LVL1391:
 9342 018a DBB2     		uxtb	r3, r3
 9343              	.LVL1392:
 9344              	.L858:
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9345              		.loc 1 6123 0 is_stmt 1
 9346 018c 0CF10105 		add	r5, ip, #1
 9347              	.LVL1393:
 9348 0190 3033     		adds	r3, r3, #48
 9349              	.LVL1394:
 9350 0192 0DF17008 		add	r8, sp, #112
 9351 0196 E044     		add	r8, r8, ip
 9352 0198 08F8703C 		strb	r3, [r8, #-112]
6124:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 9353              		.loc 1 6124 0
 9354 019c 72B1     		cbz	r2, .L860
 9355              		.loc 1 6124 0 is_stmt 0 discriminator 1
 9356 019e 1F2D     		cmp	r5, #31
 9357 01a0 0CD8     		bhi	.L860
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9358              		.loc 1 6123 0 is_stmt 1
ARM GAS  /tmp/ccJz23SP.s 			page 295


 9359 01a2 AC46     		mov	ip, r5
 9360              	.LVL1395:
 9361              	.L861:
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9362              		.loc 1 6121 0
 9363 01a4 B0FBFEF2 		udiv	r2, r0, lr
 9364 01a8 0EFB1203 		mls	r3, lr, r2, r0
 9365 01ac DBB2     		uxtb	r3, r3
 9366              	.LVL1396:
 9367 01ae 1046     		mov	r0, r2
 9368              	.LVL1397:
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9369              		.loc 1 6122 0
 9370 01b0 092B     		cmp	r3, #9
 9371 01b2 EBD9     		bls	.L858
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9372              		.loc 1 6122 0 is_stmt 0 discriminator 1
 9373 01b4 7829     		cmp	r1, #120
 9374 01b6 E6D0     		beq	.L883
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9375              		.loc 1 6122 0
 9376 01b8 0725     		movs	r5, #7
 9377 01ba E5E7     		b	.L859
 9378              	.LVL1398:
 9379              	.L860:
6125:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) str[i++] = '-';
 9380              		.loc 1 6125 0 is_stmt 1
 9381 01bc 17F0080F 		tst	r7, #8
 9382 01c0 06D0     		beq	.L862
 9383              	.LVL1399:
 9384              		.loc 1 6125 0 is_stmt 0 discriminator 1
 9385 01c2 1CAB     		add	r3, sp, #112
 9386 01c4 1D44     		add	r5, r5, r3
 9387 01c6 2D23     		movs	r3, #45
 9388 01c8 05F8703C 		strb	r3, [r5, #-112]
 9389 01cc 0CF10205 		add	r5, ip, #2
 9390              	.LVL1400:
 9391              	.L862:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9392              		.loc 1 6126 0 is_stmt 1
 9393 01d0 17F0010F 		tst	r7, #1
 9394 01d4 03D0     		beq	.L876
 9395 01d6 4FF0300A 		mov	r10, #48
 9396              	.L863:
 9397              	.LVL1401:
 9398              		.loc 1 6126 0 is_stmt 0 discriminator 4
 9399 01da A846     		mov	r8, r5
6127:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 9400              		.loc 1 6127 0 is_stmt 1 discriminator 4
 9401 01dc 07E0     		b	.L864
 9402              	.LVL1402:
 9403              	.L876:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9404              		.loc 1 6126 0
 9405 01de 4FF0200A 		mov	r10, #32
 9406 01e2 FAE7     		b	.L863
 9407              	.LVL1403:
ARM GAS  /tmp/ccJz23SP.s 			page 296


 9408              	.L866:
 9409              		.loc 1 6127 0 discriminator 3
 9410 01e4 5146     		mov	r1, r10
 9411 01e6 08A8     		add	r0, sp, #32
 9412 01e8 FFF7FEFF 		bl	putc_bfd
 9413              	.LVL1404:
 9414 01ec C846     		mov	r8, r9
 9415              	.LVL1405:
 9416              	.L864:
 9417              		.loc 1 6127 0 is_stmt 0 discriminator 1
 9418 01ee 17F0020F 		tst	r7, #2
 9419 01f2 04D1     		bne	.L867
 9420              		.loc 1 6127 0 discriminator 2
 9421 01f4 08F10109 		add	r9, r8, #1
 9422              	.LVL1406:
 9423 01f8 A045     		cmp	r8, r4
 9424 01fa F3D3     		bcc	.L866
 9425              		.loc 1 6127 0
 9426 01fc C846     		mov	r8, r9
 9427              	.LVL1407:
 9428              	.L867:
6128:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6129:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, str[--i]);
 9429              		.loc 1 6129 0 is_stmt 1 discriminator 1
 9430 01fe 013D     		subs	r5, r5, #1
 9431              	.LVL1408:
 9432 0200 1CAB     		add	r3, sp, #112
 9433 0202 2B44     		add	r3, r3, r5
 9434 0204 13F8701C 		ldrb	r1, [r3, #-112]	@ zero_extendqisi2
 9435 0208 08A8     		add	r0, sp, #32
 9436 020a FFF7FEFF 		bl	putc_bfd
 9437              	.LVL1409:
6130:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i);
 9438              		.loc 1 6130 0 discriminator 1
 9439 020e 002D     		cmp	r5, #0
 9440 0210 F5D1     		bne	.L867
 9441 0212 04E0     		b	.L868
 9442              	.LVL1410:
 9443              	.L869:
6131:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 9444              		.loc 1 6131 0 discriminator 2
 9445 0214 5146     		mov	r1, r10
 9446 0216 08A8     		add	r0, sp, #32
 9447 0218 FFF7FEFF 		bl	putc_bfd
 9448              	.LVL1411:
 9449 021c A846     		mov	r8, r5
 9450              	.LVL1412:
 9451              	.L868:
 9452              		.loc 1 6131 0 is_stmt 0 discriminator 1
 9453 021e 08F10105 		add	r5, r8, #1
 9454              	.LVL1413:
 9455 0222 A045     		cmp	r8, r4
 9456 0224 F6D3     		bcc	.L869
 9457 0226 FCE6     		b	.L826
 9458              	.LVL1414:
 9459              	.L827:
6132:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccJz23SP.s 			page 297


6133:Middlewares/Third_Party/FatFs/src/ff.c **** 
6134:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
6135:Middlewares/Third_Party/FatFs/src/ff.c **** 
6136:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9460              		.loc 1 6136 0 is_stmt 1
 9461 0228 08A8     		add	r0, sp, #32
 9462 022a FFF7FEFF 		bl	putc_flush
 9463              	.LVL1415:
6137:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9464              		.loc 1 6137 0
 9465 022e 1DB0     		add	sp, sp, #116
 9466              	.LCFI133:
 9467              		.cfi_def_cfa_offset 44
 9468              		@ sp needed
 9469 0230 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 9470              	.LCFI134:
 9471              		.cfi_restore 14
 9472              		.cfi_restore 10
 9473              		.cfi_restore 9
 9474              		.cfi_restore 8
 9475              		.cfi_restore 7
 9476              		.cfi_restore 6
 9477              		.cfi_restore 5
 9478              		.cfi_restore 4
 9479              		.cfi_def_cfa_offset 12
 9480 0234 03B0     		add	sp, sp, #12
 9481              	.LCFI135:
 9482              		.cfi_restore 3
 9483              		.cfi_restore 2
 9484              		.cfi_restore 1
 9485              		.cfi_def_cfa_offset 0
 9486 0236 7047     		bx	lr
 9487              		.cfi_endproc
 9488              	.LFE390:
 9490              		.section	.bss.FatFs,"aw",%nobits
 9491              		.align	2
 9492              		.set	.LANCHOR2,. + 0
 9495              	FatFs:
 9496 0000 00000000 		.space	4
 9497              		.section	.bss.Files,"aw",%nobits
 9498              		.align	2
 9499              		.set	.LANCHOR0,. + 0
 9502              	Files:
 9503 0000 00000000 		.space	32
 9503      00000000 
 9503      00000000 
 9503      00000000 
 9503      00000000 
 9504              		.section	.bss.Fsid,"aw",%nobits
 9505              		.align	1
 9506              		.set	.LANCHOR3,. + 0
 9509              	Fsid:
 9510 0000 0000     		.space	2
 9511              		.section	.rodata.ExCvt,"a",%progbits
 9512              		.align	2
 9513              		.set	.LANCHOR1,. + 0
 9516              	ExCvt:
ARM GAS  /tmp/ccJz23SP.s 			page 298


 9517 0000 43       		.byte	67
 9518 0001 55       		.byte	85
 9519 0002 45       		.byte	69
 9520 0003 41       		.byte	65
 9521 0004 41       		.byte	65
 9522 0005 41       		.byte	65
 9523 0006 41       		.byte	65
 9524 0007 43       		.byte	67
 9525 0008 45       		.byte	69
 9526 0009 45       		.byte	69
 9527 000a 45       		.byte	69
 9528 000b 49       		.byte	73
 9529 000c 49       		.byte	73
 9530 000d 49       		.byte	73
 9531 000e 41       		.byte	65
 9532 000f 41       		.byte	65
 9533 0010 45       		.byte	69
 9534 0011 92       		.byte	-110
 9535 0012 92       		.byte	-110
 9536 0013 4F       		.byte	79
 9537 0014 4F       		.byte	79
 9538 0015 4F       		.byte	79
 9539 0016 55       		.byte	85
 9540 0017 55       		.byte	85
 9541 0018 59       		.byte	89
 9542 0019 4F       		.byte	79
 9543 001a 55       		.byte	85
 9544 001b 4F       		.byte	79
 9545 001c 9C       		.byte	-100
 9546 001d 4F       		.byte	79
 9547 001e 9E       		.byte	-98
 9548 001f 9F       		.byte	-97
 9549 0020 41       		.byte	65
 9550 0021 49       		.byte	73
 9551 0022 4F       		.byte	79
 9552 0023 55       		.byte	85
 9553 0024 A5       		.byte	-91
 9554 0025 A5       		.byte	-91
 9555 0026 A6       		.byte	-90
 9556 0027 A7       		.byte	-89
 9557 0028 A8       		.byte	-88
 9558 0029 A9       		.byte	-87
 9559 002a AA       		.byte	-86
 9560 002b AB       		.byte	-85
 9561 002c AC       		.byte	-84
 9562 002d AD       		.byte	-83
 9563 002e AE       		.byte	-82
 9564 002f AF       		.byte	-81
 9565 0030 B0       		.byte	-80
 9566 0031 B1       		.byte	-79
 9567 0032 B2       		.byte	-78
 9568 0033 B3       		.byte	-77
 9569 0034 B4       		.byte	-76
 9570 0035 41       		.byte	65
 9571 0036 41       		.byte	65
 9572 0037 41       		.byte	65
 9573 0038 B8       		.byte	-72
ARM GAS  /tmp/ccJz23SP.s 			page 299


 9574 0039 B9       		.byte	-71
 9575 003a BA       		.byte	-70
 9576 003b BB       		.byte	-69
 9577 003c BC       		.byte	-68
 9578 003d BD       		.byte	-67
 9579 003e BE       		.byte	-66
 9580 003f BF       		.byte	-65
 9581 0040 C0       		.byte	-64
 9582 0041 C1       		.byte	-63
 9583 0042 C2       		.byte	-62
 9584 0043 C3       		.byte	-61
 9585 0044 C4       		.byte	-60
 9586 0045 C5       		.byte	-59
 9587 0046 41       		.byte	65
 9588 0047 41       		.byte	65
 9589 0048 C8       		.byte	-56
 9590 0049 C9       		.byte	-55
 9591 004a CA       		.byte	-54
 9592 004b CB       		.byte	-53
 9593 004c CC       		.byte	-52
 9594 004d CD       		.byte	-51
 9595 004e CE       		.byte	-50
 9596 004f CF       		.byte	-49
 9597 0050 D1       		.byte	-47
 9598 0051 D1       		.byte	-47
 9599 0052 45       		.byte	69
 9600 0053 45       		.byte	69
 9601 0054 45       		.byte	69
 9602 0055 49       		.byte	73
 9603 0056 49       		.byte	73
 9604 0057 49       		.byte	73
 9605 0058 49       		.byte	73
 9606 0059 D9       		.byte	-39
 9607 005a DA       		.byte	-38
 9608 005b DB       		.byte	-37
 9609 005c DC       		.byte	-36
 9610 005d DD       		.byte	-35
 9611 005e 49       		.byte	73
 9612 005f DF       		.byte	-33
 9613 0060 4F       		.byte	79
 9614 0061 E1       		.byte	-31
 9615 0062 4F       		.byte	79
 9616 0063 4F       		.byte	79
 9617 0064 4F       		.byte	79
 9618 0065 4F       		.byte	79
 9619 0066 E6       		.byte	-26
 9620 0067 E8       		.byte	-24
 9621 0068 E8       		.byte	-24
 9622 0069 55       		.byte	85
 9623 006a 55       		.byte	85
 9624 006b 55       		.byte	85
 9625 006c 59       		.byte	89
 9626 006d 59       		.byte	89
 9627 006e EE       		.byte	-18
 9628 006f EF       		.byte	-17
 9629 0070 F0       		.byte	-16
 9630 0071 F1       		.byte	-15
ARM GAS  /tmp/ccJz23SP.s 			page 300


 9631 0072 F2       		.byte	-14
 9632 0073 F3       		.byte	-13
 9633 0074 F4       		.byte	-12
 9634 0075 F5       		.byte	-11
 9635 0076 F6       		.byte	-10
 9636 0077 F7       		.byte	-9
 9637 0078 F8       		.byte	-8
 9638 0079 F9       		.byte	-7
 9639 007a FA       		.byte	-6
 9640 007b FB       		.byte	-5
 9641 007c FC       		.byte	-4
 9642 007d FD       		.byte	-3
 9643 007e FE       		.byte	-2
 9644 007f FF       		.byte	-1
 9645              		.section	.rodata.create_name.str1.4,"aMS",%progbits,1
 9646              		.align	2
 9647              	.LC0:
 9648 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 9648      3A3B3C3D 
 9648      3E3F5B5D 
 9648      7C7F00
 9649              		.section	.rodata.cst.11911,"a",%progbits
 9650              		.align	2
 9651              		.set	.LANCHOR5,. + 0
 9654              	cst.11911:
 9655 0000 0100     		.short	1
 9656 0002 0400     		.short	4
 9657 0004 1000     		.short	16
 9658 0006 4000     		.short	64
 9659 0008 0001     		.short	256
 9660 000a 0002     		.short	512
 9661 000c 0000     		.short	0
 9662              		.section	.rodata.cst32.11912,"a",%progbits
 9663              		.align	2
 9664              		.set	.LANCHOR4,. + 0
 9667              	cst32.11912:
 9668 0000 0100     		.short	1
 9669 0002 0200     		.short	2
 9670 0004 0400     		.short	4
 9671 0006 0800     		.short	8
 9672 0008 1000     		.short	16
 9673 000a 2000     		.short	32
 9674 000c 0000     		.short	0
 9675              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 9676              		.align	2
 9677              	.LC1:
 9678 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 9678      53444F53 
 9678      352E3000 
 9679              	.LC2:
 9680 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 9680      414D4520 
 9680      20202046 
 9680      41543332 
 9680      20202000 
 9681              	.LC3:
 9682 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
ARM GAS  /tmp/ccJz23SP.s 			page 301


 9682      414D4520 
 9682      20202046 
 9682      41542020 
 9682      20202000 
 9683              		.text
 9684              	.Letext0:
 9685              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 9686              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 9687              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 9688              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 9689              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 9690              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 9691              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 9692              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 9693              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 9694              		.file 11 "/usr/include/newlib/sys/lock.h"
 9695              		.file 12 "/usr/include/newlib/sys/_types.h"
 9696              		.file 13 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 9697              		.file 14 "/usr/include/newlib/sys/reent.h"
 9698              		.file 15 "/usr/include/newlib/stdlib.h"
 9699              		.file 16 "Middlewares/Third_Party/FatFs/src/ff.h"
 9700              		.file 17 "Middlewares/Third_Party/FatFs/src/diskio.h"
 9701              		.file 18 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stdarg.h"
 9702              		.file 19 "<built-in>"
ARM GAS  /tmp/ccJz23SP.s 			page 302


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ff.c
     /tmp/ccJz23SP.s:18     .text.ld_word:0000000000000000 $t
     /tmp/ccJz23SP.s:24     .text.ld_word:0000000000000000 ld_word
     /tmp/ccJz23SP.s:47     .text.ld_dword:0000000000000000 $t
     /tmp/ccJz23SP.s:53     .text.ld_dword:0000000000000000 ld_dword
     /tmp/ccJz23SP.s:83     .text.st_word:0000000000000000 $t
     /tmp/ccJz23SP.s:89     .text.st_word:0000000000000000 st_word
     /tmp/ccJz23SP.s:110    .text.st_dword:0000000000000000 $t
     /tmp/ccJz23SP.s:116    .text.st_dword:0000000000000000 st_dword
     /tmp/ccJz23SP.s:145    .text.mem_cpy:0000000000000000 $t
     /tmp/ccJz23SP.s:151    .text.mem_cpy:0000000000000000 mem_cpy
     /tmp/ccJz23SP.s:183    .text.mem_set:0000000000000000 $t
     /tmp/ccJz23SP.s:189    .text.mem_set:0000000000000000 mem_set
     /tmp/ccJz23SP.s:213    .text.mem_cmp:0000000000000000 $t
     /tmp/ccJz23SP.s:219    .text.mem_cmp:0000000000000000 mem_cmp
     /tmp/ccJz23SP.s:269    .text.chk_chr:0000000000000000 $t
     /tmp/ccJz23SP.s:275    .text.chk_chr:0000000000000000 chk_chr
     /tmp/ccJz23SP.s:305    .text.chk_lock:0000000000000000 $t
     /tmp/ccJz23SP.s:311    .text.chk_lock:0000000000000000 chk_lock
     /tmp/ccJz23SP.s:433    .text.chk_lock:0000000000000070 $d
     /tmp/ccJz23SP.s:438    .text.enq_lock:0000000000000000 $t
     /tmp/ccJz23SP.s:444    .text.enq_lock:0000000000000000 enq_lock
     /tmp/ccJz23SP.s:481    .text.enq_lock:000000000000001c $d
     /tmp/ccJz23SP.s:486    .text.inc_lock:0000000000000000 $t
     /tmp/ccJz23SP.s:492    .text.inc_lock:0000000000000000 inc_lock
     /tmp/ccJz23SP.s:645    .text.inc_lock:00000000000000a0 $d
     /tmp/ccJz23SP.s:650    .text.dec_lock:0000000000000000 $t
     /tmp/ccJz23SP.s:656    .text.dec_lock:0000000000000000 dec_lock
     /tmp/ccJz23SP.s:721    .text.dec_lock:000000000000003c $d
     /tmp/ccJz23SP.s:726    .text.clear_lock:0000000000000000 $t
     /tmp/ccJz23SP.s:732    .text.clear_lock:0000000000000000 clear_lock
     /tmp/ccJz23SP.s:798    .text.clear_lock:0000000000000038 $d
     /tmp/ccJz23SP.s:803    .text.clust2sect:0000000000000000 $t
     /tmp/ccJz23SP.s:809    .text.clust2sect:0000000000000000 clust2sect
     /tmp/ccJz23SP.s:842    .text.clmt_clust:0000000000000000 $t
     /tmp/ccJz23SP.s:848    .text.clmt_clust:0000000000000000 clmt_clust
     /tmp/ccJz23SP.s:899    .text.ld_clust:0000000000000000 $t
     /tmp/ccJz23SP.s:905    .text.ld_clust:0000000000000000 ld_clust
     /tmp/ccJz23SP.s:950    .text.st_clust:0000000000000000 $t
     /tmp/ccJz23SP.s:956    .text.st_clust:0000000000000000 st_clust
     /tmp/ccJz23SP.s:1000   .text.get_fileinfo:0000000000000000 $t
     /tmp/ccJz23SP.s:1006   .text.get_fileinfo:0000000000000000 get_fileinfo
     /tmp/ccJz23SP.s:1120   .text.create_name:0000000000000000 $t
     /tmp/ccJz23SP.s:1126   .text.create_name:0000000000000000 create_name
     /tmp/ccJz23SP.s:1310   .text.create_name:00000000000000c4 $d
     /tmp/ccJz23SP.s:1316   .text.get_ldnumber:0000000000000000 $t
     /tmp/ccJz23SP.s:1322   .text.get_ldnumber:0000000000000000 get_ldnumber
     /tmp/ccJz23SP.s:1426   .text.putc_init:0000000000000000 $t
     /tmp/ccJz23SP.s:1432   .text.putc_init:0000000000000000 putc_init
     /tmp/ccJz23SP.s:1452   .text.validate:0000000000000000 $t
     /tmp/ccJz23SP.s:1458   .text.validate:0000000000000000 validate
     /tmp/ccJz23SP.s:1547   .text.sync_window:0000000000000000 $t
     /tmp/ccJz23SP.s:1553   .text.sync_window:0000000000000000 sync_window
     /tmp/ccJz23SP.s:1643   .text.move_window:0000000000000000 $t
     /tmp/ccJz23SP.s:1649   .text.move_window:0000000000000000 move_window
     /tmp/ccJz23SP.s:1707   .text.check_fs:0000000000000000 $t
ARM GAS  /tmp/ccJz23SP.s 			page 303


     /tmp/ccJz23SP.s:1713   .text.check_fs:0000000000000000 check_fs
     /tmp/ccJz23SP.s:1796   .text.check_fs:0000000000000070 $d
     /tmp/ccJz23SP.s:1803   .text.find_volume:0000000000000000 $t
     /tmp/ccJz23SP.s:1809   .text.find_volume:0000000000000000 find_volume
     /tmp/ccJz23SP.s:2360   .text.find_volume:00000000000002f4 $d
     /tmp/ccJz23SP.s:2368   .text.put_fat:0000000000000000 $t
     /tmp/ccJz23SP.s:2374   .text.put_fat:0000000000000000 put_fat
     /tmp/ccJz23SP.s:2572   .text.get_fat:0000000000000000 $t
     /tmp/ccJz23SP.s:2578   .text.get_fat:0000000000000000 get_fat
     /tmp/ccJz23SP.s:2744   .text.dir_sdi:0000000000000000 $t
     /tmp/ccJz23SP.s:2750   .text.dir_sdi:0000000000000000 dir_sdi
     /tmp/ccJz23SP.s:2907   .text.create_chain:0000000000000000 $t
     /tmp/ccJz23SP.s:2913   .text.create_chain:0000000000000000 create_chain
     /tmp/ccJz23SP.s:3098   .text.remove_chain:0000000000000000 $t
     /tmp/ccJz23SP.s:3104   .text.remove_chain:0000000000000000 remove_chain
     /tmp/ccJz23SP.s:3225   .text.dir_remove:0000000000000000 $t
     /tmp/ccJz23SP.s:3231   .text.dir_remove:0000000000000000 dir_remove
     /tmp/ccJz23SP.s:3274   .text.dir_next:0000000000000000 $t
     /tmp/ccJz23SP.s:3280   .text.dir_next:0000000000000000 dir_next
     /tmp/ccJz23SP.s:3509   .text.dir_find:0000000000000000 $t
     /tmp/ccJz23SP.s:3515   .text.dir_find:0000000000000000 dir_find
     /tmp/ccJz23SP.s:3601   .text.follow_path:0000000000000000 $t
     /tmp/ccJz23SP.s:3607   .text.follow_path:0000000000000000 follow_path
     /tmp/ccJz23SP.s:3734   .text.dir_alloc:0000000000000000 $t
     /tmp/ccJz23SP.s:3740   .text.dir_alloc:0000000000000000 dir_alloc
     /tmp/ccJz23SP.s:3833   .text.dir_register:0000000000000000 $t
     /tmp/ccJz23SP.s:3839   .text.dir_register:0000000000000000 dir_register
     /tmp/ccJz23SP.s:3902   .text.dir_read:0000000000000000 $t
     /tmp/ccJz23SP.s:3908   .text.dir_read:0000000000000000 dir_read
     /tmp/ccJz23SP.s:4006   .text.sync_fs:0000000000000000 $t
     /tmp/ccJz23SP.s:4012   .text.sync_fs:0000000000000000 sync_fs
     /tmp/ccJz23SP.s:4108   .text.sync_fs:0000000000000084 $d
     /tmp/ccJz23SP.s:4114   .text.f_mount:0000000000000000 $t
     /tmp/ccJz23SP.s:4121   .text.f_mount:0000000000000000 f_mount
     /tmp/ccJz23SP.s:4219   .text.f_mount:000000000000005c $d
     /tmp/ccJz23SP.s:4224   .text.f_open:0000000000000000 $t
     /tmp/ccJz23SP.s:4231   .text.f_open:0000000000000000 f_open
     /tmp/ccJz23SP.s:4662   .text.f_read:0000000000000000 $t
     /tmp/ccJz23SP.s:4669   .text.f_read:0000000000000000 f_read
     /tmp/ccJz23SP.s:4976   .text.f_write:0000000000000000 $t
     /tmp/ccJz23SP.s:4983   .text.f_write:0000000000000000 f_write
     /tmp/ccJz23SP.s:5327   .text.putc_bfd:0000000000000000 $t
     /tmp/ccJz23SP.s:5333   .text.putc_bfd:0000000000000000 putc_bfd
     /tmp/ccJz23SP.s:5423   .text.putc_flush:0000000000000000 $t
     /tmp/ccJz23SP.s:5429   .text.putc_flush:0000000000000000 putc_flush
     /tmp/ccJz23SP.s:5499   .text.f_sync:0000000000000000 $t
     /tmp/ccJz23SP.s:5506   .text.f_sync:0000000000000000 f_sync
     /tmp/ccJz23SP.s:5638   .text.f_close:0000000000000000 $t
     /tmp/ccJz23SP.s:5645   .text.f_close:0000000000000000 f_close
     /tmp/ccJz23SP.s:5708   .text.f_lseek:0000000000000000 $t
     /tmp/ccJz23SP.s:5715   .text.f_lseek:0000000000000000 f_lseek
     /tmp/ccJz23SP.s:6244   .text.f_opendir:0000000000000000 $t
     /tmp/ccJz23SP.s:6251   .text.f_opendir:0000000000000000 f_opendir
     /tmp/ccJz23SP.s:6383   .text.f_closedir:0000000000000000 $t
     /tmp/ccJz23SP.s:6390   .text.f_closedir:0000000000000000 f_closedir
     /tmp/ccJz23SP.s:6448   .text.f_readdir:0000000000000000 $t
     /tmp/ccJz23SP.s:6455   .text.f_readdir:0000000000000000 f_readdir
ARM GAS  /tmp/ccJz23SP.s 			page 304


     /tmp/ccJz23SP.s:6544   .text.f_stat:0000000000000000 $t
     /tmp/ccJz23SP.s:6551   .text.f_stat:0000000000000000 f_stat
     /tmp/ccJz23SP.s:6627   .text.f_getfree:0000000000000000 $t
     /tmp/ccJz23SP.s:6634   .text.f_getfree:0000000000000000 f_getfree
     /tmp/ccJz23SP.s:6848   .text.f_truncate:0000000000000000 $t
     /tmp/ccJz23SP.s:6855   .text.f_truncate:0000000000000000 f_truncate
     /tmp/ccJz23SP.s:7011   .text.f_unlink:0000000000000000 $t
     /tmp/ccJz23SP.s:7018   .text.f_unlink:0000000000000000 f_unlink
     /tmp/ccJz23SP.s:7193   .text.f_mkdir:0000000000000000 $t
     /tmp/ccJz23SP.s:7200   .text.f_mkdir:0000000000000000 f_mkdir
     /tmp/ccJz23SP.s:7501   .text.f_rename:0000000000000000 $t
     /tmp/ccJz23SP.s:7508   .text.f_rename:0000000000000000 f_rename
     /tmp/ccJz23SP.s:7738   .text.f_mkfs:0000000000000000 $t
     /tmp/ccJz23SP.s:7745   .text.f_mkfs:0000000000000000 f_mkfs
     /tmp/ccJz23SP.s:8170   .text.f_mkfs:0000000000000270 $d
     /tmp/ccJz23SP.s:8175   .text.f_mkfs:0000000000000280 $t
     /tmp/ccJz23SP.s:8750   .text.f_mkfs:0000000000000620 $d
     /tmp/ccJz23SP.s:8759   .text.f_mkfs:0000000000000638 $t
     /tmp/ccJz23SP.s:8780   .text.f_gets:0000000000000000 $t
     /tmp/ccJz23SP.s:8787   .text.f_gets:0000000000000000 f_gets
     /tmp/ccJz23SP.s:8883   .text.f_putc:0000000000000000 $t
     /tmp/ccJz23SP.s:8890   .text.f_putc:0000000000000000 f_putc
     /tmp/ccJz23SP.s:8930   .text.f_puts:0000000000000000 $t
     /tmp/ccJz23SP.s:8937   .text.f_puts:0000000000000000 f_puts
     /tmp/ccJz23SP.s:8986   .text.f_printf:0000000000000000 $t
     /tmp/ccJz23SP.s:8993   .text.f_printf:0000000000000000 f_printf
     /tmp/ccJz23SP.s:9145   .text.f_printf:00000000000000a2 $d
     /tmp/ccJz23SP.s:9491   .bss.FatFs:0000000000000000 $d
     /tmp/ccJz23SP.s:9495   .bss.FatFs:0000000000000000 FatFs
     /tmp/ccJz23SP.s:9498   .bss.Files:0000000000000000 $d
     /tmp/ccJz23SP.s:9502   .bss.Files:0000000000000000 Files
     /tmp/ccJz23SP.s:9505   .bss.Fsid:0000000000000000 $d
     /tmp/ccJz23SP.s:9509   .bss.Fsid:0000000000000000 Fsid
     /tmp/ccJz23SP.s:9512   .rodata.ExCvt:0000000000000000 $d
     /tmp/ccJz23SP.s:9516   .rodata.ExCvt:0000000000000000 ExCvt
     /tmp/ccJz23SP.s:9646   .rodata.create_name.str1.4:0000000000000000 $d
     /tmp/ccJz23SP.s:9650   .rodata.cst.11911:0000000000000000 $d
     /tmp/ccJz23SP.s:9654   .rodata.cst.11911:0000000000000000 cst.11911
     /tmp/ccJz23SP.s:9663   .rodata.cst32.11912:0000000000000000 $d
     /tmp/ccJz23SP.s:9667   .rodata.cst32.11912:0000000000000000 cst32.11912
     /tmp/ccJz23SP.s:9676   .rodata.f_mkfs.str1.4:0000000000000000 $d
     /tmp/ccJz23SP.s:9169   .text.f_printf:00000000000000b9 $d
     /tmp/ccJz23SP.s:9169   .text.f_printf:00000000000000ba $t

UNDEFINED SYMBOLS
disk_status
disk_write
disk_read
disk_initialize
disk_ioctl
get_fattime
