ARM GAS  /tmp/ccF8hraL.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_pwr_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWREx_GetVoltageRange
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_PWREx_GetVoltageRange:
  26              	.LFB329:
  27              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @file    stm32g4xx_hal_pwr_ex.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *           + Extended Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *           + Extended Peripheral Control functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   ******************************************************************************
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @attention
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * All rights reserved.</center></h2>
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * the "License"; You may not use this file except in compliance with the
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * License. You may obtain a copy of the License at:
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   ******************************************************************************
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #include "stm32g4xx_hal.h"
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @addtogroup STM32G4xx_HAL_Driver
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccF8hraL.s 			page 2


  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR Extended HAL module driver
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined (STM32G471xx) || defined (STM32G473xx) || defined (STM32G474xx) || defined (STM32G483xx
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTF_AVAILABLE_PINS   0x0000FFFFU /* PF0..PF15 */
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTG_AVAILABLE_PINS   0x000007FFU /* PG0..PG10 */
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #elif defined (STM32G431xx) || defined (STM32G441xx) || defined (STM32GBK1CB) || defined (STM32G491
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTF_AVAILABLE_PINS   0x00000607U /* PF0..PF2 and PF9 and PF10 */
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTG_AVAILABLE_PINS   0x00000400U /* PG10 */
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWR_Extended_Private_Defines PWR Extended Private Defines
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_PVM_Mode_Mask PWR PVM Mode Mask
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_MODE_IT               0x00010000U    /*!< Mask for interruption yielded by PVM threshol
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_MODE_EVT              0x00020000U    /*!< Mask for event yielded by PVM threshold cross
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_RISING_EDGE           0x00000001U    /*!< Mask for rising edge set as PVM trigger      
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_FALLING_EDGE          0x00000002U    /*!< Mask for falling edge set as PVM trigger     
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @}
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_TimeOut_Value PWR Extended Flag Setting Time Out Value
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_FLAG_SETTING_DELAY_US                      50UL   /*!< Time out value for REGLPF and VO
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @}
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @}
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Exported functions --------------------------------------------------------*/
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWR Extended Exported Functions
  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
ARM GAS  /tmp/ccF8hraL.s 			page 3


  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Extended Peripheral Control functions
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *  @brief   Extended Peripheral Control functions
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** @verbatim
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****  ===============================================================================
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****               ##### Extended Peripheral Initialization and de-initialization functions #####
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****  ===============================================================================
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     [..]
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** @endverbatim
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Return Voltage Scaling Range.
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1 or PWR_REGULATOR_VOLTAGE_SCALE2
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         or PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when applicable)
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
  28              		.loc 1 111 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
  33              		.loc 1 112 0
  34 0000 0A4B     		ldr	r3, .L6
  35 0002 1B68     		ldr	r3, [r3]
  36 0004 03F4C063 		and	r3, r3, #1536
  37 0008 B3F5806F 		cmp	r3, #1024
  38 000c 0AD0     		beq	.L3
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return PWR_REGULATOR_VOLTAGE_SCALE2;
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else if (READ_BIT(PWR->CR5, PWR_CR5_R1MODE) == PWR_CR5_R1MODE)
  39              		.loc 1 116 0
  40 000e 074B     		ldr	r3, .L6
  41 0010 D3F88030 		ldr	r3, [r3, #128]
  42 0014 13F4807F 		tst	r3, #256
  43 0018 01D1     		bne	.L5
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR_CR5_R1MODE bit set means that Range 1 Boost is disabled */
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return PWR_REGULATOR_VOLTAGE_SCALE1;
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
  44              		.loc 1 123 0
  45 001a 0020     		movs	r0, #0
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
  46              		.loc 1 125 0
  47 001c 7047     		bx	lr
ARM GAS  /tmp/ccF8hraL.s 			page 4


  48              	.L5:
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
  49              		.loc 1 119 0
  50 001e 4FF40070 		mov	r0, #512
  51 0022 7047     		bx	lr
  52              	.L3:
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
  53              		.loc 1 114 0
  54 0024 4FF48060 		mov	r0, #1024
  55 0028 7047     		bx	lr
  56              	.L7:
  57 002a 00BF     		.align	2
  58              	.L6:
  59 002c 00700040 		.word	1073770496
  60              		.cfi_endproc
  61              	.LFE329:
  63              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
  64              		.align	1
  65              		.global	HAL_PWREx_ControlVoltageScaling
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	HAL_PWREx_ControlVoltageScaling:
  72              	.LFB330:
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage.
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  VoltageScaling: specifies the regulator output voltage to achieve
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when available, Regulator voltage outpu
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.28 V,
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                system frequency up to 170 MHz.
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1 Regulator voltage output range 1 mode,
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                system frequency up to 150 MHz.
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE2 Regulator voltage output range 2 mode,
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.0 V,
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                system frequency up to 26 MHz.
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When moving from Range 1 to Range 2, the system frequency must be decreased to
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        a value below 26 MHz before calling HAL_PWREx_ControlVoltageScaling() API.
 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        When moving from Range 2 to Range 1, the system frequency can be increased to
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        a value up to 150 MHz after calling HAL_PWREx_ControlVoltageScaling() API.
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        When moving from Range 1 to Boost Mode Range 1, the system frequency can be increased to
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        a value up to 170 MHz after calling HAL_PWREx_ControlVoltageScaling() API.
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When moving from Range 2 to Range 1, the API waits for VOSF flag to be
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        cleared before returning the status. If the flag is not cleared within
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        50 microseconds, HAL_TIMEOUT status is reported.
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
  73              		.loc 1 155 0
  74              		.cfi_startproc
ARM GAS  /tmp/ccF8hraL.s 			page 5


  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.LVL0:
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1_BOOST)
  79              		.loc 1 160 0
  80 0000 0028     		cmp	r0, #0
  81 0002 38D1     		bne	.L9
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
  82              		.loc 1 163 0
  83 0004 3E4B     		ldr	r3, .L27
  84 0006 1B68     		ldr	r3, [r3]
  85 0008 03F4C063 		and	r3, r3, #1536
  86 000c B3F5806F 		cmp	r3, #1024
  87 0010 08D0     		beq	.L22
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is enabled */
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         wait_loop_index--;
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* If current range is range 1 normal or boost mode */
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     else
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Enable Range 1 Boost (no issue if bit already reset) */
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
  88              		.loc 1 186 0
  89 0012 3B4A     		ldr	r2, .L27
  90 0014 D2F88030 		ldr	r3, [r2, #128]
  91 0018 23F48073 		bic	r3, r3, #256
  92 001c C2F88030 		str	r3, [r2, #128]
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is disabled */
ARM GAS  /tmp/ccF8hraL.s 			page 6


 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         wait_loop_index--;
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      /* If current range is range 1 normal or boost mode */
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     else
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Disable Range 1 Boost (no issue if bit already set) */
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Set Range 2 */
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* No need to wait for VOSF to be cleared for this transition */
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR_CR5_R1MODE bit setting has no effect in Range 2        */
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return HAL_OK;
  93              		.loc 1 226 0
  94 0020 0020     		movs	r0, #0
  95              	.LVL1:
  96 0022 7047     		bx	lr
  97              	.LVL2:
  98              	.L22:
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  99              		.loc 1 166 0
 100 0024 364A     		ldr	r2, .L27
 101 0026 D2F88030 		ldr	r3, [r2, #128]
 102 002a 23F48073 		bic	r3, r3, #256
 103 002e C2F88030 		str	r3, [r2, #128]
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 104              		.loc 1 169 0
 105 0032 1368     		ldr	r3, [r2]
 106 0034 23F4C063 		bic	r3, r3, #1536
 107 0038 43F40073 		orr	r3, r3, #512
 108 003c 1360     		str	r3, [r2]
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 109              		.loc 1 172 0
 110 003e 314B     		ldr	r3, .L27+4
 111 0040 1A68     		ldr	r2, [r3]
 112 0042 3223     		movs	r3, #50
 113 0044 03FB02F3 		mul	r3, r3, r2
 114 0048 2F4A     		ldr	r2, .L27+8
ARM GAS  /tmp/ccF8hraL.s 			page 7


 115 004a A2FB0323 		umull	r2, r3, r2, r3
 116 004e 9B0C     		lsrs	r3, r3, #18
 117 0050 0133     		adds	r3, r3, #1
 118              	.LVL3:
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 119              		.loc 1 173 0
 120 0052 00E0     		b	.L11
 121              	.L13:
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 122              		.loc 1 175 0
 123 0054 013B     		subs	r3, r3, #1
 124              	.LVL4:
 125              	.L11:
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 126              		.loc 1 173 0
 127 0056 2A4A     		ldr	r2, .L27
 128 0058 5269     		ldr	r2, [r2, #20]
 129 005a 12F4806F 		tst	r2, #1024
 130 005e 01D0     		beq	.L12
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 131              		.loc 1 173 0 is_stmt 0 discriminator 1
 132 0060 002B     		cmp	r3, #0
 133 0062 F7D1     		bne	.L13
 134              	.L12:
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 135              		.loc 1 177 0 is_stmt 1
 136 0064 264B     		ldr	r3, .L27
 137              	.LVL5:
 138 0066 5B69     		ldr	r3, [r3, #20]
 139 0068 13F4806F 		tst	r3, #1024
 140 006c 01D1     		bne	.L23
 141              		.loc 1 226 0
 142 006e 0020     		movs	r0, #0
 143              	.LVL6:
 144 0070 7047     		bx	lr
 145              	.LVL7:
 146              	.L23:
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 147              		.loc 1 179 0
 148 0072 0320     		movs	r0, #3
 149              	.LVL8:
 150 0074 7047     		bx	lr
 151              	.LVL9:
 152              	.L9:
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 153              		.loc 1 189 0
 154 0076 B0F5007F 		cmp	r0, #512
 155 007a 08D0     		beq	.L24
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* No need to wait for VOSF to be cleared for this transition */
 156              		.loc 1 221 0
 157 007c 204A     		ldr	r2, .L27
 158 007e 1368     		ldr	r3, [r2]
 159 0080 23F4C063 		bic	r3, r3, #1536
 160 0084 43F48063 		orr	r3, r3, #1024
 161 0088 1360     		str	r3, [r2]
 162              		.loc 1 226 0
 163 008a 0020     		movs	r0, #0
ARM GAS  /tmp/ccF8hraL.s 			page 8


 164              	.LVL10:
 165 008c 7047     		bx	lr
 166              	.LVL11:
 167              	.L24:
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 168              		.loc 1 192 0
 169 008e 1C4B     		ldr	r3, .L27
 170 0090 1B68     		ldr	r3, [r3]
 171 0092 03F4C063 		and	r3, r3, #1536
 172 0096 B3F5806F 		cmp	r3, #1024
 173 009a 08D0     		beq	.L25
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 174              		.loc 1 215 0
 175 009c 184A     		ldr	r2, .L27
 176 009e D2F88030 		ldr	r3, [r2, #128]
 177 00a2 43F48073 		orr	r3, r3, #256
 178 00a6 C2F88030 		str	r3, [r2, #128]
 179              		.loc 1 226 0
 180 00aa 0020     		movs	r0, #0
 181              	.LVL12:
 182 00ac 7047     		bx	lr
 183              	.LVL13:
 184              	.L25:
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 185              		.loc 1 195 0
 186 00ae 144A     		ldr	r2, .L27
 187 00b0 D2F88030 		ldr	r3, [r2, #128]
 188 00b4 43F48073 		orr	r3, r3, #256
 189 00b8 C2F88030 		str	r3, [r2, #128]
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 190              		.loc 1 198 0
 191 00bc 1368     		ldr	r3, [r2]
 192 00be 23F4C063 		bic	r3, r3, #1536
 193 00c2 43F40073 		orr	r3, r3, #512
 194 00c6 1360     		str	r3, [r2]
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 195              		.loc 1 201 0
 196 00c8 0E4B     		ldr	r3, .L27+4
 197 00ca 1A68     		ldr	r2, [r3]
 198 00cc 3223     		movs	r3, #50
 199 00ce 03FB02F3 		mul	r3, r3, r2
 200 00d2 0D4A     		ldr	r2, .L27+8
 201 00d4 A2FB0323 		umull	r2, r3, r2, r3
 202 00d8 9B0C     		lsrs	r3, r3, #18
 203 00da 0133     		adds	r3, r3, #1
 204              	.LVL14:
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 205              		.loc 1 202 0
 206 00dc 00E0     		b	.L17
 207              	.L19:
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 208              		.loc 1 204 0
 209 00de 013B     		subs	r3, r3, #1
 210              	.LVL15:
 211              	.L17:
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 212              		.loc 1 202 0
ARM GAS  /tmp/ccF8hraL.s 			page 9


 213 00e0 074A     		ldr	r2, .L27
 214 00e2 5269     		ldr	r2, [r2, #20]
 215 00e4 12F4806F 		tst	r2, #1024
 216 00e8 01D0     		beq	.L18
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 217              		.loc 1 202 0 is_stmt 0 discriminator 1
 218 00ea 002B     		cmp	r3, #0
 219 00ec F7D1     		bne	.L19
 220              	.L18:
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 221              		.loc 1 206 0 is_stmt 1
 222 00ee 044B     		ldr	r3, .L27
 223              	.LVL16:
 224 00f0 5B69     		ldr	r3, [r3, #20]
 225 00f2 13F4806F 		tst	r3, #1024
 226 00f6 01D1     		bne	.L26
 227              		.loc 1 226 0
 228 00f8 0020     		movs	r0, #0
 229              	.LVL17:
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 230              		.loc 1 227 0
 231 00fa 7047     		bx	lr
 232              	.LVL18:
 233              	.L26:
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 234              		.loc 1 208 0
 235 00fc 0320     		movs	r0, #3
 236              	.LVL19:
 237 00fe 7047     		bx	lr
 238              	.L28:
 239              		.align	2
 240              	.L27:
 241 0100 00700040 		.word	1073770496
 242 0104 00000000 		.word	SystemCoreClock
 243 0108 83DE1B43 		.word	1125899907
 244              		.cfi_endproc
 245              	.LFE330:
 247              		.section	.text.HAL_PWREx_EnableBatteryCharging,"ax",%progbits
 248              		.align	1
 249              		.global	HAL_PWREx_EnableBatteryCharging
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	HAL_PWREx_EnableBatteryCharging:
 256              	.LFB331:
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable battery charging.
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        When VDD is present, charge the external battery on VBAT through an internal resistor.
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  ResistorSelection: specifies the resistor impedance.
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_5     5 kOhms resistor
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_1_5 1.5 kOhms resistor
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
ARM GAS  /tmp/ccF8hraL.s 			page 10


 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBatteryCharging(uint32_t ResistorSelection)
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 257              		.loc 1 240 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262              	.LVL20:
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_BATTERY_RESISTOR_SELECT(ResistorSelection));
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Specify resistor selection */
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR4, PWR_CR4_VBRS, ResistorSelection);
 263              		.loc 1 244 0
 264 0000 054A     		ldr	r2, .L30
 265 0002 D368     		ldr	r3, [r2, #12]
 266 0004 23F40073 		bic	r3, r3, #512
 267 0008 1843     		orrs	r0, r0, r3
 268              	.LVL21:
 269 000a D060     		str	r0, [r2, #12]
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Enable battery charging */
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_VBE);
 270              		.loc 1 247 0
 271 000c D368     		ldr	r3, [r2, #12]
 272 000e 43F48073 		orr	r3, r3, #256
 273 0012 D360     		str	r3, [r2, #12]
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 274              		.loc 1 248 0
 275 0014 7047     		bx	lr
 276              	.L31:
 277 0016 00BF     		.align	2
 278              	.L30:
 279 0018 00700040 		.word	1073770496
 280              		.cfi_endproc
 281              	.LFE331:
 283              		.section	.text.HAL_PWREx_DisableBatteryCharging,"ax",%progbits
 284              		.align	1
 285              		.global	HAL_PWREx_DisableBatteryCharging
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	HAL_PWREx_DisableBatteryCharging:
 292              	.LFB332:
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable battery charging.
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBatteryCharging(void)
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 293              		.loc 1 256 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
ARM GAS  /tmp/ccF8hraL.s 			page 11


 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_VBE);
 298              		.loc 1 257 0
 299 0000 024A     		ldr	r2, .L33
 300 0002 D368     		ldr	r3, [r2, #12]
 301 0004 23F48073 		bic	r3, r3, #256
 302 0008 D360     		str	r3, [r2, #12]
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 303              		.loc 1 258 0
 304 000a 7047     		bx	lr
 305              	.L34:
 306              		.align	2
 307              	.L33:
 308 000c 00700040 		.word	1073770496
 309              		.cfi_endproc
 310              	.LFE332:
 312              		.section	.text.HAL_PWREx_EnableInternalWakeUpLine,"ax",%progbits
 313              		.align	1
 314              		.global	HAL_PWREx_EnableInternalWakeUpLine
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	HAL_PWREx_EnableInternalWakeUpLine:
 321              	.LFB333:
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable Internal Wake-up Line.
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableInternalWakeUpLine(void)
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 322              		.loc 1 266 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EIWF);
 327              		.loc 1 267 0
 328 0000 024A     		ldr	r2, .L36
 329 0002 9368     		ldr	r3, [r2, #8]
 330 0004 43F40043 		orr	r3, r3, #32768
 331 0008 9360     		str	r3, [r2, #8]
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 332              		.loc 1 268 0
 333 000a 7047     		bx	lr
 334              	.L37:
 335              		.align	2
 336              	.L36:
 337 000c 00700040 		.word	1073770496
 338              		.cfi_endproc
 339              	.LFE333:
 341              		.section	.text.HAL_PWREx_DisableInternalWakeUpLine,"ax",%progbits
 342              		.align	1
 343              		.global	HAL_PWREx_DisableInternalWakeUpLine
 344              		.syntax unified
 345              		.thumb
ARM GAS  /tmp/ccF8hraL.s 			page 12


 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	HAL_PWREx_DisableInternalWakeUpLine:
 350              	.LFB334:
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable Internal Wake-up Line.
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableInternalWakeUpLine(void)
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 351              		.loc 1 276 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWF);
 356              		.loc 1 277 0
 357 0000 024A     		ldr	r2, .L39
 358 0002 9368     		ldr	r3, [r2, #8]
 359 0004 23F40043 		bic	r3, r3, #32768
 360 0008 9360     		str	r3, [r2, #8]
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 361              		.loc 1 278 0
 362 000a 7047     		bx	lr
 363              	.L40:
 364              		.align	2
 365              	.L39:
 366 000c 00700040 		.word	1073770496
 367              		.cfi_endproc
 368              	.LFE334:
 370              		.section	.text.HAL_PWREx_EnableGPIOPullUp,"ax",%progbits
 371              		.align	1
 372              		.global	HAL_PWREx_EnableGPIOPullUp
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	HAL_PWREx_EnableGPIOPullUp:
 379              	.LFB335:
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-up state in Standby and Shutdown modes.
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Set the relevant PUy bits of PWR_PUCRx register to configure the I/O in
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        pull-up state in Standby and Shutdown modes.
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is cleared unless it is reserved.
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to set is reserved, the other PUy bits entered as input
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_G
ARM GAS  /tmp/ccF8hraL.s 			page 13


 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 380              		.loc 1 304 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385              	.LVL22:
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 386              		.loc 1 310 0
 387 0000 0628     		cmp	r0, #6
 388 0002 56D8     		bhi	.L51
 389 0004 DFE800F0 		tbb	[pc, r0]
 390              	.L44:
 391 0008 04       		.byte	(.L43-.L44)/2
 392 0009 12       		.byte	(.L45-.L44)/2
 393 000a 1E       		.byte	(.L46-.L44)/2
 394 000b 28       		.byte	(.L47-.L44)/2
 395 000c 32       		.byte	(.L48-.L44)/2
 396 000d 3C       		.byte	(.L49-.L44)/2
 397 000e 47       		.byte	(.L50-.L44)/2
 398 000f 00       		.p2align 1
 399              	.L43:
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 400              		.loc 1 313 0
 401 0010 294B     		ldr	r3, .L52
 402 0012 1A6A     		ldr	r2, [r3, #32]
 403 0014 21F48040 		bic	r0, r1, #16384
 404              	.LVL23:
 405 0018 0243     		orrs	r2, r2, r0
 406 001a 1A62     		str	r2, [r3, #32]
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 407              		.loc 1 314 0
 408 001c 5A6A     		ldr	r2, [r3, #36]
 409 001e 21F42041 		bic	r1, r1, #40960
 410              	.LVL24:
 411 0022 22EA0101 		bic	r1, r2, r1
 412 0026 5962     		str	r1, [r3, #36]
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 413              		.loc 1 305 0
 414 0028 0020     		movs	r0, #0
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
ARM GAS  /tmp/ccF8hraL.s 			page 14


 415              		.loc 1 315 0
 416 002a 7047     		bx	lr
 417              	.LVL25:
 418              	.L45:
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRB, GPIONumber);
 419              		.loc 1 317 0
 420 002c 224B     		ldr	r3, .L52
 421 002e 9A6A     		ldr	r2, [r3, #40]
 422 0030 0A43     		orrs	r2, r2, r1
 423 0032 9A62     		str	r2, [r3, #40]
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 424              		.loc 1 318 0
 425 0034 DA6A     		ldr	r2, [r3, #44]
 426 0036 21F01001 		bic	r1, r1, #16
 427              	.LVL26:
 428 003a 22EA0101 		bic	r1, r2, r1
 429 003e D962     		str	r1, [r3, #44]
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 430              		.loc 1 305 0
 431 0040 0020     		movs	r0, #0
 432              	.LVL27:
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 433              		.loc 1 319 0
 434 0042 7047     		bx	lr
 435              	.LVL28:
 436              	.L46:
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRC, GPIONumber);
 437              		.loc 1 321 0
 438 0044 1C4B     		ldr	r3, .L52
 439 0046 1A6B     		ldr	r2, [r3, #48]
 440 0048 0A43     		orrs	r2, r2, r1
 441 004a 1A63     		str	r2, [r3, #48]
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 442              		.loc 1 322 0
 443 004c 5A6B     		ldr	r2, [r3, #52]
 444 004e 22EA0101 		bic	r1, r2, r1
 445              	.LVL29:
 446 0052 5963     		str	r1, [r3, #52]
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 447              		.loc 1 305 0
 448 0054 0020     		movs	r0, #0
 449              	.LVL30:
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 450              		.loc 1 323 0
 451 0056 7047     		bx	lr
 452              	.LVL31:
 453              	.L47:
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRD, GPIONumber);
 454              		.loc 1 325 0
 455 0058 174B     		ldr	r3, .L52
 456 005a 9A6B     		ldr	r2, [r3, #56]
 457 005c 0A43     		orrs	r2, r2, r1
 458 005e 9A63     		str	r2, [r3, #56]
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
ARM GAS  /tmp/ccF8hraL.s 			page 15


 459              		.loc 1 326 0
 460 0060 DA6B     		ldr	r2, [r3, #60]
 461 0062 22EA0101 		bic	r1, r2, r1
 462              	.LVL32:
 463 0066 D963     		str	r1, [r3, #60]
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 464              		.loc 1 305 0
 465 0068 0020     		movs	r0, #0
 466              	.LVL33:
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 467              		.loc 1 327 0
 468 006a 7047     		bx	lr
 469              	.LVL34:
 470              	.L48:
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRE, GPIONumber);
 471              		.loc 1 329 0
 472 006c 124B     		ldr	r3, .L52
 473 006e 1A6C     		ldr	r2, [r3, #64]
 474 0070 0A43     		orrs	r2, r2, r1
 475 0072 1A64     		str	r2, [r3, #64]
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 476              		.loc 1 330 0
 477 0074 5A6C     		ldr	r2, [r3, #68]
 478 0076 22EA0101 		bic	r1, r2, r1
 479              	.LVL35:
 480 007a 5964     		str	r1, [r3, #68]
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 481              		.loc 1 305 0
 482 007c 0020     		movs	r0, #0
 483              	.LVL36:
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 484              		.loc 1 331 0
 485 007e 7047     		bx	lr
 486              	.LVL37:
 487              	.L49:
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 488              		.loc 1 333 0
 489 0080 0D4B     		ldr	r3, .L52
 490 0082 9A6C     		ldr	r2, [r3, #72]
 491 0084 89B2     		uxth	r1, r1
 492              	.LVL38:
 493 0086 0A43     		orrs	r2, r2, r1
 494 0088 9A64     		str	r2, [r3, #72]
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 495              		.loc 1 334 0
 496 008a DA6C     		ldr	r2, [r3, #76]
 497 008c 22EA0101 		bic	r1, r2, r1
 498 0090 D964     		str	r1, [r3, #76]
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 499              		.loc 1 305 0
 500 0092 0020     		movs	r0, #0
 501              	.LVL39:
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 502              		.loc 1 335 0
 503 0094 7047     		bx	lr
ARM GAS  /tmp/ccF8hraL.s 			page 16


 504              	.LVL40:
 505              	.L50:
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRG, (GPIONumber & PWR_PORTG_AVAILABLE_PINS));
 506              		.loc 1 337 0
 507 0096 084B     		ldr	r3, .L52
 508 0098 1A6D     		ldr	r2, [r3, #80]
 509 009a C1F30A00 		ubfx	r0, r1, #0, #11
 510              	.LVL41:
 511 009e 0243     		orrs	r2, r2, r0
 512 00a0 1A65     		str	r2, [r3, #80]
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, ((GPIONumber & PWR_PORTG_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_10))));
 513              		.loc 1 338 0
 514 00a2 5A6D     		ldr	r2, [r3, #84]
 515 00a4 C1F30901 		ubfx	r1, r1, #0, #10
 516              	.LVL42:
 517 00a8 22EA0101 		bic	r1, r2, r1
 518 00ac 5965     		str	r1, [r3, #84]
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 519              		.loc 1 305 0
 520 00ae 0020     		movs	r0, #0
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 521              		.loc 1 339 0
 522 00b0 7047     		bx	lr
 523              	.LVL43:
 524              	.L51:
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 525              		.loc 1 341 0
 526 00b2 0120     		movs	r0, #1
 527              	.LVL44:
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 528              		.loc 1 346 0
 529 00b4 7047     		bx	lr
 530              	.L53:
 531 00b6 00BF     		.align	2
 532              	.L52:
 533 00b8 00700040 		.word	1073770496
 534              		.cfi_endproc
 535              	.LFE335:
 537              		.section	.text.HAL_PWREx_DisableGPIOPullUp,"ax",%progbits
 538              		.align	1
 539              		.global	HAL_PWREx_DisableGPIOPullUp
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu fpv4-sp-d16
 545              	HAL_PWREx_DisableGPIOPullUp:
 546              	.LFB336:
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-up state in Standby mode and Shutdown modes.
ARM GAS  /tmp/ccF8hraL.s 			page 17


 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PUy bits of PWR_PUCRx register used to configure the I/O
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        in pull-up state in Standby and Shutdown modes.
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to reset is reserved, the other PUy bits entered as input
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_G
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 547              		.loc 1 365 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552              	.LVL45:
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 553              		.loc 1 371 0
 554 0000 0628     		cmp	r0, #6
 555 0002 3BD8     		bhi	.L64
 556 0004 DFE800F0 		tbb	[pc, r0]
 557              	.L57:
 558 0008 04       		.byte	(.L56-.L57)/2
 559 0009 0D       		.byte	(.L58-.L57)/2
 560 000a 14       		.byte	(.L59-.L57)/2
 561 000b 1B       		.byte	(.L60-.L57)/2
 562 000c 22       		.byte	(.L61-.L57)/2
 563 000d 29       		.byte	(.L62-.L57)/2
 564 000e 31       		.byte	(.L63-.L57)/2
 565 000f 00       		.p2align 1
 566              	.L56:
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 567              		.loc 1 374 0
 568 0010 1B4A     		ldr	r2, .L65
 569 0012 136A     		ldr	r3, [r2, #32]
 570 0014 21F48041 		bic	r1, r1, #16384
 571              	.LVL46:
 572 0018 23EA0101 		bic	r1, r3, r1
 573 001c 1162     		str	r1, [r2, #32]
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 574              		.loc 1 366 0
 575 001e 0020     		movs	r0, #0
 576              	.LVL47:
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 577              		.loc 1 375 0
ARM GAS  /tmp/ccF8hraL.s 			page 18


 578 0020 7047     		bx	lr
 579              	.LVL48:
 580              	.L58:
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 581              		.loc 1 377 0
 582 0022 174A     		ldr	r2, .L65
 583 0024 936A     		ldr	r3, [r2, #40]
 584 0026 23EA0101 		bic	r1, r3, r1
 585              	.LVL49:
 586 002a 9162     		str	r1, [r2, #40]
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 587              		.loc 1 366 0
 588 002c 0020     		movs	r0, #0
 589              	.LVL50:
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 590              		.loc 1 378 0
 591 002e 7047     		bx	lr
 592              	.LVL51:
 593              	.L59:
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 594              		.loc 1 380 0
 595 0030 134A     		ldr	r2, .L65
 596 0032 136B     		ldr	r3, [r2, #48]
 597 0034 23EA0101 		bic	r1, r3, r1
 598              	.LVL52:
 599 0038 1163     		str	r1, [r2, #48]
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 600              		.loc 1 366 0
 601 003a 0020     		movs	r0, #0
 602              	.LVL53:
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 603              		.loc 1 381 0
 604 003c 7047     		bx	lr
 605              	.LVL54:
 606              	.L60:
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 607              		.loc 1 383 0
 608 003e 104A     		ldr	r2, .L65
 609 0040 936B     		ldr	r3, [r2, #56]
 610 0042 23EA0101 		bic	r1, r3, r1
 611              	.LVL55:
 612 0046 9163     		str	r1, [r2, #56]
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 613              		.loc 1 366 0
 614 0048 0020     		movs	r0, #0
 615              	.LVL56:
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 616              		.loc 1 384 0
 617 004a 7047     		bx	lr
 618              	.LVL57:
 619              	.L61:
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 620              		.loc 1 386 0
ARM GAS  /tmp/ccF8hraL.s 			page 19


 621 004c 0C4A     		ldr	r2, .L65
 622 004e 136C     		ldr	r3, [r2, #64]
 623 0050 23EA0101 		bic	r1, r3, r1
 624              	.LVL58:
 625 0054 1164     		str	r1, [r2, #64]
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 626              		.loc 1 366 0
 627 0056 0020     		movs	r0, #0
 628              	.LVL59:
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 629              		.loc 1 387 0
 630 0058 7047     		bx	lr
 631              	.LVL60:
 632              	.L62:
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 633              		.loc 1 389 0
 634 005a 094A     		ldr	r2, .L65
 635 005c 936C     		ldr	r3, [r2, #72]
 636 005e 89B2     		uxth	r1, r1
 637              	.LVL61:
 638 0060 23EA0101 		bic	r1, r3, r1
 639 0064 9164     		str	r1, [r2, #72]
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 640              		.loc 1 366 0
 641 0066 0020     		movs	r0, #0
 642              	.LVL62:
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 643              		.loc 1 390 0
 644 0068 7047     		bx	lr
 645              	.LVL63:
 646              	.L63:
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, (GPIONumber & PWR_PORTG_AVAILABLE_PINS));
 647              		.loc 1 392 0
 648 006a 054A     		ldr	r2, .L65
 649 006c 136D     		ldr	r3, [r2, #80]
 650 006e C1F30A01 		ubfx	r1, r1, #0, #11
 651              	.LVL64:
 652 0072 23EA0101 		bic	r1, r3, r1
 653 0076 1165     		str	r1, [r2, #80]
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 654              		.loc 1 366 0
 655 0078 0020     		movs	r0, #0
 656              	.LVL65:
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 657              		.loc 1 393 0
 658 007a 7047     		bx	lr
 659              	.LVL66:
 660              	.L64:
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        status = HAL_ERROR;
 661              		.loc 1 395 0
 662 007c 0120     		movs	r0, #1
 663              	.LVL67:
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
ARM GAS  /tmp/ccF8hraL.s 			page 20


 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 664              		.loc 1 400 0
 665 007e 7047     		bx	lr
 666              	.L66:
 667              		.align	2
 668              	.L65:
 669 0080 00700040 		.word	1073770496
 670              		.cfi_endproc
 671              	.LFE336:
 673              		.section	.text.HAL_PWREx_EnableGPIOPullDown,"ax",%progbits
 674              		.align	1
 675              		.global	HAL_PWREx_EnableGPIOPullDown
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.fpu fpv4-sp-d16
 681              	HAL_PWREx_EnableGPIOPullDown:
 682              	.LFB337:
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-down state in Standby and Shutdown modes.
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Set the relevant PDy bits of PWR_PDCRx register to configure the I/O in
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        pull-down state in Standby and Shutdown modes.
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PUy bit of PWR_PUCRx register is cleared unless it is reserved.
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to set is reserved, the other PDy bits entered as input
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_G
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 683              		.loc 1 426 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688              	.LVL68:
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccF8hraL.s 			page 21


 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 689              		.loc 1 432 0
 690 0000 0628     		cmp	r0, #6
 691 0002 56D8     		bhi	.L77
 692 0004 DFE800F0 		tbb	[pc, r0]
 693              	.L70:
 694 0008 04       		.byte	(.L69-.L70)/2
 695 0009 12       		.byte	(.L71-.L70)/2
 696 000a 1E       		.byte	(.L72-.L70)/2
 697 000b 28       		.byte	(.L73-.L70)/2
 698 000c 32       		.byte	(.L74-.L70)/2
 699 000d 3C       		.byte	(.L75-.L70)/2
 700 000e 47       		.byte	(.L76-.L70)/2
 701 000f 00       		.p2align 1
 702              	.L69:
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 703              		.loc 1 435 0
 704 0010 294B     		ldr	r3, .L78
 705 0012 5A6A     		ldr	r2, [r3, #36]
 706 0014 21F42040 		bic	r0, r1, #40960
 707              	.LVL69:
 708 0018 0243     		orrs	r2, r2, r0
 709 001a 5A62     		str	r2, [r3, #36]
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 710              		.loc 1 436 0
 711 001c 1A6A     		ldr	r2, [r3, #32]
 712 001e 21F48041 		bic	r1, r1, #16384
 713              	.LVL70:
 714 0022 22EA0101 		bic	r1, r2, r1
 715 0026 1962     		str	r1, [r3, #32]
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 716              		.loc 1 427 0
 717 0028 0020     		movs	r0, #0
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 718              		.loc 1 437 0
 719 002a 7047     		bx	lr
 720              	.LVL71:
 721              	.L71:
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 722              		.loc 1 439 0
 723 002c 224B     		ldr	r3, .L78
 724 002e DA6A     		ldr	r2, [r3, #44]
 725 0030 21F01000 		bic	r0, r1, #16
 726              	.LVL72:
 727 0034 0243     		orrs	r2, r2, r0
 728 0036 DA62     		str	r2, [r3, #44]
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 729              		.loc 1 440 0
 730 0038 9A6A     		ldr	r2, [r3, #40]
 731 003a 22EA0101 		bic	r1, r2, r1
 732              	.LVL73:
 733 003e 9962     		str	r1, [r3, #40]
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 734              		.loc 1 427 0
ARM GAS  /tmp/ccF8hraL.s 			page 22


 735 0040 0020     		movs	r0, #0
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 736              		.loc 1 441 0
 737 0042 7047     		bx	lr
 738              	.LVL74:
 739              	.L72:
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRC, GPIONumber);
 740              		.loc 1 443 0
 741 0044 1C4B     		ldr	r3, .L78
 742 0046 5A6B     		ldr	r2, [r3, #52]
 743 0048 0A43     		orrs	r2, r2, r1
 744 004a 5A63     		str	r2, [r3, #52]
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 745              		.loc 1 444 0
 746 004c 1A6B     		ldr	r2, [r3, #48]
 747 004e 22EA0101 		bic	r1, r2, r1
 748              	.LVL75:
 749 0052 1963     		str	r1, [r3, #48]
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 750              		.loc 1 427 0
 751 0054 0020     		movs	r0, #0
 752              	.LVL76:
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 753              		.loc 1 445 0
 754 0056 7047     		bx	lr
 755              	.LVL77:
 756              	.L73:
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRD, GPIONumber);
 757              		.loc 1 447 0
 758 0058 174B     		ldr	r3, .L78
 759 005a DA6B     		ldr	r2, [r3, #60]
 760 005c 0A43     		orrs	r2, r2, r1
 761 005e DA63     		str	r2, [r3, #60]
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 762              		.loc 1 448 0
 763 0060 9A6B     		ldr	r2, [r3, #56]
 764 0062 22EA0101 		bic	r1, r2, r1
 765              	.LVL78:
 766 0066 9963     		str	r1, [r3, #56]
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 767              		.loc 1 427 0
 768 0068 0020     		movs	r0, #0
 769              	.LVL79:
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 770              		.loc 1 449 0
 771 006a 7047     		bx	lr
 772              	.LVL80:
 773              	.L74:
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRE, GPIONumber);
 774              		.loc 1 451 0
 775 006c 124B     		ldr	r3, .L78
 776 006e 5A6C     		ldr	r2, [r3, #68]
 777 0070 0A43     		orrs	r2, r2, r1
 778 0072 5A64     		str	r2, [r3, #68]
ARM GAS  /tmp/ccF8hraL.s 			page 23


 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 779              		.loc 1 452 0
 780 0074 1A6C     		ldr	r2, [r3, #64]
 781 0076 22EA0101 		bic	r1, r2, r1
 782              	.LVL81:
 783 007a 1964     		str	r1, [r3, #64]
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 784              		.loc 1 427 0
 785 007c 0020     		movs	r0, #0
 786              	.LVL82:
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 787              		.loc 1 453 0
 788 007e 7047     		bx	lr
 789              	.LVL83:
 790              	.L75:
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 791              		.loc 1 455 0
 792 0080 0D4B     		ldr	r3, .L78
 793 0082 DA6C     		ldr	r2, [r3, #76]
 794 0084 89B2     		uxth	r1, r1
 795              	.LVL84:
 796 0086 0A43     		orrs	r2, r2, r1
 797 0088 DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 798              		.loc 1 456 0
 799 008a 9A6C     		ldr	r2, [r3, #72]
 800 008c 22EA0101 		bic	r1, r2, r1
 801 0090 9964     		str	r1, [r3, #72]
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 802              		.loc 1 427 0
 803 0092 0020     		movs	r0, #0
 804              	.LVL85:
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 805              		.loc 1 457 0
 806 0094 7047     		bx	lr
 807              	.LVL86:
 808              	.L76:
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRG, ((GPIONumber & PWR_PORTG_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_10))));
 809              		.loc 1 459 0
 810 0096 084B     		ldr	r3, .L78
 811 0098 5A6D     		ldr	r2, [r3, #84]
 812 009a C1F30900 		ubfx	r0, r1, #0, #10
 813              	.LVL87:
 814 009e 0243     		orrs	r2, r2, r0
 815 00a0 5A65     		str	r2, [r3, #84]
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, (GPIONumber & PWR_PORTG_AVAILABLE_PINS));
 816              		.loc 1 460 0
 817 00a2 1A6D     		ldr	r2, [r3, #80]
 818 00a4 C1F30A01 		ubfx	r1, r1, #0, #11
 819              	.LVL88:
 820 00a8 22EA0101 		bic	r1, r2, r1
 821 00ac 1965     		str	r1, [r3, #80]
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 822              		.loc 1 427 0
 823 00ae 0020     		movs	r0, #0
ARM GAS  /tmp/ccF8hraL.s 			page 24


 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 824              		.loc 1 461 0
 825 00b0 7047     		bx	lr
 826              	.LVL89:
 827              	.L77:
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 828              		.loc 1 463 0
 829 00b2 0120     		movs	r0, #1
 830              	.LVL90:
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 831              		.loc 1 468 0
 832 00b4 7047     		bx	lr
 833              	.L79:
 834 00b6 00BF     		.align	2
 835              	.L78:
 836 00b8 00700040 		.word	1073770496
 837              		.cfi_endproc
 838              	.LFE337:
 840              		.section	.text.HAL_PWREx_DisableGPIOPullDown,"ax",%progbits
 841              		.align	1
 842              		.global	HAL_PWREx_DisableGPIOPullDown
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv4-sp-d16
 848              	HAL_PWREx_DisableGPIOPullDown:
 849              	.LFB338:
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-down state in Standby and Shutdown modes.
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PDy bits of PWR_PDCRx register used to configure the I/O
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        in pull-down state in Standby and Shutdown modes.
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to reset is reserved, the other PDy bits entered as input
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_G
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 850              		.loc 1 487 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL91:
ARM GAS  /tmp/ccF8hraL.s 			page 25


 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 856              		.loc 1 493 0
 857 0000 0628     		cmp	r0, #6
 858 0002 3DD8     		bhi	.L90
 859 0004 DFE800F0 		tbb	[pc, r0]
 860              	.L83:
 861 0008 04       		.byte	(.L82-.L83)/2
 862 0009 0D       		.byte	(.L84-.L83)/2
 863 000a 16       		.byte	(.L85-.L83)/2
 864 000b 1D       		.byte	(.L86-.L83)/2
 865 000c 24       		.byte	(.L87-.L83)/2
 866 000d 2B       		.byte	(.L88-.L83)/2
 867 000e 33       		.byte	(.L89-.L83)/2
 868 000f 00       		.p2align 1
 869              	.L82:
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 870              		.loc 1 496 0
 871 0010 1C4A     		ldr	r2, .L91
 872 0012 536A     		ldr	r3, [r2, #36]
 873 0014 21F42041 		bic	r1, r1, #40960
 874              	.LVL92:
 875 0018 23EA0101 		bic	r1, r3, r1
 876 001c 5162     		str	r1, [r2, #36]
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 877              		.loc 1 488 0
 878 001e 0020     		movs	r0, #0
 879              	.LVL93:
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 880              		.loc 1 497 0
 881 0020 7047     		bx	lr
 882              	.LVL94:
 883              	.L84:
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 884              		.loc 1 499 0
 885 0022 184A     		ldr	r2, .L91
 886 0024 D36A     		ldr	r3, [r2, #44]
 887 0026 21F01001 		bic	r1, r1, #16
 888              	.LVL95:
 889 002a 23EA0101 		bic	r1, r3, r1
 890 002e D162     		str	r1, [r2, #44]
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 891              		.loc 1 488 0
 892 0030 0020     		movs	r0, #0
 893              	.LVL96:
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 894              		.loc 1 500 0
 895 0032 7047     		bx	lr
 896              	.LVL97:
 897              	.L85:
ARM GAS  /tmp/ccF8hraL.s 			page 26


 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 898              		.loc 1 502 0
 899 0034 134A     		ldr	r2, .L91
 900 0036 536B     		ldr	r3, [r2, #52]
 901 0038 23EA0101 		bic	r1, r3, r1
 902              	.LVL98:
 903 003c 5163     		str	r1, [r2, #52]
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 904              		.loc 1 488 0
 905 003e 0020     		movs	r0, #0
 906              	.LVL99:
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 907              		.loc 1 503 0
 908 0040 7047     		bx	lr
 909              	.LVL100:
 910              	.L86:
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 911              		.loc 1 505 0
 912 0042 104A     		ldr	r2, .L91
 913 0044 D36B     		ldr	r3, [r2, #60]
 914 0046 23EA0101 		bic	r1, r3, r1
 915              	.LVL101:
 916 004a D163     		str	r1, [r2, #60]
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 917              		.loc 1 488 0
 918 004c 0020     		movs	r0, #0
 919              	.LVL102:
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 920              		.loc 1 506 0
 921 004e 7047     		bx	lr
 922              	.LVL103:
 923              	.L87:
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 924              		.loc 1 508 0
 925 0050 0C4A     		ldr	r2, .L91
 926 0052 536C     		ldr	r3, [r2, #68]
 927 0054 23EA0101 		bic	r1, r3, r1
 928              	.LVL104:
 929 0058 5164     		str	r1, [r2, #68]
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 930              		.loc 1 488 0
 931 005a 0020     		movs	r0, #0
 932              	.LVL105:
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 933              		.loc 1 509 0
 934 005c 7047     		bx	lr
 935              	.LVL106:
 936              	.L88:
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 937              		.loc 1 511 0
 938 005e 094A     		ldr	r2, .L91
 939 0060 D36C     		ldr	r3, [r2, #76]
 940 0062 89B2     		uxth	r1, r1
ARM GAS  /tmp/ccF8hraL.s 			page 27


 941              	.LVL107:
 942 0064 23EA0101 		bic	r1, r3, r1
 943 0068 D164     		str	r1, [r2, #76]
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 944              		.loc 1 488 0
 945 006a 0020     		movs	r0, #0
 946              	.LVL108:
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 947              		.loc 1 512 0
 948 006c 7047     		bx	lr
 949              	.LVL109:
 950              	.L89:
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, ((GPIONumber & PWR_PORTG_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_10))));
 951              		.loc 1 514 0
 952 006e 054A     		ldr	r2, .L91
 953 0070 536D     		ldr	r3, [r2, #84]
 954 0072 C1F30901 		ubfx	r1, r1, #0, #10
 955              	.LVL110:
 956 0076 23EA0101 		bic	r1, r3, r1
 957 007a 5165     		str	r1, [r2, #84]
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 958              		.loc 1 488 0
 959 007c 0020     		movs	r0, #0
 960              	.LVL111:
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 961              		.loc 1 515 0
 962 007e 7047     		bx	lr
 963              	.LVL112:
 964              	.L90:
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 965              		.loc 1 517 0
 966 0080 0120     		movs	r0, #1
 967              	.LVL113:
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 968              		.loc 1 522 0
 969 0082 7047     		bx	lr
 970              	.L92:
 971              		.align	2
 972              	.L91:
 973 0084 00700040 		.word	1073770496
 974              		.cfi_endproc
 975              	.LFE338:
 977              		.section	.text.HAL_PWREx_EnablePullUpPullDownConfig,"ax",%progbits
 978              		.align	1
 979              		.global	HAL_PWREx_EnablePullUpPullDownConfig
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 983              		.fpu fpv4-sp-d16
 985              	HAL_PWREx_EnablePullUpPullDownConfig:
 986              	.LFB339:
ARM GAS  /tmp/ccF8hraL.s 			page 28


 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable pull-up and pull-down configuration.
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When APC bit is set, the I/O pull-up and pull-down configurations defined in
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are applied in Standby and Shutdown modes.
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Pull-up set by PUy bit of PWR_PUCRx register is not activated if the corresponding
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is also set (pull-down configuration priority is higher).
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() API's ensure there
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        is no conflict when setting PUy or PDy bit.
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePullUpPullDownConfig(void)
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 987              		.loc 1 537 0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_APC);
 992              		.loc 1 538 0
 993 0000 024A     		ldr	r2, .L94
 994 0002 9368     		ldr	r3, [r2, #8]
 995 0004 43F48063 		orr	r3, r3, #1024
 996 0008 9360     		str	r3, [r2, #8]
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 997              		.loc 1 539 0
 998 000a 7047     		bx	lr
 999              	.L95:
 1000              		.align	2
 1001              	.L94:
 1002 000c 00700040 		.word	1073770496
 1003              		.cfi_endproc
 1004              	.LFE339:
 1006              		.section	.text.HAL_PWREx_DisablePullUpPullDownConfig,"ax",%progbits
 1007              		.align	1
 1008              		.global	HAL_PWREx_DisablePullUpPullDownConfig
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu fpv4-sp-d16
 1014              	HAL_PWREx_DisablePullUpPullDownConfig:
 1015              	.LFB340:
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable pull-up and pull-down configuration.
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When APC bit is cleared, the I/O pull-up and pull-down configurations defined in
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are not applied in Standby and Shutdown modes.
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePullUpPullDownConfig(void)
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1016              		.loc 1 549 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccF8hraL.s 			page 29


 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_APC);
 1021              		.loc 1 550 0
 1022 0000 024A     		ldr	r2, .L97
 1023 0002 9368     		ldr	r3, [r2, #8]
 1024 0004 23F48063 		bic	r3, r3, #1024
 1025 0008 9360     		str	r3, [r2, #8]
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1026              		.loc 1 551 0
 1027 000a 7047     		bx	lr
 1028              	.L98:
 1029              		.align	2
 1030              	.L97:
 1031 000c 00700040 		.word	1073770496
 1032              		.cfi_endproc
 1033              	.LFE340:
 1035              		.section	.text.HAL_PWREx_EnableSRAM2ContentRetention,"ax",%progbits
 1036              		.align	1
 1037              		.global	HAL_PWREx_EnableSRAM2ContentRetention
 1038              		.syntax unified
 1039              		.thumb
 1040              		.thumb_func
 1041              		.fpu fpv4-sp-d16
 1043              	HAL_PWREx_EnableSRAM2ContentRetention:
 1044              	.LFB341:
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable SRAM2 content retention in Standby mode.
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When RRS bit is set, SRAM2 is powered by the low-power regulator in
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         Standby mode and its content is kept.
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM2ContentRetention(void)
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1045              		.loc 1 562 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              		@ link register save eliminated.
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_RRS);
 1050              		.loc 1 563 0
 1051 0000 024A     		ldr	r2, .L100
 1052 0002 9368     		ldr	r3, [r2, #8]
 1053 0004 43F48073 		orr	r3, r3, #256
 1054 0008 9360     		str	r3, [r2, #8]
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1055              		.loc 1 564 0
 1056 000a 7047     		bx	lr
 1057              	.L101:
 1058              		.align	2
 1059              	.L100:
 1060 000c 00700040 		.word	1073770496
 1061              		.cfi_endproc
 1062              	.LFE341:
ARM GAS  /tmp/ccF8hraL.s 			page 30


 1064              		.section	.text.HAL_PWREx_DisableSRAM2ContentRetention,"ax",%progbits
 1065              		.align	1
 1066              		.global	HAL_PWREx_DisableSRAM2ContentRetention
 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
 1070              		.fpu fpv4-sp-d16
 1072              	HAL_PWREx_DisableSRAM2ContentRetention:
 1073              	.LFB342:
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable SRAM2 content retention in Standby mode.
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When RRS bit is reset, SRAM2 is powered off in Standby mode
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        and its content is lost.
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM2ContentRetention(void)
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1074              		.loc 1 574 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078              		@ link register save eliminated.
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_RRS);
 1079              		.loc 1 575 0
 1080 0000 024A     		ldr	r2, .L103
 1081 0002 9368     		ldr	r3, [r2, #8]
 1082 0004 23F48073 		bic	r3, r3, #256
 1083 0008 9360     		str	r3, [r2, #8]
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1084              		.loc 1 576 0
 1085 000a 7047     		bx	lr
 1086              	.L104:
 1087              		.align	2
 1088              	.L103:
 1089 000c 00700040 		.word	1073770496
 1090              		.cfi_endproc
 1091              	.LFE342:
 1093              		.section	.text.HAL_PWREx_EnablePVM1,"ax",%progbits
 1094              		.align	1
 1095              		.global	HAL_PWREx_EnablePVM1
 1096              		.syntax unified
 1097              		.thumb
 1098              		.thumb_func
 1099              		.fpu fpv4-sp-d16
 1101              	HAL_PWREx_EnablePVM1:
 1102              	.LFB343:
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 1: VDDA versus FASTCOMP minimum voltage.
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
ARM GAS  /tmp/ccF8hraL.s 			page 31


 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM1(void)
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1103              		.loc 1 587 0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 0
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 1107              		@ link register save eliminated.
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_1);
 1108              		.loc 1 588 0
 1109 0000 024A     		ldr	r2, .L106
 1110 0002 5368     		ldr	r3, [r2, #4]
 1111 0004 43F01003 		orr	r3, r3, #16
 1112 0008 5360     		str	r3, [r2, #4]
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1113              		.loc 1 589 0
 1114 000a 7047     		bx	lr
 1115              	.L107:
 1116              		.align	2
 1117              	.L106:
 1118 000c 00700040 		.word	1073770496
 1119              		.cfi_endproc
 1120              	.LFE343:
 1122              		.section	.text.HAL_PWREx_DisablePVM1,"ax",%progbits
 1123              		.align	1
 1124              		.global	HAL_PWREx_DisablePVM1
 1125              		.syntax unified
 1126              		.thumb
 1127              		.thumb_func
 1128              		.fpu fpv4-sp-d16
 1130              	HAL_PWREx_DisablePVM1:
 1131              	.LFB344:
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 1: VDDA versus FASTCOMP minimum voltage.
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM1(void)
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1132              		.loc 1 596 0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 0
 1135              		@ frame_needed = 0, uses_anonymous_args = 0
 1136              		@ link register save eliminated.
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_1);
 1137              		.loc 1 597 0
 1138 0000 024A     		ldr	r2, .L109
 1139 0002 5368     		ldr	r3, [r2, #4]
 1140 0004 23F01003 		bic	r3, r3, #16
 1141 0008 5360     		str	r3, [r2, #4]
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1142              		.loc 1 598 0
 1143 000a 7047     		bx	lr
 1144              	.L110:
 1145              		.align	2
 1146              	.L109:
 1147 000c 00700040 		.word	1073770496
 1148              		.cfi_endproc
ARM GAS  /tmp/ccF8hraL.s 			page 32


 1149              	.LFE344:
 1151              		.section	.text.HAL_PWREx_EnablePVM2,"ax",%progbits
 1152              		.align	1
 1153              		.global	HAL_PWREx_EnablePVM2
 1154              		.syntax unified
 1155              		.thumb
 1156              		.thumb_func
 1157              		.fpu fpv4-sp-d16
 1159              	HAL_PWREx_EnablePVM2:
 1160              	.LFB345:
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 2: VDDA versus FASTDAC minimum voltage.
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM2(void)
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1161              		.loc 1 608 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_2);
 1166              		.loc 1 609 0
 1167 0000 024A     		ldr	r2, .L112
 1168 0002 5368     		ldr	r3, [r2, #4]
 1169 0004 43F02003 		orr	r3, r3, #32
 1170 0008 5360     		str	r3, [r2, #4]
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1171              		.loc 1 610 0
 1172 000a 7047     		bx	lr
 1173              	.L113:
 1174              		.align	2
 1175              	.L112:
 1176 000c 00700040 		.word	1073770496
 1177              		.cfi_endproc
 1178              	.LFE345:
 1180              		.section	.text.HAL_PWREx_DisablePVM2,"ax",%progbits
 1181              		.align	1
 1182              		.global	HAL_PWREx_DisablePVM2
 1183              		.syntax unified
 1184              		.thumb
 1185              		.thumb_func
 1186              		.fpu fpv4-sp-d16
 1188              	HAL_PWREx_DisablePVM2:
 1189              	.LFB346:
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 2: VDDA versus FASTDAC minimum voltage.
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM2(void)
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1190              		.loc 1 617 0
ARM GAS  /tmp/ccF8hraL.s 			page 33


 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              		@ link register save eliminated.
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_2);
 1195              		.loc 1 618 0
 1196 0000 024A     		ldr	r2, .L115
 1197 0002 5368     		ldr	r3, [r2, #4]
 1198 0004 23F02003 		bic	r3, r3, #32
 1199 0008 5360     		str	r3, [r2, #4]
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1200              		.loc 1 619 0
 1201 000a 7047     		bx	lr
 1202              	.L116:
 1203              		.align	2
 1204              	.L115:
 1205 000c 00700040 		.word	1073770496
 1206              		.cfi_endproc
 1207              	.LFE346:
 1209              		.section	.text.HAL_PWREx_EnablePVM3,"ax",%progbits
 1210              		.align	1
 1211              		.global	HAL_PWREx_EnablePVM3
 1212              		.syntax unified
 1213              		.thumb
 1214              		.thumb_func
 1215              		.fpu fpv4-sp-d16
 1217              	HAL_PWREx_EnablePVM3:
 1218              	.LFB347:
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 3: VDDA versus ADC minimum voltage 1.62V.
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM3(void)
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1219              		.loc 1 628 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 1223              		@ link register save eliminated.
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_3);
 1224              		.loc 1 629 0
 1225 0000 024A     		ldr	r2, .L118
 1226 0002 5368     		ldr	r3, [r2, #4]
 1227 0004 43F04003 		orr	r3, r3, #64
 1228 0008 5360     		str	r3, [r2, #4]
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1229              		.loc 1 630 0
 1230 000a 7047     		bx	lr
 1231              	.L119:
 1232              		.align	2
 1233              	.L118:
 1234 000c 00700040 		.word	1073770496
 1235              		.cfi_endproc
 1236              	.LFE347:
ARM GAS  /tmp/ccF8hraL.s 			page 34


 1238              		.section	.text.HAL_PWREx_DisablePVM3,"ax",%progbits
 1239              		.align	1
 1240              		.global	HAL_PWREx_DisablePVM3
 1241              		.syntax unified
 1242              		.thumb
 1243              		.thumb_func
 1244              		.fpu fpv4-sp-d16
 1246              	HAL_PWREx_DisablePVM3:
 1247              	.LFB348:
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 3: VDDA versus ADC minimum voltage 1.62V.
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM3(void)
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1248              		.loc 1 637 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252              		@ link register save eliminated.
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_3);
 1253              		.loc 1 638 0
 1254 0000 024A     		ldr	r2, .L121
 1255 0002 5368     		ldr	r3, [r2, #4]
 1256 0004 23F04003 		bic	r3, r3, #64
 1257 0008 5360     		str	r3, [r2, #4]
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1258              		.loc 1 639 0
 1259 000a 7047     		bx	lr
 1260              	.L122:
 1261              		.align	2
 1262              	.L121:
 1263 000c 00700040 		.word	1073770496
 1264              		.cfi_endproc
 1265              	.LFE348:
 1267              		.section	.text.HAL_PWREx_EnablePVM4,"ax",%progbits
 1268              		.align	1
 1269              		.global	HAL_PWREx_EnablePVM4
 1270              		.syntax unified
 1271              		.thumb
 1272              		.thumb_func
 1273              		.fpu fpv4-sp-d16
 1275              	HAL_PWREx_EnablePVM4:
 1276              	.LFB349:
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 4: VDDA versus OPAMP/DAC minimum voltage 1.8V.
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM4(void)
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1277              		.loc 1 647 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccF8hraL.s 			page 35


 1281              		@ link register save eliminated.
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_4);
 1282              		.loc 1 648 0
 1283 0000 024A     		ldr	r2, .L124
 1284 0002 5368     		ldr	r3, [r2, #4]
 1285 0004 43F08003 		orr	r3, r3, #128
 1286 0008 5360     		str	r3, [r2, #4]
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1287              		.loc 1 649 0
 1288 000a 7047     		bx	lr
 1289              	.L125:
 1290              		.align	2
 1291              	.L124:
 1292 000c 00700040 		.word	1073770496
 1293              		.cfi_endproc
 1294              	.LFE349:
 1296              		.section	.text.HAL_PWREx_DisablePVM4,"ax",%progbits
 1297              		.align	1
 1298              		.global	HAL_PWREx_DisablePVM4
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1302              		.fpu fpv4-sp-d16
 1304              	HAL_PWREx_DisablePVM4:
 1305              	.LFB350:
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 4: VDDA versus OPAMP/DAC minimum voltage 1.8V.
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM4(void)
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1306              		.loc 1 656 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 0, uses_anonymous_args = 0
 1310              		@ link register save eliminated.
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_4);
 1311              		.loc 1 657 0
 1312 0000 024A     		ldr	r2, .L127
 1313 0002 5368     		ldr	r3, [r2, #4]
 1314 0004 23F08003 		bic	r3, r3, #128
 1315 0008 5360     		str	r3, [r2, #4]
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1316              		.loc 1 658 0
 1317 000a 7047     		bx	lr
 1318              	.L128:
 1319              		.align	2
 1320              	.L127:
 1321 000c 00700040 		.word	1073770496
 1322              		.cfi_endproc
 1323              	.LFE350:
 1325              		.section	.text.HAL_PWREx_ConfigPVM,"ax",%progbits
 1326              		.align	1
 1327              		.global	HAL_PWREx_ConfigPVM
 1328              		.syntax unified
 1329              		.thumb
ARM GAS  /tmp/ccF8hraL.s 			page 36


 1330              		.thumb_func
 1331              		.fpu fpv4-sp-d16
 1333              	HAL_PWREx_ConfigPVM:
 1334              	.LFB351:
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Configure the Peripheral Voltage Monitoring (PVM).
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param sConfigPVM: pointer to a PWR_PVMTypeDef structure that contains the
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PVM configuration information.
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note The API configures a single PVM according to the information contained
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       in the input structure. To configure several PVMs, the API must be singly
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       called for each PVM used.
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         more details about the voltage thresholds corresponding to each
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         detection level and to each monitored supply.
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL status
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ConfigPVM(PWR_PVMTypeDef *sConfigPVM)
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1335              		.loc 1 676 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 0
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 1339              		@ link register save eliminated.
 1340              	.LVL114:
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check the parameters */
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_TYPE(sConfigPVM->PVMType));
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_MODE(sConfigPVM->Mode));
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Configure EXTI 35 to 38 interrupts if so required:
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      scan through PVMType to detect which PVMx is set and
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      configure the corresponding EXTI line accordingly. */
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (sConfigPVM->PVMType)
 1341              		.loc 1 687 0
 1342 0000 0368     		ldr	r3, [r0]
 1343 0002 202B     		cmp	r3, #32
 1344 0004 78D0     		beq	.L131
 1345 0006 3DD9     		bls	.L153
 1346 0008 402B     		cmp	r3, #64
 1347 000a 00F0AC80 		beq	.L134
 1348 000e 802B     		cmp	r3, #128
 1349 0010 40F0E080 		bne	.L148
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_1:
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_EVENT();
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_IT();
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE();
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccF8hraL.s 			page 37


 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_IT();
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_EVENT();
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_RISING_EDGE();
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_FALLING_EDGE();
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_2:
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_EVENT();
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE();
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_IT();
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_EVENT();
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_RISING_EDGE();
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_FALLING_EDGE();
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
ARM GAS  /tmp/ccF8hraL.s 			page 38


 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_3:
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_EVENT();
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE();
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_IT();
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_EVENT();
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE();
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE();
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_4:
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_EVENT();
 1350              		.loc 1 788 0
 1351 0014 744B     		ldr	r3, .L154
 1352 0016 5A6A     		ldr	r2, [r3, #36]
 1353 0018 22F04002 		bic	r2, r2, #64
 1354 001c 5A62     		str	r2, [r3, #36]
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_IT();
 1355              		.loc 1 789 0
 1356 001e 1A6A     		ldr	r2, [r3, #32]
 1357 0020 22F04002 		bic	r2, r2, #64
 1358 0024 1A62     		str	r2, [r3, #32]
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE();
 1359              		.loc 1 790 0
 1360 0026 DA6A     		ldr	r2, [r3, #44]
 1361 0028 22F04002 		bic	r2, r2, #64
 1362 002c DA62     		str	r2, [r3, #44]
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();
 1363              		.loc 1 791 0
 1364 002e 9A6A     		ldr	r2, [r3, #40]
 1365 0030 22F04002 		bic	r2, r2, #64
 1366 0034 9A62     		str	r2, [r3, #40]
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
ARM GAS  /tmp/ccF8hraL.s 			page 39


 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 1367              		.loc 1 794 0
 1368 0036 4368     		ldr	r3, [r0, #4]
 1369 0038 13F4803F 		tst	r3, #65536
 1370 003c 04D0     		beq	.L145
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_IT();
 1371              		.loc 1 796 0
 1372 003e 6A4A     		ldr	r2, .L154
 1373 0040 136A     		ldr	r3, [r2, #32]
 1374 0042 43F04003 		orr	r3, r3, #64
 1375 0046 1362     		str	r3, [r2, #32]
 1376              	.L145:
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 1377              		.loc 1 800 0
 1378 0048 4368     		ldr	r3, [r0, #4]
 1379 004a 13F4003F 		tst	r3, #131072
 1380 004e 04D0     		beq	.L146
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_EVENT();
 1381              		.loc 1 802 0
 1382 0050 654A     		ldr	r2, .L154
 1383 0052 536A     		ldr	r3, [r2, #36]
 1384 0054 43F04003 		orr	r3, r3, #64
 1385 0058 5362     		str	r3, [r2, #36]
 1386              	.L146:
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 1387              		.loc 1 806 0
 1388 005a 4368     		ldr	r3, [r0, #4]
 1389 005c 13F0010F 		tst	r3, #1
 1390 0060 04D0     		beq	.L147
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_RISING_EDGE();
 1391              		.loc 1 808 0
 1392 0062 614A     		ldr	r2, .L154
 1393 0064 936A     		ldr	r3, [r2, #40]
 1394 0066 43F04003 		orr	r3, r3, #64
 1395 006a 9362     		str	r3, [r2, #40]
 1396              	.L147:
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 1397              		.loc 1 811 0
 1398 006c 4368     		ldr	r3, [r0, #4]
 1399 006e 13F0020F 		tst	r3, #2
 1400 0072 00F0B780 		beq	.L152
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_FALLING_EDGE();
 1401              		.loc 1 813 0
 1402 0076 5C4A     		ldr	r2, .L154
 1403 0078 D36A     		ldr	r3, [r2, #44]
ARM GAS  /tmp/ccF8hraL.s 			page 40


 1404 007a 43F04003 		orr	r3, r3, #64
 1405 007e D362     		str	r3, [r2, #44]
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 1406              		.loc 1 677 0
 1407 0080 0020     		movs	r0, #0
 1408              	.LVL115:
 1409 0082 7047     		bx	lr
 1410              	.LVL116:
 1411              	.L153:
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 1412              		.loc 1 687 0
 1413 0084 102B     		cmp	r3, #16
 1414 0086 40F0A580 		bne	.L148
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_IT();
 1415              		.loc 1 692 0
 1416 008a 574B     		ldr	r3, .L154
 1417 008c 5A6A     		ldr	r2, [r3, #36]
 1418 008e 22F00802 		bic	r2, r2, #8
 1419 0092 5A62     		str	r2, [r3, #36]
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE();
 1420              		.loc 1 693 0
 1421 0094 1A6A     		ldr	r2, [r3, #32]
 1422 0096 22F00802 		bic	r2, r2, #8
 1423 009a 1A62     		str	r2, [r3, #32]
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();
 1424              		.loc 1 694 0
 1425 009c DA6A     		ldr	r2, [r3, #44]
 1426 009e 22F00802 		bic	r2, r2, #8
 1427 00a2 DA62     		str	r2, [r3, #44]
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 1428              		.loc 1 695 0
 1429 00a4 9A6A     		ldr	r2, [r3, #40]
 1430 00a6 22F00802 		bic	r2, r2, #8
 1431 00aa 9A62     		str	r2, [r3, #40]
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1432              		.loc 1 698 0
 1433 00ac 4368     		ldr	r3, [r0, #4]
 1434 00ae 13F4803F 		tst	r3, #65536
 1435 00b2 04D0     		beq	.L136
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1436              		.loc 1 700 0
 1437 00b4 4C4A     		ldr	r2, .L154
 1438 00b6 136A     		ldr	r3, [r2, #32]
 1439 00b8 43F00803 		orr	r3, r3, #8
 1440 00bc 1362     		str	r3, [r2, #32]
 1441              	.L136:
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1442              		.loc 1 704 0
 1443 00be 4368     		ldr	r3, [r0, #4]
 1444 00c0 13F4003F 		tst	r3, #131072
 1445 00c4 04D0     		beq	.L137
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1446              		.loc 1 706 0
 1447 00c6 484A     		ldr	r2, .L154
 1448 00c8 536A     		ldr	r3, [r2, #36]
 1449 00ca 43F00803 		orr	r3, r3, #8
 1450 00ce 5362     		str	r3, [r2, #36]
ARM GAS  /tmp/ccF8hraL.s 			page 41


 1451              	.L137:
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1452              		.loc 1 710 0
 1453 00d0 4368     		ldr	r3, [r0, #4]
 1454 00d2 13F0010F 		tst	r3, #1
 1455 00d6 04D0     		beq	.L138
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1456              		.loc 1 712 0
 1457 00d8 434A     		ldr	r2, .L154
 1458 00da 936A     		ldr	r3, [r2, #40]
 1459 00dc 43F00803 		orr	r3, r3, #8
 1460 00e0 9362     		str	r3, [r2, #40]
 1461              	.L138:
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1462              		.loc 1 715 0
 1463 00e2 4368     		ldr	r3, [r0, #4]
 1464 00e4 13F0020F 		tst	r3, #2
 1465 00e8 76D0     		beq	.L149
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1466              		.loc 1 717 0
 1467 00ea 3F4A     		ldr	r2, .L154
 1468 00ec D36A     		ldr	r3, [r2, #44]
 1469 00ee 43F00803 		orr	r3, r3, #8
 1470 00f2 D362     		str	r3, [r2, #44]
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 1471              		.loc 1 677 0
 1472 00f4 0020     		movs	r0, #0
 1473              	.LVL117:
 1474 00f6 7047     		bx	lr
 1475              	.LVL118:
 1476              	.L131:
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
 1477              		.loc 1 725 0
 1478 00f8 3B4B     		ldr	r3, .L154
 1479 00fa 5A6A     		ldr	r2, [r3, #36]
 1480 00fc 22F01002 		bic	r2, r2, #16
 1481 0100 5A62     		str	r2, [r3, #36]
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE();
 1482              		.loc 1 726 0
 1483 0102 1A6A     		ldr	r2, [r3, #32]
 1484 0104 22F01002 		bic	r2, r2, #16
 1485 0108 1A62     		str	r2, [r3, #32]
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
 1486              		.loc 1 727 0
 1487 010a DA6A     		ldr	r2, [r3, #44]
 1488 010c 22F01002 		bic	r2, r2, #16
 1489 0110 DA62     		str	r2, [r3, #44]
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 1490              		.loc 1 728 0
 1491 0112 9A6A     		ldr	r2, [r3, #40]
 1492 0114 22F01002 		bic	r2, r2, #16
 1493 0118 9A62     		str	r2, [r3, #40]
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1494              		.loc 1 731 0
 1495 011a 4368     		ldr	r3, [r0, #4]
 1496 011c 13F4803F 		tst	r3, #65536
 1497 0120 04D0     		beq	.L139
ARM GAS  /tmp/ccF8hraL.s 			page 42


 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1498              		.loc 1 733 0
 1499 0122 314A     		ldr	r2, .L154
 1500 0124 136A     		ldr	r3, [r2, #32]
 1501 0126 43F01003 		orr	r3, r3, #16
 1502 012a 1362     		str	r3, [r2, #32]
 1503              	.L139:
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1504              		.loc 1 737 0
 1505 012c 4368     		ldr	r3, [r0, #4]
 1506 012e 13F4003F 		tst	r3, #131072
 1507 0132 04D0     		beq	.L140
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1508              		.loc 1 739 0
 1509 0134 2C4A     		ldr	r2, .L154
 1510 0136 536A     		ldr	r3, [r2, #36]
 1511 0138 43F01003 		orr	r3, r3, #16
 1512 013c 5362     		str	r3, [r2, #36]
 1513              	.L140:
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1514              		.loc 1 743 0
 1515 013e 4368     		ldr	r3, [r0, #4]
 1516 0140 13F0010F 		tst	r3, #1
 1517 0144 04D0     		beq	.L141
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1518              		.loc 1 745 0
 1519 0146 284A     		ldr	r2, .L154
 1520 0148 936A     		ldr	r3, [r2, #40]
 1521 014a 43F01003 		orr	r3, r3, #16
 1522 014e 9362     		str	r3, [r2, #40]
 1523              	.L141:
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1524              		.loc 1 748 0
 1525 0150 4368     		ldr	r3, [r0, #4]
 1526 0152 13F0020F 		tst	r3, #2
 1527 0156 41D0     		beq	.L150
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1528              		.loc 1 750 0
 1529 0158 234A     		ldr	r2, .L154
 1530 015a D36A     		ldr	r3, [r2, #44]
 1531 015c 43F01003 		orr	r3, r3, #16
 1532 0160 D362     		str	r3, [r2, #44]
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 1533              		.loc 1 677 0
 1534 0162 0020     		movs	r0, #0
 1535              	.LVL119:
 1536 0164 7047     		bx	lr
 1537              	.LVL120:
 1538              	.L134:
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 1539              		.loc 1 757 0
 1540 0166 204B     		ldr	r3, .L154
 1541 0168 5A6A     		ldr	r2, [r3, #36]
 1542 016a 22F02002 		bic	r2, r2, #32
 1543 016e 5A62     		str	r2, [r3, #36]
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE();
 1544              		.loc 1 758 0
ARM GAS  /tmp/ccF8hraL.s 			page 43


 1545 0170 1A6A     		ldr	r2, [r3, #32]
 1546 0172 22F02002 		bic	r2, r2, #32
 1547 0176 1A62     		str	r2, [r3, #32]
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 1548              		.loc 1 759 0
 1549 0178 DA6A     		ldr	r2, [r3, #44]
 1550 017a 22F02002 		bic	r2, r2, #32
 1551 017e DA62     		str	r2, [r3, #44]
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 1552              		.loc 1 760 0
 1553 0180 9A6A     		ldr	r2, [r3, #40]
 1554 0182 22F02002 		bic	r2, r2, #32
 1555 0186 9A62     		str	r2, [r3, #40]
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1556              		.loc 1 763 0
 1557 0188 4368     		ldr	r3, [r0, #4]
 1558 018a 13F4803F 		tst	r3, #65536
 1559 018e 04D0     		beq	.L142
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1560              		.loc 1 765 0
 1561 0190 154A     		ldr	r2, .L154
 1562 0192 136A     		ldr	r3, [r2, #32]
 1563 0194 43F02003 		orr	r3, r3, #32
 1564 0198 1362     		str	r3, [r2, #32]
 1565              	.L142:
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1566              		.loc 1 769 0
 1567 019a 4368     		ldr	r3, [r0, #4]
 1568 019c 13F4003F 		tst	r3, #131072
 1569 01a0 04D0     		beq	.L143
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1570              		.loc 1 771 0
 1571 01a2 114A     		ldr	r2, .L154
 1572 01a4 536A     		ldr	r3, [r2, #36]
 1573 01a6 43F02003 		orr	r3, r3, #32
 1574 01aa 5362     		str	r3, [r2, #36]
 1575              	.L143:
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1576              		.loc 1 775 0
 1577 01ac 4368     		ldr	r3, [r0, #4]
 1578 01ae 13F0010F 		tst	r3, #1
 1579 01b2 04D0     		beq	.L144
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1580              		.loc 1 777 0
 1581 01b4 0C4A     		ldr	r2, .L154
 1582 01b6 936A     		ldr	r3, [r2, #40]
 1583 01b8 43F02003 		orr	r3, r3, #32
 1584 01bc 9362     		str	r3, [r2, #40]
 1585              	.L144:
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 1586              		.loc 1 780 0
 1587 01be 4368     		ldr	r3, [r0, #4]
 1588 01c0 13F0020F 		tst	r3, #2
 1589 01c4 0CD0     		beq	.L151
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 1590              		.loc 1 782 0
 1591 01c6 084A     		ldr	r2, .L154
ARM GAS  /tmp/ccF8hraL.s 			page 44


 1592 01c8 D36A     		ldr	r3, [r2, #44]
 1593 01ca 43F02003 		orr	r3, r3, #32
 1594 01ce D362     		str	r3, [r2, #44]
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 1595              		.loc 1 677 0
 1596 01d0 0020     		movs	r0, #0
 1597              	.LVL121:
 1598 01d2 7047     		bx	lr
 1599              	.LVL122:
 1600              	.L148:
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1601              		.loc 1 818 0
 1602 01d4 0120     		movs	r0, #1
 1603              	.LVL123:
 1604 01d6 7047     		bx	lr
 1605              	.LVL124:
 1606              	.L149:
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 1607              		.loc 1 677 0
 1608 01d8 0020     		movs	r0, #0
 1609              	.LVL125:
 1610 01da 7047     		bx	lr
 1611              	.LVL126:
 1612              	.L150:
 1613 01dc 0020     		movs	r0, #0
 1614              	.LVL127:
 1615 01de 7047     		bx	lr
 1616              	.LVL128:
 1617              	.L151:
 1618 01e0 0020     		movs	r0, #0
 1619              	.LVL129:
 1620 01e2 7047     		bx	lr
 1621              	.LVL130:
 1622              	.L152:
 1623 01e4 0020     		movs	r0, #0
 1624              	.LVL131:
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1625              		.loc 1 823 0
 1626 01e6 7047     		bx	lr
 1627              	.L155:
 1628              		.align	2
 1629              	.L154:
 1630 01e8 00040140 		.word	1073808384
 1631              		.cfi_endproc
 1632              	.LFE351:
 1634              		.section	.text.HAL_PWREx_EnableLowPowerRunMode,"ax",%progbits
 1635              		.align	1
 1636              		.global	HAL_PWREx_EnableLowPowerRunMode
 1637              		.syntax unified
ARM GAS  /tmp/ccF8hraL.s 			page 45


 1638              		.thumb
 1639              		.thumb_func
 1640              		.fpu fpv4-sp-d16
 1642              	HAL_PWREx_EnableLowPowerRunMode:
 1643              	.LFB352:
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Low-power Run mode
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Low-power Run mode, all I/O pins keep the same state as in Run mode.
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When Regulator is set to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        Flash in power-down monde in setting the RUN_PD bit in FLASH_ACR register.
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        Setting RUN_PD in FLASH_ACR then appropriately reducing the clock frequency must
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        be done before calling HAL_PWREx_EnableLowPowerRunMode() API.
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowPowerRunMode(void)
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1644              		.loc 1 837 0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 0
 1647              		@ frame_needed = 0, uses_anonymous_args = 0
 1648              		@ link register save eliminated.
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set Regulator parameter */
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_LPR);
 1649              		.loc 1 839 0
 1650 0000 024A     		ldr	r2, .L157
 1651 0002 1368     		ldr	r3, [r2]
 1652 0004 43F48043 		orr	r3, r3, #16384
 1653 0008 1360     		str	r3, [r2]
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1654              		.loc 1 840 0
 1655 000a 7047     		bx	lr
 1656              	.L158:
 1657              		.align	2
 1658              	.L157:
 1659 000c 00700040 		.word	1073770496
 1660              		.cfi_endproc
 1661              	.LFE352:
 1663              		.section	.text.HAL_PWREx_DisableLowPowerRunMode,"ax",%progbits
 1664              		.align	1
 1665              		.global	HAL_PWREx_DisableLowPowerRunMode
 1666              		.syntax unified
 1667              		.thumb
 1668              		.thumb_func
 1669              		.fpu fpv4-sp-d16
 1671              	HAL_PWREx_DisableLowPowerRunMode:
 1672              	.LFB353:
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Exit Low-power Run mode.
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Before HAL_PWREx_DisableLowPowerRunMode() completion, the function checks that
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        REGLPF has been properly reset (otherwise, HAL_PWREx_DisableLowPowerRunMode
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        returns HAL_TIMEOUT status). The system clock frequency can then be
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        increased above 2 MHz.
ARM GAS  /tmp/ccF8hraL.s 			page 46


 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableLowPowerRunMode(void)
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1673              		.loc 1 852 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Clear LPR bit */
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR);
 1678              		.loc 1 856 0
 1679 0000 124A     		ldr	r2, .L166
 1680 0002 1368     		ldr	r3, [r2]
 1681 0004 23F48043 		bic	r3, r3, #16384
 1682 0008 1360     		str	r3, [r2]
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Wait until REGLPF is reset */
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000U));
 1683              		.loc 1 859 0
 1684 000a 114B     		ldr	r3, .L166+4
 1685 000c 1B68     		ldr	r3, [r3]
 1686 000e 02F14672 		add	r2, r2, #51904512
 1687 0012 02F55B32 		add	r2, r2, #224256
 1688 0016 02F28322 		addw	r2, r2, #643
 1689 001a A2FB0323 		umull	r2, r3, r2, r3
 1690 001e 9A0C     		lsrs	r2, r3, #18
 1691 0020 3223     		movs	r3, #50
 1692 0022 03FB02F3 		mul	r3, r3, r2
 1693              	.LVL132:
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 1694              		.loc 1 860 0
 1695 0026 00E0     		b	.L160
 1696              	.L162:
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     wait_loop_index--;
 1697              		.loc 1 862 0
 1698 0028 013B     		subs	r3, r3, #1
 1699              	.LVL133:
 1700              	.L160:
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 1701              		.loc 1 860 0
 1702 002a 084A     		ldr	r2, .L166
 1703 002c 5269     		ldr	r2, [r2, #20]
 1704 002e 12F4007F 		tst	r2, #512
 1705 0032 01D0     		beq	.L161
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 1706              		.loc 1 860 0 is_stmt 0 discriminator 1
 1707 0034 002B     		cmp	r3, #0
 1708 0036 F7D1     		bne	.L162
 1709              	.L161:
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
 1710              		.loc 1 864 0 is_stmt 1
 1711 0038 044B     		ldr	r3, .L166
ARM GAS  /tmp/ccF8hraL.s 			page 47


 1712              	.LVL134:
 1713 003a 5B69     		ldr	r3, [r3, #20]
 1714 003c 13F4007F 		tst	r3, #512
 1715 0040 01D1     		bne	.L165
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return HAL_TIMEOUT;
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return HAL_OK;
 1716              		.loc 1 869 0
 1717 0042 0020     		movs	r0, #0
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1718              		.loc 1 870 0
 1719 0044 7047     		bx	lr
 1720              	.L165:
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 1721              		.loc 1 866 0
 1722 0046 0320     		movs	r0, #3
 1723 0048 7047     		bx	lr
 1724              	.L167:
 1725 004a 00BF     		.align	2
 1726              	.L166:
 1727 004c 00700040 		.word	1073770496
 1728 0050 00000000 		.word	SystemCoreClock
 1729              		.cfi_endproc
 1730              	.LFE353:
 1732              		.section	.text.HAL_PWREx_EnterSTOP0Mode,"ax",%progbits
 1733              		.align	1
 1734              		.global	HAL_PWREx_EnterSTOP0Mode
 1735              		.syntax unified
 1736              		.thumb
 1737              		.thumb_func
 1738              		.fpu fpv4-sp-d16
 1740              	HAL_PWREx_EnterSTOP0Mode:
 1741              	.LFB354:
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Stop 0 mode.
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, main and low voltage regulators are ON.
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, all I/O pins keep the same state as in Run mode.
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the HSI
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        and the HSE oscillators are disabled. Some peripherals with the wakeup capability
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        The BOR is available.
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 0 mode by issuing an interrupt or a wakeup event,
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         is set; the HSI oscillator is selected if STOPWUCK is cleared.
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  By keeping the internal regulator ON during Stop 0 mode, the consumption
 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
ARM GAS  /tmp/ccF8hraL.s 			page 48


 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP0Mode(uint8_t STOPEntry)
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1742              		.loc 1 896 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 0
 1745              		@ frame_needed = 0, uses_anonymous_args = 0
 1746              		@ link register save eliminated.
 1747              	.LVL135:
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check the parameters */
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Stop 0 mode with Main Regulator */
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP0);
 1748              		.loc 1 901 0
 1749 0000 0B4A     		ldr	r2, .L172
 1750 0002 1368     		ldr	r3, [r2]
 1751 0004 23F00703 		bic	r3, r3, #7
 1752 0008 1360     		str	r3, [r2]
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1753              		.loc 1 904 0
 1754 000a 0A4A     		ldr	r2, .L172+4
 1755 000c 1369     		ldr	r3, [r2, #16]
 1756 000e 43F00403 		orr	r3, r3, #4
 1757 0012 1361     		str	r3, [r2, #16]
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 1758              		.loc 1 907 0
 1759 0014 0128     		cmp	r0, #1
 1760 0016 08D0     		beq	.L171
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFI();
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __SEV();
 1761              		.loc 1 915 0
 1762              		.syntax unified
 1763              	@ 915 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 1764 0018 40BF     		sev
 1765              	@ 0 "" 2
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 1766              		.loc 1 916 0
 1767              	@ 916 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 1768 001a 20BF     		wfe
 1769              	@ 0 "" 2
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 1770              		.loc 1 917 0
 1771              	@ 917 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 1772 001c 20BF     		wfe
 1773              	@ 0 "" 2
ARM GAS  /tmp/ccF8hraL.s 			page 49


 1774              		.thumb
 1775              		.syntax unified
 1776              	.L170:
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1777              		.loc 1 921 0
 1778 001e 054A     		ldr	r2, .L172+4
 1779 0020 1369     		ldr	r3, [r2, #16]
 1780 0022 23F00403 		bic	r3, r3, #4
 1781 0026 1361     		str	r3, [r2, #16]
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1782              		.loc 1 922 0
 1783 0028 7047     		bx	lr
 1784              	.L171:
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 1785              		.loc 1 910 0
 1786              		.syntax unified
 1787              	@ 910 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 1788 002a 30BF     		wfi
 1789              	@ 0 "" 2
 1790              		.thumb
 1791              		.syntax unified
 1792 002c F7E7     		b	.L170
 1793              	.L173:
 1794 002e 00BF     		.align	2
 1795              	.L172:
 1796 0030 00700040 		.word	1073770496
 1797 0034 00ED00E0 		.word	-536810240
 1798              		.cfi_endproc
 1799              	.LFE354:
 1801              		.section	.text.HAL_PWREx_EnterSTOP1Mode,"ax",%progbits
 1802              		.align	1
 1803              		.global	HAL_PWREx_EnterSTOP1Mode
 1804              		.syntax unified
 1805              		.thumb
 1806              		.thumb_func
 1807              		.fpu fpv4-sp-d16
 1809              	HAL_PWREx_EnterSTOP1Mode:
 1810              	.LFB355:
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Stop 1 mode.
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, only low power voltage regulator is ON.
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, all I/O pins keep the same state as in Run mode.
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the HSI
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        and the HSE oscillators are disabled. Some peripherals with the wakeup capability
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        The BOR is available.
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 1 mode by issuing an interrupt or a wakeup event,
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         is set.
ARM GAS  /tmp/ccF8hraL.s 			page 50


 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Due to low power mode, an additional startup delay is incurred when waking up from Stop 
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP1Mode(uint8_t STOPEntry)
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1811              		.loc 1 947 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 0
 1814              		@ frame_needed = 0, uses_anonymous_args = 0
 1815              		@ link register save eliminated.
 1816              	.LVL136:
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check the parameters */
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Stop 1 mode with Low-Power Regulator */
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP1);
 1817              		.loc 1 952 0
 1818 0000 0C4A     		ldr	r2, .L178
 1819 0002 1368     		ldr	r3, [r2]
 1820 0004 23F00703 		bic	r3, r3, #7
 1821 0008 43F00103 		orr	r3, r3, #1
 1822 000c 1360     		str	r3, [r2]
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1823              		.loc 1 955 0
 1824 000e 0A4A     		ldr	r2, .L178+4
 1825 0010 1369     		ldr	r3, [r2, #16]
 1826 0012 43F00403 		orr	r3, r3, #4
 1827 0016 1361     		str	r3, [r2, #16]
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 1828              		.loc 1 958 0
 1829 0018 0128     		cmp	r0, #1
 1830 001a 08D0     		beq	.L177
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFI();
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __SEV();
 1831              		.loc 1 966 0
 1832              		.syntax unified
 1833              	@ 966 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 1834 001c 40BF     		sev
 1835              	@ 0 "" 2
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 1836              		.loc 1 967 0
 1837              	@ 967 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 1838 001e 20BF     		wfe
ARM GAS  /tmp/ccF8hraL.s 			page 51


 1839              	@ 0 "" 2
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 1840              		.loc 1 968 0
 1841              	@ 968 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 1842 0020 20BF     		wfe
 1843              	@ 0 "" 2
 1844              		.thumb
 1845              		.syntax unified
 1846              	.L176:
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1847              		.loc 1 972 0
 1848 0022 054A     		ldr	r2, .L178+4
 1849 0024 1369     		ldr	r3, [r2, #16]
 1850 0026 23F00403 		bic	r3, r3, #4
 1851 002a 1361     		str	r3, [r2, #16]
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1852              		.loc 1 973 0
 1853 002c 7047     		bx	lr
 1854              	.L177:
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 1855              		.loc 1 961 0
 1856              		.syntax unified
 1857              	@ 961 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 1858 002e 30BF     		wfi
 1859              	@ 0 "" 2
 1860              		.thumb
 1861              		.syntax unified
 1862 0030 F7E7     		b	.L176
 1863              	.L179:
 1864 0032 00BF     		.align	2
 1865              	.L178:
 1866 0034 00700040 		.word	1073770496
 1867 0038 00ED00E0 		.word	-536810240
 1868              		.cfi_endproc
 1869              	.LFE355:
 1871              		.section	.text.HAL_PWREx_EnterSHUTDOWNMode,"ax",%progbits
 1872              		.align	1
 1873              		.global	HAL_PWREx_EnterSHUTDOWNMode
 1874              		.syntax unified
 1875              		.thumb
 1876              		.thumb_func
 1877              		.fpu fpv4-sp-d16
 1879              	HAL_PWREx_EnterSHUTDOWNMode:
 1880              	.LFB356:
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Shutdown mode.
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Shutdown mode, the PLL, the HSI, the LSI and the HSE oscillators are switched
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        off. The voltage regulator is disabled and Vcore domain is powered off.
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and registers contents are lost except for registers in the Backup domain.
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        The BOR is not available.
ARM GAS  /tmp/ccF8hraL.s 			page 52


 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSHUTDOWNMode(void)
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1881              		.loc 1 988 0
 1882              		.cfi_startproc
 1883              		@ args = 0, pretend = 0, frame = 0
 1884              		@ frame_needed = 0, uses_anonymous_args = 0
 1885              		@ link register save eliminated.
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set Shutdown mode */
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_SHUTDOWN);
 1886              		.loc 1 991 0
 1887 0000 064A     		ldr	r2, .L181
 1888 0002 1368     		ldr	r3, [r2]
 1889 0004 23F00703 		bic	r3, r3, #7
 1890 0008 43F00403 		orr	r3, r3, #4
 1891 000c 1360     		str	r3, [r2]
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1892              		.loc 1 994 0
 1893 000e 044A     		ldr	r2, .L181+4
 1894 0010 1369     		ldr	r3, [r2, #16]
 1895 0012 43F00403 		orr	r3, r3, #4
 1896 0016 1361     		str	r3, [r2, #16]
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* This option is used to ensure that store operations are completed */
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined ( __CC_ARM)
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   __force_stores();
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Request Wait For Interrupt */
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   __WFI();
 1897              		.loc 1 1001 0
 1898              		.syntax unified
 1899              	@ 1001 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 1900 0018 30BF     		wfi
 1901              	@ 0 "" 2
1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1902              		.loc 1 1002 0
 1903              		.thumb
 1904              		.syntax unified
 1905 001a 7047     		bx	lr
 1906              	.L182:
 1907              		.align	2
 1908              	.L181:
 1909 001c 00700040 		.word	1073770496
 1910 0020 00ED00E0 		.word	-536810240
 1911              		.cfi_endproc
 1912              	.LFE356:
 1914              		.section	.text.HAL_PWREx_PVM1Callback,"ax",%progbits
 1915              		.align	1
 1916              		.weak	HAL_PWREx_PVM1Callback
 1917              		.syntax unified
 1918              		.thumb
 1919              		.thumb_func
ARM GAS  /tmp/ccF8hraL.s 			page 53


 1920              		.fpu fpv4-sp-d16
 1922              	HAL_PWREx_PVM1Callback:
 1923              	.LFB358:
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief This function handles the PWR PVD/PVMx interrupt request.
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note This API should be called under the PVD_PVM_IRQHandler().
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_PVD_PVM_IRQHandler(void)
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != 0U)
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVD interrupt user callback */
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWR_PVDCallback();
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVD exti pending bit */
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Next, successively check PVMx exti flags */
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM1_EXTI_GET_FLAG() != 0U)
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM1 interrupt user callback */
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM1Callback();
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM1 exti pending bit */
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM1_EXTI_CLEAR_FLAG();
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM2_EXTI_GET_FLAG() != 0U)
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM2 interrupt user callback */
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM2Callback();
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM2 exti pending bit */
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM2_EXTI_CLEAR_FLAG();
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM3_EXTI_GET_FLAG() != 0U)
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM3 interrupt user callback */
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM3Callback();
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM3 exti pending bit */
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM3_EXTI_CLEAR_FLAG();
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM4_EXTI_GET_FLAG() != 0U)
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM4 interrupt user callback */
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM4Callback();
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccF8hraL.s 			page 54


1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM4 exti pending bit */
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM4_EXTI_CLEAR_FLAG();
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM1 interrupt callback
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM1Callback(void)
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1924              		.loc 1 1069 0
 1925              		.cfi_startproc
 1926              		@ args = 0, pretend = 0, frame = 0
 1927              		@ frame_needed = 0, uses_anonymous_args = 0
 1928              		@ link register save eliminated.
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM1Callback() API can be implemented in the user file
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1929              		.loc 1 1073 0
 1930 0000 7047     		bx	lr
 1931              		.cfi_endproc
 1932              	.LFE358:
 1934              		.section	.text.HAL_PWREx_PVM2Callback,"ax",%progbits
 1935              		.align	1
 1936              		.weak	HAL_PWREx_PVM2Callback
 1937              		.syntax unified
 1938              		.thumb
 1939              		.thumb_func
 1940              		.fpu fpv4-sp-d16
 1942              	HAL_PWREx_PVM2Callback:
 1943              	.LFB359:
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM2 interrupt callback
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM2Callback(void)
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1944              		.loc 1 1082 0
 1945              		.cfi_startproc
 1946              		@ args = 0, pretend = 0, frame = 0
 1947              		@ frame_needed = 0, uses_anonymous_args = 0
 1948              		@ link register save eliminated.
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM2Callback() API can be implemented in the user file
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1949              		.loc 1 1086 0
 1950 0000 7047     		bx	lr
 1951              		.cfi_endproc
 1952              	.LFE359:
ARM GAS  /tmp/ccF8hraL.s 			page 55


 1954              		.section	.text.HAL_PWREx_PVM3Callback,"ax",%progbits
 1955              		.align	1
 1956              		.weak	HAL_PWREx_PVM3Callback
 1957              		.syntax unified
 1958              		.thumb
 1959              		.thumb_func
 1960              		.fpu fpv4-sp-d16
 1962              	HAL_PWREx_PVM3Callback:
 1963              	.LFB360:
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM3 interrupt callback
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM3Callback(void)
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1964              		.loc 1 1094 0
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 0
 1967              		@ frame_needed = 0, uses_anonymous_args = 0
 1968              		@ link register save eliminated.
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM3Callback() API can be implemented in the user file
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1969              		.loc 1 1098 0
 1970 0000 7047     		bx	lr
 1971              		.cfi_endproc
 1972              	.LFE360:
 1974              		.section	.text.HAL_PWREx_PVM4Callback,"ax",%progbits
 1975              		.align	1
 1976              		.weak	HAL_PWREx_PVM4Callback
 1977              		.syntax unified
 1978              		.thumb
 1979              		.thumb_func
 1980              		.fpu fpv4-sp-d16
 1982              	HAL_PWREx_PVM4Callback:
 1983              	.LFB361:
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM4 interrupt callback
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM4Callback(void)
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1984              		.loc 1 1105 0
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 0
 1987              		@ frame_needed = 0, uses_anonymous_args = 0
 1988              		@ link register save eliminated.
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM4Callback() API can be implemented in the user file
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1989              		.loc 1 1109 0
 1990 0000 7047     		bx	lr
ARM GAS  /tmp/ccF8hraL.s 			page 56


 1991              		.cfi_endproc
 1992              	.LFE361:
 1994              		.section	.text.HAL_PWREx_PVD_PVM_IRQHandler,"ax",%progbits
 1995              		.align	1
 1996              		.global	HAL_PWREx_PVD_PVM_IRQHandler
 1997              		.syntax unified
 1998              		.thumb
 1999              		.thumb_func
 2000              		.fpu fpv4-sp-d16
 2002              	HAL_PWREx_PVD_PVM_IRQHandler:
 2003              	.LFB357:
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
 2004              		.loc 1 1013 0
 2005              		.cfi_startproc
 2006              		@ args = 0, pretend = 0, frame = 0
 2007              		@ frame_needed = 0, uses_anonymous_args = 0
 2008 0000 08B5     		push	{r3, lr}
 2009              	.LCFI0:
 2010              		.cfi_def_cfa_offset 8
 2011              		.cfi_offset 3, -8
 2012              		.cfi_offset 14, -4
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 2013              		.loc 1 1015 0
 2014 0002 1C4B     		ldr	r3, .L199
 2015 0004 5B69     		ldr	r3, [r3, #20]
 2016 0006 13F4803F 		tst	r3, #65536
 2017 000a 14D1     		bne	.L194
 2018              	.L188:
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 2019              		.loc 1 1025 0
 2020 000c 194B     		ldr	r3, .L199
 2021 000e 5B6B     		ldr	r3, [r3, #52]
 2022 0010 13F0080F 		tst	r3, #8
 2023 0014 16D1     		bne	.L195
 2024              	.L189:
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 2025              		.loc 1 1035 0
 2026 0016 174B     		ldr	r3, .L199
 2027 0018 5B6B     		ldr	r3, [r3, #52]
 2028 001a 13F0100F 		tst	r3, #16
 2029 001e 17D1     		bne	.L196
 2030              	.L190:
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 2031              		.loc 1 1044 0
 2032 0020 144B     		ldr	r3, .L199
 2033 0022 5B6B     		ldr	r3, [r3, #52]
 2034 0024 13F0200F 		tst	r3, #32
 2035 0028 18D1     		bne	.L197
 2036              	.L191:
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 2037              		.loc 1 1052 0
 2038 002a 124B     		ldr	r3, .L199
 2039 002c 5B6B     		ldr	r3, [r3, #52]
 2040 002e 13F0400F 		tst	r3, #64
 2041 0032 19D1     		bne	.L198
 2042              	.L187:
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccF8hraL.s 			page 57


 2043              		.loc 1 1060 0
 2044 0034 08BD     		pop	{r3, pc}
 2045              	.L194:
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 2046              		.loc 1 1018 0
 2047 0036 FFF7FEFF 		bl	HAL_PWR_PVDCallback
 2048              	.LVL137:
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 2049              		.loc 1 1021 0
 2050 003a 0E4B     		ldr	r3, .L199
 2051 003c 4FF48032 		mov	r2, #65536
 2052 0040 5A61     		str	r2, [r3, #20]
 2053 0042 E3E7     		b	.L188
 2054              	.L195:
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 2055              		.loc 1 1028 0
 2056 0044 FFF7FEFF 		bl	HAL_PWREx_PVM1Callback
 2057              	.LVL138:
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 2058              		.loc 1 1031 0
 2059 0048 0A4B     		ldr	r3, .L199
 2060 004a 0822     		movs	r2, #8
 2061 004c 5A63     		str	r2, [r3, #52]
 2062 004e E2E7     		b	.L189
 2063              	.L196:
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 2064              		.loc 1 1038 0
 2065 0050 FFF7FEFF 		bl	HAL_PWREx_PVM2Callback
 2066              	.LVL139:
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 2067              		.loc 1 1041 0
 2068 0054 074B     		ldr	r3, .L199
 2069 0056 1022     		movs	r2, #16
 2070 0058 5A63     		str	r2, [r3, #52]
 2071 005a E1E7     		b	.L190
 2072              	.L197:
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 2073              		.loc 1 1047 0
 2074 005c FFF7FEFF 		bl	HAL_PWREx_PVM3Callback
 2075              	.LVL140:
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 2076              		.loc 1 1050 0
 2077 0060 044B     		ldr	r3, .L199
 2078 0062 2022     		movs	r2, #32
 2079 0064 5A63     		str	r2, [r3, #52]
 2080 0066 E0E7     		b	.L191
 2081              	.L198:
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 2082              		.loc 1 1055 0
 2083 0068 FFF7FEFF 		bl	HAL_PWREx_PVM4Callback
 2084              	.LVL141:
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 2085              		.loc 1 1058 0
 2086 006c 014B     		ldr	r3, .L199
 2087 006e 4022     		movs	r2, #64
 2088 0070 5A63     		str	r2, [r3, #52]
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccF8hraL.s 			page 58


 2089              		.loc 1 1060 0
 2090 0072 DFE7     		b	.L187
 2091              	.L200:
 2092              		.align	2
 2093              	.L199:
 2094 0074 00040140 		.word	1073808384
 2095              		.cfi_endproc
 2096              	.LFE357:
 2098              		.section	.text.HAL_PWREx_EnableUCPDStandbyMode,"ax",%progbits
 2099              		.align	1
 2100              		.global	HAL_PWREx_EnableUCPDStandbyMode
 2101              		.syntax unified
 2102              		.thumb
 2103              		.thumb_func
 2104              		.fpu fpv4-sp-d16
 2106              	HAL_PWREx_EnableUCPDStandbyMode:
 2107              	.LFB362:
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_UCPD_STDBY)
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable UCPD configuration memorization in Standby.
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableUCPDStandbyMode(void)
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2108              		.loc 1 1117 0
 2109              		.cfi_startproc
 2110              		@ args = 0, pretend = 0, frame = 0
 2111              		@ frame_needed = 0, uses_anonymous_args = 0
 2112              		@ link register save eliminated.
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Memorize UCPD configuration when entering standby mode */
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_UCPD_STDBY);
 2113              		.loc 1 1119 0
 2114 0000 024A     		ldr	r2, .L202
 2115 0002 9368     		ldr	r3, [r2, #8]
 2116 0004 43F40053 		orr	r3, r3, #8192
 2117 0008 9360     		str	r3, [r2, #8]
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2118              		.loc 1 1120 0
 2119 000a 7047     		bx	lr
 2120              	.L203:
 2121              		.align	2
 2122              	.L202:
 2123 000c 00700040 		.word	1073770496
 2124              		.cfi_endproc
 2125              	.LFE362:
 2127              		.section	.text.HAL_PWREx_DisableUCPDStandbyMode,"ax",%progbits
 2128              		.align	1
 2129              		.global	HAL_PWREx_DisableUCPDStandbyMode
 2130              		.syntax unified
 2131              		.thumb
 2132              		.thumb_func
 2133              		.fpu fpv4-sp-d16
 2135              	HAL_PWREx_DisableUCPDStandbyMode:
 2136              	.LFB363:
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
ARM GAS  /tmp/ccF8hraL.s 			page 59


1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable UCPD configuration memorization in Standby.
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  This function must be called on exiting the Standby mode and before any UCPD
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        configuration update.
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableUCPDStandbyMode(void)
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2137              		.loc 1 1129 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
 2141              		@ link register save eliminated.
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Write 0 immediately after Standby exit when using UCPD,
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      and before writing any UCPD registers */
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_UCPD_STDBY);
 2142              		.loc 1 1132 0
 2143 0000 024A     		ldr	r2, .L205
 2144 0002 9368     		ldr	r3, [r2, #8]
 2145 0004 23F40053 		bic	r3, r3, #8192
 2146 0008 9360     		str	r3, [r2, #8]
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2147              		.loc 1 1133 0
 2148 000a 7047     		bx	lr
 2149              	.L206:
 2150              		.align	2
 2151              	.L205:
 2152 000c 00700040 		.word	1073770496
 2153              		.cfi_endproc
 2154              	.LFE363:
 2156              		.section	.text.HAL_PWREx_EnableUCPDDeadBattery,"ax",%progbits
 2157              		.align	1
 2158              		.global	HAL_PWREx_EnableUCPDDeadBattery
 2159              		.syntax unified
 2160              		.thumb
 2161              		.thumb_func
 2162              		.fpu fpv4-sp-d16
 2164              	HAL_PWREx_EnableUCPDDeadBattery:
 2165              	.LFB364:
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR3_UCPD_STDBY */
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_UCPD_DBDIS)
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the USB Type-C dead battery pull-down behavior
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        on UCPDx_CC1 and UCPDx_CC2 pins
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableUCPDDeadBattery(void)
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2166              		.loc 1 1143 0
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 0
 2169              		@ frame_needed = 0, uses_anonymous_args = 0
 2170              		@ link register save eliminated.
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Write 0 to enable the USB Type-C dead battery pull-down behavior */
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
 2171              		.loc 1 1145 0
 2172 0000 024A     		ldr	r2, .L208
ARM GAS  /tmp/ccF8hraL.s 			page 60


 2173 0002 9368     		ldr	r3, [r2, #8]
 2174 0004 23F48043 		bic	r3, r3, #16384
 2175 0008 9360     		str	r3, [r2, #8]
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2176              		.loc 1 1146 0
 2177 000a 7047     		bx	lr
 2178              	.L209:
 2179              		.align	2
 2180              	.L208:
 2181 000c 00700040 		.word	1073770496
 2182              		.cfi_endproc
 2183              	.LFE364:
 2185              		.section	.text.HAL_PWREx_DisableUCPDDeadBattery,"ax",%progbits
 2186              		.align	1
 2187              		.global	HAL_PWREx_DisableUCPDDeadBattery
 2188              		.syntax unified
 2189              		.thumb
 2190              		.thumb_func
 2191              		.fpu fpv4-sp-d16
 2193              	HAL_PWREx_DisableUCPDDeadBattery:
 2194              	.LFB365:
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the USB Type-C dead battery pull-down behavior
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        on UCPDx_CC1 and UCPDx_CC2 pins
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note After exiting reset, the USB Type-C dead battery behavior will be enabled,
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       which may have a pull-down effect on CC1 and CC2 pins.
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       It is recommended to disable it in all cases, either to stop this pull-down
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       or to hand over control to the UCPD (which should therefore be
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       initialized before doing the disable).
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableUCPDDeadBattery(void)
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2195              		.loc 1 1159 0
 2196              		.cfi_startproc
 2197              		@ args = 0, pretend = 0, frame = 0
 2198              		@ frame_needed = 0, uses_anonymous_args = 0
 2199              		@ link register save eliminated.
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Write 1 to disable the USB Type-C dead battery pull-down behavior */
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
 2200              		.loc 1 1161 0
 2201 0000 024A     		ldr	r2, .L211
 2202 0002 9368     		ldr	r3, [r2, #8]
 2203 0004 43F48043 		orr	r3, r3, #16384
 2204 0008 9360     		str	r3, [r2, #8]
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2205              		.loc 1 1162 0
 2206 000a 7047     		bx	lr
 2207              	.L212:
 2208              		.align	2
 2209              	.L211:
 2210 000c 00700040 		.word	1073770496
 2211              		.cfi_endproc
 2212              	.LFE365:
 2214              		.text
 2215              	.Letext0:
ARM GAS  /tmp/ccF8hraL.s 			page 61


 2216              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2217              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2218              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2219              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 2220              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g484xx.h"
 2221              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 2222              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 2223              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 2224              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 2225              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 2226              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr.h"
ARM GAS  /tmp/ccF8hraL.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_pwr_ex.c
     /tmp/ccF8hraL.s:18     .text.HAL_PWREx_GetVoltageRange:0000000000000000 $t
     /tmp/ccF8hraL.s:25     .text.HAL_PWREx_GetVoltageRange:0000000000000000 HAL_PWREx_GetVoltageRange
     /tmp/ccF8hraL.s:59     .text.HAL_PWREx_GetVoltageRange:000000000000002c $d
     /tmp/ccF8hraL.s:64     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 $t
     /tmp/ccF8hraL.s:71     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 HAL_PWREx_ControlVoltageScaling
     /tmp/ccF8hraL.s:241    .text.HAL_PWREx_ControlVoltageScaling:0000000000000100 $d
     /tmp/ccF8hraL.s:248    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 $t
     /tmp/ccF8hraL.s:255    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 HAL_PWREx_EnableBatteryCharging
     /tmp/ccF8hraL.s:279    .text.HAL_PWREx_EnableBatteryCharging:0000000000000018 $d
     /tmp/ccF8hraL.s:284    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 $t
     /tmp/ccF8hraL.s:291    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 HAL_PWREx_DisableBatteryCharging
     /tmp/ccF8hraL.s:308    .text.HAL_PWREx_DisableBatteryCharging:000000000000000c $d
     /tmp/ccF8hraL.s:313    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 $t
     /tmp/ccF8hraL.s:320    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 HAL_PWREx_EnableInternalWakeUpLine
     /tmp/ccF8hraL.s:337    .text.HAL_PWREx_EnableInternalWakeUpLine:000000000000000c $d
     /tmp/ccF8hraL.s:342    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 $t
     /tmp/ccF8hraL.s:349    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 HAL_PWREx_DisableInternalWakeUpLine
     /tmp/ccF8hraL.s:366    .text.HAL_PWREx_DisableInternalWakeUpLine:000000000000000c $d
     /tmp/ccF8hraL.s:371    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 $t
     /tmp/ccF8hraL.s:378    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 HAL_PWREx_EnableGPIOPullUp
     /tmp/ccF8hraL.s:391    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000008 $d
     /tmp/ccF8hraL.s:533    .text.HAL_PWREx_EnableGPIOPullUp:00000000000000b8 $d
     /tmp/ccF8hraL.s:538    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 $t
     /tmp/ccF8hraL.s:545    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 HAL_PWREx_DisableGPIOPullUp
     /tmp/ccF8hraL.s:558    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000008 $d
     /tmp/ccF8hraL.s:669    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000080 $d
     /tmp/ccF8hraL.s:674    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 $t
     /tmp/ccF8hraL.s:681    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 HAL_PWREx_EnableGPIOPullDown
     /tmp/ccF8hraL.s:694    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000008 $d
     /tmp/ccF8hraL.s:836    .text.HAL_PWREx_EnableGPIOPullDown:00000000000000b8 $d
     /tmp/ccF8hraL.s:841    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 $t
     /tmp/ccF8hraL.s:848    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 HAL_PWREx_DisableGPIOPullDown
     /tmp/ccF8hraL.s:861    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000008 $d
     /tmp/ccF8hraL.s:973    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000084 $d
     /tmp/ccF8hraL.s:978    .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 $t
     /tmp/ccF8hraL.s:985    .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 HAL_PWREx_EnablePullUpPullDownConfig
     /tmp/ccF8hraL.s:1002   .text.HAL_PWREx_EnablePullUpPullDownConfig:000000000000000c $d
     /tmp/ccF8hraL.s:1007   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 $t
     /tmp/ccF8hraL.s:1014   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 HAL_PWREx_DisablePullUpPullDownConfig
     /tmp/ccF8hraL.s:1031   .text.HAL_PWREx_DisablePullUpPullDownConfig:000000000000000c $d
     /tmp/ccF8hraL.s:1036   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 $t
     /tmp/ccF8hraL.s:1043   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 HAL_PWREx_EnableSRAM2ContentRetention
     /tmp/ccF8hraL.s:1060   .text.HAL_PWREx_EnableSRAM2ContentRetention:000000000000000c $d
     /tmp/ccF8hraL.s:1065   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 $t
     /tmp/ccF8hraL.s:1072   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 HAL_PWREx_DisableSRAM2ContentRetention
     /tmp/ccF8hraL.s:1089   .text.HAL_PWREx_DisableSRAM2ContentRetention:000000000000000c $d
     /tmp/ccF8hraL.s:1094   .text.HAL_PWREx_EnablePVM1:0000000000000000 $t
     /tmp/ccF8hraL.s:1101   .text.HAL_PWREx_EnablePVM1:0000000000000000 HAL_PWREx_EnablePVM1
     /tmp/ccF8hraL.s:1118   .text.HAL_PWREx_EnablePVM1:000000000000000c $d
     /tmp/ccF8hraL.s:1123   .text.HAL_PWREx_DisablePVM1:0000000000000000 $t
     /tmp/ccF8hraL.s:1130   .text.HAL_PWREx_DisablePVM1:0000000000000000 HAL_PWREx_DisablePVM1
     /tmp/ccF8hraL.s:1147   .text.HAL_PWREx_DisablePVM1:000000000000000c $d
     /tmp/ccF8hraL.s:1152   .text.HAL_PWREx_EnablePVM2:0000000000000000 $t
     /tmp/ccF8hraL.s:1159   .text.HAL_PWREx_EnablePVM2:0000000000000000 HAL_PWREx_EnablePVM2
     /tmp/ccF8hraL.s:1176   .text.HAL_PWREx_EnablePVM2:000000000000000c $d
ARM GAS  /tmp/ccF8hraL.s 			page 63


     /tmp/ccF8hraL.s:1181   .text.HAL_PWREx_DisablePVM2:0000000000000000 $t
     /tmp/ccF8hraL.s:1188   .text.HAL_PWREx_DisablePVM2:0000000000000000 HAL_PWREx_DisablePVM2
     /tmp/ccF8hraL.s:1205   .text.HAL_PWREx_DisablePVM2:000000000000000c $d
     /tmp/ccF8hraL.s:1210   .text.HAL_PWREx_EnablePVM3:0000000000000000 $t
     /tmp/ccF8hraL.s:1217   .text.HAL_PWREx_EnablePVM3:0000000000000000 HAL_PWREx_EnablePVM3
     /tmp/ccF8hraL.s:1234   .text.HAL_PWREx_EnablePVM3:000000000000000c $d
     /tmp/ccF8hraL.s:1239   .text.HAL_PWREx_DisablePVM3:0000000000000000 $t
     /tmp/ccF8hraL.s:1246   .text.HAL_PWREx_DisablePVM3:0000000000000000 HAL_PWREx_DisablePVM3
     /tmp/ccF8hraL.s:1263   .text.HAL_PWREx_DisablePVM3:000000000000000c $d
     /tmp/ccF8hraL.s:1268   .text.HAL_PWREx_EnablePVM4:0000000000000000 $t
     /tmp/ccF8hraL.s:1275   .text.HAL_PWREx_EnablePVM4:0000000000000000 HAL_PWREx_EnablePVM4
     /tmp/ccF8hraL.s:1292   .text.HAL_PWREx_EnablePVM4:000000000000000c $d
     /tmp/ccF8hraL.s:1297   .text.HAL_PWREx_DisablePVM4:0000000000000000 $t
     /tmp/ccF8hraL.s:1304   .text.HAL_PWREx_DisablePVM4:0000000000000000 HAL_PWREx_DisablePVM4
     /tmp/ccF8hraL.s:1321   .text.HAL_PWREx_DisablePVM4:000000000000000c $d
     /tmp/ccF8hraL.s:1326   .text.HAL_PWREx_ConfigPVM:0000000000000000 $t
     /tmp/ccF8hraL.s:1333   .text.HAL_PWREx_ConfigPVM:0000000000000000 HAL_PWREx_ConfigPVM
     /tmp/ccF8hraL.s:1630   .text.HAL_PWREx_ConfigPVM:00000000000001e8 $d
     /tmp/ccF8hraL.s:1635   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 $t
     /tmp/ccF8hraL.s:1642   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 HAL_PWREx_EnableLowPowerRunMode
     /tmp/ccF8hraL.s:1659   .text.HAL_PWREx_EnableLowPowerRunMode:000000000000000c $d
     /tmp/ccF8hraL.s:1664   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 $t
     /tmp/ccF8hraL.s:1671   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 HAL_PWREx_DisableLowPowerRunMode
     /tmp/ccF8hraL.s:1727   .text.HAL_PWREx_DisableLowPowerRunMode:000000000000004c $d
     /tmp/ccF8hraL.s:1733   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 $t
     /tmp/ccF8hraL.s:1740   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 HAL_PWREx_EnterSTOP0Mode
     /tmp/ccF8hraL.s:1796   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000030 $d
     /tmp/ccF8hraL.s:1802   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 $t
     /tmp/ccF8hraL.s:1809   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 HAL_PWREx_EnterSTOP1Mode
     /tmp/ccF8hraL.s:1866   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000034 $d
     /tmp/ccF8hraL.s:1872   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 $t
     /tmp/ccF8hraL.s:1879   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 HAL_PWREx_EnterSHUTDOWNMode
     /tmp/ccF8hraL.s:1909   .text.HAL_PWREx_EnterSHUTDOWNMode:000000000000001c $d
     /tmp/ccF8hraL.s:1915   .text.HAL_PWREx_PVM1Callback:0000000000000000 $t
     /tmp/ccF8hraL.s:1922   .text.HAL_PWREx_PVM1Callback:0000000000000000 HAL_PWREx_PVM1Callback
     /tmp/ccF8hraL.s:1935   .text.HAL_PWREx_PVM2Callback:0000000000000000 $t
     /tmp/ccF8hraL.s:1942   .text.HAL_PWREx_PVM2Callback:0000000000000000 HAL_PWREx_PVM2Callback
     /tmp/ccF8hraL.s:1955   .text.HAL_PWREx_PVM3Callback:0000000000000000 $t
     /tmp/ccF8hraL.s:1962   .text.HAL_PWREx_PVM3Callback:0000000000000000 HAL_PWREx_PVM3Callback
     /tmp/ccF8hraL.s:1975   .text.HAL_PWREx_PVM4Callback:0000000000000000 $t
     /tmp/ccF8hraL.s:1982   .text.HAL_PWREx_PVM4Callback:0000000000000000 HAL_PWREx_PVM4Callback
     /tmp/ccF8hraL.s:1995   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 $t
     /tmp/ccF8hraL.s:2002   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 HAL_PWREx_PVD_PVM_IRQHandler
     /tmp/ccF8hraL.s:2094   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000074 $d
     /tmp/ccF8hraL.s:2099   .text.HAL_PWREx_EnableUCPDStandbyMode:0000000000000000 $t
     /tmp/ccF8hraL.s:2106   .text.HAL_PWREx_EnableUCPDStandbyMode:0000000000000000 HAL_PWREx_EnableUCPDStandbyMode
     /tmp/ccF8hraL.s:2123   .text.HAL_PWREx_EnableUCPDStandbyMode:000000000000000c $d
     /tmp/ccF8hraL.s:2128   .text.HAL_PWREx_DisableUCPDStandbyMode:0000000000000000 $t
     /tmp/ccF8hraL.s:2135   .text.HAL_PWREx_DisableUCPDStandbyMode:0000000000000000 HAL_PWREx_DisableUCPDStandbyMode
     /tmp/ccF8hraL.s:2152   .text.HAL_PWREx_DisableUCPDStandbyMode:000000000000000c $d
     /tmp/ccF8hraL.s:2157   .text.HAL_PWREx_EnableUCPDDeadBattery:0000000000000000 $t
     /tmp/ccF8hraL.s:2164   .text.HAL_PWREx_EnableUCPDDeadBattery:0000000000000000 HAL_PWREx_EnableUCPDDeadBattery
     /tmp/ccF8hraL.s:2181   .text.HAL_PWREx_EnableUCPDDeadBattery:000000000000000c $d
     /tmp/ccF8hraL.s:2186   .text.HAL_PWREx_DisableUCPDDeadBattery:0000000000000000 $t
     /tmp/ccF8hraL.s:2193   .text.HAL_PWREx_DisableUCPDDeadBattery:0000000000000000 HAL_PWREx_DisableUCPDDeadBattery
     /tmp/ccF8hraL.s:2210   .text.HAL_PWREx_DisableUCPDDeadBattery:000000000000000c $d
     /tmp/ccF8hraL.s:398    .text.HAL_PWREx_EnableGPIOPullUp:000000000000000f $d
ARM GAS  /tmp/ccF8hraL.s 			page 64


     /tmp/ccF8hraL.s:398    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000010 $t
     /tmp/ccF8hraL.s:565    .text.HAL_PWREx_DisableGPIOPullUp:000000000000000f $d
     /tmp/ccF8hraL.s:565    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000010 $t
     /tmp/ccF8hraL.s:701    .text.HAL_PWREx_EnableGPIOPullDown:000000000000000f $d
     /tmp/ccF8hraL.s:701    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000010 $t
     /tmp/ccF8hraL.s:868    .text.HAL_PWREx_DisableGPIOPullDown:000000000000000f $d
     /tmp/ccF8hraL.s:868    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000010 $t

UNDEFINED SYMBOLS
SystemCoreClock
HAL_PWR_PVDCallback
